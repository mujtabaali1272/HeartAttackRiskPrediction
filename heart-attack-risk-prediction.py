{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "811f691f",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-03-24T21:05:33.694178Z",
     "iopub.status.busy": "2024-03-24T21:05:33.693378Z",
     "iopub.status.idle": "2024-03-24T21:05:35.065892Z",
     "shell.execute_reply": "2024-03-24T21:05:35.064462Z",
     "shell.execute_reply.started": "2024-03-24T21:05:33.694119Z"
    },
    "papermill": {
     "duration": 0.048356,
     "end_time": "2024-05-11T11:16:18.494440",
     "exception": false,
     "start_time": "2024-05-11T11:16:18.446084",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Task.1:**\n",
    "\n",
    "The below code cell is a **starter code** provided by kaggle. It will show us the **location of file** which we can use later."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0b863635",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:18.589702Z",
     "iopub.status.busy": "2024-05-11T11:16:18.588793Z",
     "iopub.status.idle": "2024-05-11T11:16:19.716909Z",
     "shell.execute_reply": "2024-05-11T11:16:19.715239Z"
    },
    "papermill": {
     "duration": 1.17897,
     "end_time": "2024-05-11T11:16:19.719853",
     "exception": false,
     "start_time": "2024-05-11T11:16:18.540883",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/heart-attack-prediction-dataset/heart_attack_prediction_dataset.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6638399",
   "metadata": {
    "papermill": {
     "duration": 0.043783,
     "end_time": "2024-05-11T11:16:19.810509",
     "exception": false,
     "start_time": "2024-05-11T11:16:19.766726",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "/kaggle/input/heart-attack-prediction-dataset/heart_attack_prediction_dataset.csv"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ebc35ac2",
   "metadata": {
    "papermill": {
     "duration": 0.045971,
     "end_time": "2024-05-11T11:16:19.901999",
     "exception": false,
     "start_time": "2024-05-11T11:16:19.856028",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Packages** such as pandas, numpy, matplotlib, and seaborn will be used for data analysis and visualisation. These packages are **imported wth their common names** such as pd, np, plt, and sns."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f1764d48",
   "metadata": {
    "papermill": {
     "duration": 0.04257,
     "end_time": "2024-05-11T11:16:19.987599",
     "exception": false,
     "start_time": "2024-05-11T11:16:19.945029",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Import Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0bf3f6db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:20.078114Z",
     "iopub.status.busy": "2024-05-11T11:16:20.077488Z",
     "iopub.status.idle": "2024-05-11T11:16:21.856020Z",
     "shell.execute_reply": "2024-05-11T11:16:21.854402Z"
    },
    "papermill": {
     "duration": 1.828,
     "end_time": "2024-05-11T11:16:21.859478",
     "exception": false,
     "start_time": "2024-05-11T11:16:20.031478",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# import required  packages\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file\n",
    "import matplotlib.pyplot as plt # visualisation\n",
    "import seaborn as sns # visualisation\n",
    "\n",
    "import warnings\n",
    "\n",
    "warnings.filterwarnings(action=\"ignore\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a801754",
   "metadata": {
    "papermill": {
     "duration": 0.109171,
     "end_time": "2024-05-11T11:16:22.016157",
     "exception": false,
     "start_time": "2024-05-11T11:16:21.906986",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "read_csv function allows us to **read csv files** and store them as **DataFrames**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2054c84d",
   "metadata": {
    "papermill": {
     "duration": 0.043065,
     "end_time": "2024-05-11T11:16:22.105529",
     "exception": false,
     "start_time": "2024-05-11T11:16:22.062464",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Uploading csv file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b2520315",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:22.196937Z",
     "iopub.status.busy": "2024-05-11T11:16:22.196450Z",
     "iopub.status.idle": "2024-05-11T11:16:22.295196Z",
     "shell.execute_reply": "2024-05-11T11:16:22.293600Z"
    },
    "papermill": {
     "duration": 0.148134,
     "end_time": "2024-05-11T11:16:22.298268",
     "exception": false,
     "start_time": "2024-05-11T11:16:22.150134",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Read csv files\n",
    "df = pd.read_csv(\"/kaggle/input/heart-attack-prediction-dataset/heart_attack_prediction_dataset.csv\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3614b8c",
   "metadata": {
    "papermill": {
     "duration": 0.043167,
     "end_time": "2024-05-11T11:16:22.385272",
     "exception": false,
     "start_time": "2024-05-11T11:16:22.342105",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Whole dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "703b13e9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:22.475402Z",
     "iopub.status.busy": "2024-05-11T11:16:22.474920Z",
     "iopub.status.idle": "2024-05-11T11:16:22.532231Z",
     "shell.execute_reply": "2024-05-11T11:16:22.530994Z"
    },
    "papermill": {
     "duration": 0.105656,
     "end_time": "2024-05-11T11:16:22.535134",
     "exception": false,
     "start_time": "2024-05-11T11:16:22.429478",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Patient ID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Blood Pressure</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>...</th>\n",
       "      <th>Sedentary Hours Per Day</th>\n",
       "      <th>Income</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity Days Per Week</th>\n",
       "      <th>Sleep Hours Per Day</th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Hemisphere</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BMW7812</td>\n",
       "      <td>67</td>\n",
       "      <td>Male</td>\n",
       "      <td>208</td>\n",
       "      <td>158/88</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.615001</td>\n",
       "      <td>261404</td>\n",
       "      <td>31.251233</td>\n",
       "      <td>286</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CZE1114</td>\n",
       "      <td>21</td>\n",
       "      <td>Male</td>\n",
       "      <td>389</td>\n",
       "      <td>165/93</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>4.963459</td>\n",
       "      <td>285768</td>\n",
       "      <td>27.194973</td>\n",
       "      <td>235</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BNI9906</td>\n",
       "      <td>21</td>\n",
       "      <td>Female</td>\n",
       "      <td>324</td>\n",
       "      <td>174/99</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>9.463426</td>\n",
       "      <td>235282</td>\n",
       "      <td>28.176571</td>\n",
       "      <td>587</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>France</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>JLN3497</td>\n",
       "      <td>84</td>\n",
       "      <td>Male</td>\n",
       "      <td>383</td>\n",
       "      <td>163/100</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.648981</td>\n",
       "      <td>125640</td>\n",
       "      <td>36.464704</td>\n",
       "      <td>378</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>GFO8847</td>\n",
       "      <td>66</td>\n",
       "      <td>Male</td>\n",
       "      <td>318</td>\n",
       "      <td>91/88</td>\n",
       "      <td>93</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.514821</td>\n",
       "      <td>160555</td>\n",
       "      <td>21.809144</td>\n",
       "      <td>231</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>Thailand</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8758</th>\n",
       "      <td>MSV9918</td>\n",
       "      <td>60</td>\n",
       "      <td>Male</td>\n",
       "      <td>121</td>\n",
       "      <td>94/76</td>\n",
       "      <td>61</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10.806373</td>\n",
       "      <td>235420</td>\n",
       "      <td>19.655895</td>\n",
       "      <td>67</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>Thailand</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8759</th>\n",
       "      <td>QSV6764</td>\n",
       "      <td>28</td>\n",
       "      <td>Female</td>\n",
       "      <td>120</td>\n",
       "      <td>157/102</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>3.833038</td>\n",
       "      <td>217881</td>\n",
       "      <td>23.993866</td>\n",
       "      <td>617</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8760</th>\n",
       "      <td>XKA5925</td>\n",
       "      <td>47</td>\n",
       "      <td>Male</td>\n",
       "      <td>250</td>\n",
       "      <td>161/75</td>\n",
       "      <td>105</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>2.375214</td>\n",
       "      <td>36998</td>\n",
       "      <td>35.406146</td>\n",
       "      <td>527</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8761</th>\n",
       "      <td>EPE6801</td>\n",
       "      <td>36</td>\n",
       "      <td>Male</td>\n",
       "      <td>178</td>\n",
       "      <td>119/67</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.029104</td>\n",
       "      <td>209943</td>\n",
       "      <td>27.294020</td>\n",
       "      <td>114</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8762</th>\n",
       "      <td>ZWN9666</td>\n",
       "      <td>25</td>\n",
       "      <td>Female</td>\n",
       "      <td>356</td>\n",
       "      <td>138/67</td>\n",
       "      <td>75</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>9.005234</td>\n",
       "      <td>247338</td>\n",
       "      <td>32.914151</td>\n",
       "      <td>180</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8763 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Patient ID  Age     Sex  Cholesterol Blood Pressure  Heart Rate  \\\n",
       "0       BMW7812   67    Male          208         158/88          72   \n",
       "1       CZE1114   21    Male          389         165/93          98   \n",
       "2       BNI9906   21  Female          324         174/99          72   \n",
       "3       JLN3497   84    Male          383        163/100          73   \n",
       "4       GFO8847   66    Male          318          91/88          93   \n",
       "...         ...  ...     ...          ...            ...         ...   \n",
       "8758    MSV9918   60    Male          121          94/76          61   \n",
       "8759    QSV6764   28  Female          120        157/102          73   \n",
       "8760    XKA5925   47    Male          250         161/75         105   \n",
       "8761    EPE6801   36    Male          178         119/67          60   \n",
       "8762    ZWN9666   25  Female          356         138/67          75   \n",
       "\n",
       "      Diabetes  Family History  Smoking  Obesity  ...  \\\n",
       "0            0               0        1        0  ...   \n",
       "1            1               1        1        1  ...   \n",
       "2            1               0        0        0  ...   \n",
       "3            1               1        1        0  ...   \n",
       "4            1               1        1        1  ...   \n",
       "...        ...             ...      ...      ...  ...   \n",
       "8758         1               1        1        0  ...   \n",
       "8759         1               0        0        1  ...   \n",
       "8760         0               1        1        1  ...   \n",
       "8761         1               0        1        0  ...   \n",
       "8762         1               1        0        0  ...   \n",
       "\n",
       "      Sedentary Hours Per Day  Income        BMI  Triglycerides  \\\n",
       "0                    6.615001  261404  31.251233            286   \n",
       "1                    4.963459  285768  27.194973            235   \n",
       "2                    9.463426  235282  28.176571            587   \n",
       "3                    7.648981  125640  36.464704            378   \n",
       "4                    1.514821  160555  21.809144            231   \n",
       "...                       ...     ...        ...            ...   \n",
       "8758                10.806373  235420  19.655895             67   \n",
       "8759                 3.833038  217881  23.993866            617   \n",
       "8760                 2.375214   36998  35.406146            527   \n",
       "8761                 0.029104  209943  27.294020            114   \n",
       "8762                 9.005234  247338  32.914151            180   \n",
       "\n",
       "      Physical Activity Days Per Week  Sleep Hours Per Day         Country  \\\n",
       "0                                   0                    6       Argentina   \n",
       "1                                   1                    7          Canada   \n",
       "2                                   4                    4          France   \n",
       "3                                   3                    4          Canada   \n",
       "4                                   1                    5        Thailand   \n",
       "...                               ...                  ...             ...   \n",
       "8758                                7                    7        Thailand   \n",
       "8759                                4                    9          Canada   \n",
       "8760                                4                    4          Brazil   \n",
       "8761                                2                    8          Brazil   \n",
       "8762                                7                    4  United Kingdom   \n",
       "\n",
       "          Continent           Hemisphere  Heart Attack Risk  \n",
       "0     South America  Southern Hemisphere                  0  \n",
       "1     North America  Northern Hemisphere                  0  \n",
       "2            Europe  Northern Hemisphere                  0  \n",
       "3     North America  Northern Hemisphere                  0  \n",
       "4              Asia  Northern Hemisphere                  0  \n",
       "...             ...                  ...                ...  \n",
       "8758           Asia  Northern Hemisphere                  0  \n",
       "8759  North America  Northern Hemisphere                  0  \n",
       "8760  South America  Southern Hemisphere                  1  \n",
       "8761  South America  Southern Hemisphere                  0  \n",
       "8762         Europe  Northern Hemisphere                  1  \n",
       "\n",
       "[8763 rows x 26 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48a38379",
   "metadata": {
    "papermill": {
     "duration": 0.043445,
     "end_time": "2024-05-11T11:16:22.624335",
     "exception": false,
     "start_time": "2024-05-11T11:16:22.580890",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**head** and **tail** are the functions used to **view the data**. By default they show **first five** and **last five** rows respectively."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ea8e8cd",
   "metadata": {
    "papermill": {
     "duration": 0.043634,
     "end_time": "2024-05-11T11:16:22.711527",
     "exception": false,
     "start_time": "2024-05-11T11:16:22.667893",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Preprocessing\n",
    "## .head()\n",
    "#### head is used to show first five rows in the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f1c3d9d9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:22.801260Z",
     "iopub.status.busy": "2024-05-11T11:16:22.800764Z",
     "iopub.status.idle": "2024-05-11T11:16:22.826578Z",
     "shell.execute_reply": "2024-05-11T11:16:22.825039Z"
    },
    "papermill": {
     "duration": 0.074501,
     "end_time": "2024-05-11T11:16:22.829530",
     "exception": false,
     "start_time": "2024-05-11T11:16:22.755029",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Patient ID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Blood Pressure</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>...</th>\n",
       "      <th>Sedentary Hours Per Day</th>\n",
       "      <th>Income</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity Days Per Week</th>\n",
       "      <th>Sleep Hours Per Day</th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Hemisphere</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BMW7812</td>\n",
       "      <td>67</td>\n",
       "      <td>Male</td>\n",
       "      <td>208</td>\n",
       "      <td>158/88</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.615001</td>\n",
       "      <td>261404</td>\n",
       "      <td>31.251233</td>\n",
       "      <td>286</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CZE1114</td>\n",
       "      <td>21</td>\n",
       "      <td>Male</td>\n",
       "      <td>389</td>\n",
       "      <td>165/93</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>4.963459</td>\n",
       "      <td>285768</td>\n",
       "      <td>27.194973</td>\n",
       "      <td>235</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BNI9906</td>\n",
       "      <td>21</td>\n",
       "      <td>Female</td>\n",
       "      <td>324</td>\n",
       "      <td>174/99</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>9.463426</td>\n",
       "      <td>235282</td>\n",
       "      <td>28.176571</td>\n",
       "      <td>587</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>France</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>JLN3497</td>\n",
       "      <td>84</td>\n",
       "      <td>Male</td>\n",
       "      <td>383</td>\n",
       "      <td>163/100</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.648981</td>\n",
       "      <td>125640</td>\n",
       "      <td>36.464704</td>\n",
       "      <td>378</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>GFO8847</td>\n",
       "      <td>66</td>\n",
       "      <td>Male</td>\n",
       "      <td>318</td>\n",
       "      <td>91/88</td>\n",
       "      <td>93</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.514821</td>\n",
       "      <td>160555</td>\n",
       "      <td>21.809144</td>\n",
       "      <td>231</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>Thailand</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Patient ID  Age     Sex  Cholesterol Blood Pressure  Heart Rate  Diabetes  \\\n",
       "0    BMW7812   67    Male          208         158/88          72         0   \n",
       "1    CZE1114   21    Male          389         165/93          98         1   \n",
       "2    BNI9906   21  Female          324         174/99          72         1   \n",
       "3    JLN3497   84    Male          383        163/100          73         1   \n",
       "4    GFO8847   66    Male          318          91/88          93         1   \n",
       "\n",
       "   Family History  Smoking  Obesity  ...  Sedentary Hours Per Day  Income  \\\n",
       "0               0        1        0  ...                 6.615001  261404   \n",
       "1               1        1        1  ...                 4.963459  285768   \n",
       "2               0        0        0  ...                 9.463426  235282   \n",
       "3               1        1        0  ...                 7.648981  125640   \n",
       "4               1        1        1  ...                 1.514821  160555   \n",
       "\n",
       "         BMI  Triglycerides  Physical Activity Days Per Week  \\\n",
       "0  31.251233            286                                0   \n",
       "1  27.194973            235                                1   \n",
       "2  28.176571            587                                4   \n",
       "3  36.464704            378                                3   \n",
       "4  21.809144            231                                1   \n",
       "\n",
       "   Sleep Hours Per Day    Country      Continent           Hemisphere  \\\n",
       "0                    6  Argentina  South America  Southern Hemisphere   \n",
       "1                    7     Canada  North America  Northern Hemisphere   \n",
       "2                    4     France         Europe  Northern Hemisphere   \n",
       "3                    4     Canada  North America  Northern Hemisphere   \n",
       "4                    5   Thailand           Asia  Northern Hemisphere   \n",
       "\n",
       "   Heart Attack Risk  \n",
       "0                  0  \n",
       "1                  0  \n",
       "2                  0  \n",
       "3                  0  \n",
       "4                  0  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# print first five rows of dataset\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "718932f5",
   "metadata": {
    "papermill": {
     "duration": 0.046248,
     "end_time": "2024-05-11T11:16:22.920845",
     "exception": false,
     "start_time": "2024-05-11T11:16:22.874597",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .tail()\n",
    "#### tail is used to show last five rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d1e5e8d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:23.012447Z",
     "iopub.status.busy": "2024-05-11T11:16:23.011926Z",
     "iopub.status.idle": "2024-05-11T11:16:23.039968Z",
     "shell.execute_reply": "2024-05-11T11:16:23.038314Z"
    },
    "papermill": {
     "duration": 0.078056,
     "end_time": "2024-05-11T11:16:23.042800",
     "exception": false,
     "start_time": "2024-05-11T11:16:22.964744",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Patient ID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Blood Pressure</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>...</th>\n",
       "      <th>Sedentary Hours Per Day</th>\n",
       "      <th>Income</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity Days Per Week</th>\n",
       "      <th>Sleep Hours Per Day</th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Hemisphere</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8758</th>\n",
       "      <td>MSV9918</td>\n",
       "      <td>60</td>\n",
       "      <td>Male</td>\n",
       "      <td>121</td>\n",
       "      <td>94/76</td>\n",
       "      <td>61</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10.806373</td>\n",
       "      <td>235420</td>\n",
       "      <td>19.655895</td>\n",
       "      <td>67</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>Thailand</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8759</th>\n",
       "      <td>QSV6764</td>\n",
       "      <td>28</td>\n",
       "      <td>Female</td>\n",
       "      <td>120</td>\n",
       "      <td>157/102</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>3.833038</td>\n",
       "      <td>217881</td>\n",
       "      <td>23.993866</td>\n",
       "      <td>617</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8760</th>\n",
       "      <td>XKA5925</td>\n",
       "      <td>47</td>\n",
       "      <td>Male</td>\n",
       "      <td>250</td>\n",
       "      <td>161/75</td>\n",
       "      <td>105</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>2.375214</td>\n",
       "      <td>36998</td>\n",
       "      <td>35.406146</td>\n",
       "      <td>527</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8761</th>\n",
       "      <td>EPE6801</td>\n",
       "      <td>36</td>\n",
       "      <td>Male</td>\n",
       "      <td>178</td>\n",
       "      <td>119/67</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.029104</td>\n",
       "      <td>209943</td>\n",
       "      <td>27.294020</td>\n",
       "      <td>114</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8762</th>\n",
       "      <td>ZWN9666</td>\n",
       "      <td>25</td>\n",
       "      <td>Female</td>\n",
       "      <td>356</td>\n",
       "      <td>138/67</td>\n",
       "      <td>75</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>9.005234</td>\n",
       "      <td>247338</td>\n",
       "      <td>32.914151</td>\n",
       "      <td>180</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Patient ID  Age     Sex  Cholesterol Blood Pressure  Heart Rate  \\\n",
       "8758    MSV9918   60    Male          121          94/76          61   \n",
       "8759    QSV6764   28  Female          120        157/102          73   \n",
       "8760    XKA5925   47    Male          250         161/75         105   \n",
       "8761    EPE6801   36    Male          178         119/67          60   \n",
       "8762    ZWN9666   25  Female          356         138/67          75   \n",
       "\n",
       "      Diabetes  Family History  Smoking  Obesity  ...  \\\n",
       "8758         1               1        1        0  ...   \n",
       "8759         1               0        0        1  ...   \n",
       "8760         0               1        1        1  ...   \n",
       "8761         1               0        1        0  ...   \n",
       "8762         1               1        0        0  ...   \n",
       "\n",
       "      Sedentary Hours Per Day  Income        BMI  Triglycerides  \\\n",
       "8758                10.806373  235420  19.655895             67   \n",
       "8759                 3.833038  217881  23.993866            617   \n",
       "8760                 2.375214   36998  35.406146            527   \n",
       "8761                 0.029104  209943  27.294020            114   \n",
       "8762                 9.005234  247338  32.914151            180   \n",
       "\n",
       "      Physical Activity Days Per Week  Sleep Hours Per Day         Country  \\\n",
       "8758                                7                    7        Thailand   \n",
       "8759                                4                    9          Canada   \n",
       "8760                                4                    4          Brazil   \n",
       "8761                                2                    8          Brazil   \n",
       "8762                                7                    4  United Kingdom   \n",
       "\n",
       "          Continent           Hemisphere  Heart Attack Risk  \n",
       "8758           Asia  Northern Hemisphere                  0  \n",
       "8759  North America  Northern Hemisphere                  0  \n",
       "8760  South America  Southern Hemisphere                  1  \n",
       "8761  South America  Southern Hemisphere                  0  \n",
       "8762         Europe  Northern Hemisphere                  1  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# print last five rows of dataset\n",
    "df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "955085be",
   "metadata": {
    "papermill": {
     "duration": 0.04493,
     "end_time": "2024-05-11T11:16:23.134517",
     "exception": false,
     "start_time": "2024-05-11T11:16:23.089587",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .info()\n",
    "**info** method allows us to quickly check for **dtypes of columns, missing values in the columns, and the memory usage**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "21a2b189",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:23.226754Z",
     "iopub.status.busy": "2024-05-11T11:16:23.226345Z",
     "iopub.status.idle": "2024-05-11T11:16:23.268478Z",
     "shell.execute_reply": "2024-05-11T11:16:23.266806Z"
    },
    "papermill": {
     "duration": 0.092378,
     "end_time": "2024-05-11T11:16:23.272375",
     "exception": false,
     "start_time": "2024-05-11T11:16:23.179997",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 8763 entries, 0 to 8762\n",
      "Data columns (total 26 columns):\n",
      " #   Column                           Non-Null Count  Dtype  \n",
      "---  ------                           --------------  -----  \n",
      " 0   Patient ID                       8763 non-null   object \n",
      " 1   Age                              8763 non-null   int64  \n",
      " 2   Sex                              8763 non-null   object \n",
      " 3   Cholesterol                      8763 non-null   int64  \n",
      " 4   Blood Pressure                   8763 non-null   object \n",
      " 5   Heart Rate                       8763 non-null   int64  \n",
      " 6   Diabetes                         8763 non-null   int64  \n",
      " 7   Family History                   8763 non-null   int64  \n",
      " 8   Smoking                          8763 non-null   int64  \n",
      " 9   Obesity                          8763 non-null   int64  \n",
      " 10  Alcohol Consumption              8763 non-null   int64  \n",
      " 11  Exercise Hours Per Week          8763 non-null   float64\n",
      " 12  Diet                             8763 non-null   object \n",
      " 13  Previous Heart Problems          8763 non-null   int64  \n",
      " 14  Medication Use                   8763 non-null   int64  \n",
      " 15  Stress Level                     8763 non-null   int64  \n",
      " 16  Sedentary Hours Per Day          8763 non-null   float64\n",
      " 17  Income                           8763 non-null   int64  \n",
      " 18  BMI                              8763 non-null   float64\n",
      " 19  Triglycerides                    8763 non-null   int64  \n",
      " 20  Physical Activity Days Per Week  8763 non-null   int64  \n",
      " 21  Sleep Hours Per Day              8763 non-null   int64  \n",
      " 22  Country                          8763 non-null   object \n",
      " 23  Continent                        8763 non-null   object \n",
      " 24  Hemisphere                       8763 non-null   object \n",
      " 25  Heart Attack Risk                8763 non-null   int64  \n",
      "dtypes: float64(3), int64(16), object(7)\n",
      "memory usage: 1.7+ MB\n"
     ]
    }
   ],
   "source": [
    "# print info of dataset\n",
    "\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bb79981",
   "metadata": {
    "papermill": {
     "duration": 0.04754,
     "end_time": "2024-05-11T11:16:23.370106",
     "exception": false,
     "start_time": "2024-05-11T11:16:23.322566",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**describe** function is used to perform statistical analyssi of dataset. It shows the **mean,median, standard deviation** etc of the data and is helful to understand the data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ab2ec6c",
   "metadata": {
    "papermill": {
     "duration": 0.04823,
     "end_time": "2024-05-11T11:16:23.464945",
     "exception": false,
     "start_time": "2024-05-11T11:16:23.416715",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .describe()\n",
    "#### It show the count, mean, median etc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2484cf07",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:23.564034Z",
     "iopub.status.busy": "2024-05-11T11:16:23.563597Z",
     "iopub.status.idle": "2024-05-11T11:16:23.648848Z",
     "shell.execute_reply": "2024-05-11T11:16:23.647191Z"
    },
    "papermill": {
     "duration": 0.140948,
     "end_time": "2024-05-11T11:16:23.652686",
     "exception": false,
     "start_time": "2024-05-11T11:16:23.511738",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>Exercise Hours Per Week</th>\n",
       "      <th>Previous Heart Problems</th>\n",
       "      <th>Medication Use</th>\n",
       "      <th>Stress Level</th>\n",
       "      <th>Sedentary Hours Per Day</th>\n",
       "      <th>Income</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity Days Per Week</th>\n",
       "      <th>Sleep Hours Per Day</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "      <td>8763.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>53.707977</td>\n",
       "      <td>259.877211</td>\n",
       "      <td>75.021682</td>\n",
       "      <td>0.652288</td>\n",
       "      <td>0.492982</td>\n",
       "      <td>0.896839</td>\n",
       "      <td>0.501426</td>\n",
       "      <td>0.598083</td>\n",
       "      <td>10.014284</td>\n",
       "      <td>0.495835</td>\n",
       "      <td>0.498345</td>\n",
       "      <td>5.469702</td>\n",
       "      <td>5.993690</td>\n",
       "      <td>158263.181901</td>\n",
       "      <td>28.891446</td>\n",
       "      <td>417.677051</td>\n",
       "      <td>3.489672</td>\n",
       "      <td>7.023508</td>\n",
       "      <td>0.358211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>21.249509</td>\n",
       "      <td>80.863276</td>\n",
       "      <td>20.550948</td>\n",
       "      <td>0.476271</td>\n",
       "      <td>0.499979</td>\n",
       "      <td>0.304186</td>\n",
       "      <td>0.500026</td>\n",
       "      <td>0.490313</td>\n",
       "      <td>5.783745</td>\n",
       "      <td>0.500011</td>\n",
       "      <td>0.500026</td>\n",
       "      <td>2.859622</td>\n",
       "      <td>3.466359</td>\n",
       "      <td>80575.190806</td>\n",
       "      <td>6.319181</td>\n",
       "      <td>223.748137</td>\n",
       "      <td>2.282687</td>\n",
       "      <td>1.988473</td>\n",
       "      <td>0.479502</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002442</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.001263</td>\n",
       "      <td>20062.000000</td>\n",
       "      <td>18.002337</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>35.000000</td>\n",
       "      <td>192.000000</td>\n",
       "      <td>57.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.981579</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.998794</td>\n",
       "      <td>88310.000000</td>\n",
       "      <td>23.422985</td>\n",
       "      <td>225.500000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>54.000000</td>\n",
       "      <td>259.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.069559</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.933622</td>\n",
       "      <td>157866.000000</td>\n",
       "      <td>28.768999</td>\n",
       "      <td>417.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>72.000000</td>\n",
       "      <td>330.000000</td>\n",
       "      <td>93.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>15.050018</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>9.019124</td>\n",
       "      <td>227749.000000</td>\n",
       "      <td>34.324594</td>\n",
       "      <td>612.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>90.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>110.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>19.998709</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>11.999313</td>\n",
       "      <td>299954.000000</td>\n",
       "      <td>39.997211</td>\n",
       "      <td>800.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Age  Cholesterol   Heart Rate     Diabetes  Family History  \\\n",
       "count  8763.000000  8763.000000  8763.000000  8763.000000     8763.000000   \n",
       "mean     53.707977   259.877211    75.021682     0.652288        0.492982   \n",
       "std      21.249509    80.863276    20.550948     0.476271        0.499979   \n",
       "min      18.000000   120.000000    40.000000     0.000000        0.000000   \n",
       "25%      35.000000   192.000000    57.000000     0.000000        0.000000   \n",
       "50%      54.000000   259.000000    75.000000     1.000000        0.000000   \n",
       "75%      72.000000   330.000000    93.000000     1.000000        1.000000   \n",
       "max      90.000000   400.000000   110.000000     1.000000        1.000000   \n",
       "\n",
       "           Smoking      Obesity  Alcohol Consumption  Exercise Hours Per Week  \\\n",
       "count  8763.000000  8763.000000          8763.000000              8763.000000   \n",
       "mean      0.896839     0.501426             0.598083                10.014284   \n",
       "std       0.304186     0.500026             0.490313                 5.783745   \n",
       "min       0.000000     0.000000             0.000000                 0.002442   \n",
       "25%       1.000000     0.000000             0.000000                 4.981579   \n",
       "50%       1.000000     1.000000             1.000000                10.069559   \n",
       "75%       1.000000     1.000000             1.000000                15.050018   \n",
       "max       1.000000     1.000000             1.000000                19.998709   \n",
       "\n",
       "       Previous Heart Problems  Medication Use  Stress Level  \\\n",
       "count              8763.000000     8763.000000   8763.000000   \n",
       "mean                  0.495835        0.498345      5.469702   \n",
       "std                   0.500011        0.500026      2.859622   \n",
       "min                   0.000000        0.000000      1.000000   \n",
       "25%                   0.000000        0.000000      3.000000   \n",
       "50%                   0.000000        0.000000      5.000000   \n",
       "75%                   1.000000        1.000000      8.000000   \n",
       "max                   1.000000        1.000000     10.000000   \n",
       "\n",
       "       Sedentary Hours Per Day         Income          BMI  Triglycerides  \\\n",
       "count              8763.000000    8763.000000  8763.000000    8763.000000   \n",
       "mean                  5.993690  158263.181901    28.891446     417.677051   \n",
       "std                   3.466359   80575.190806     6.319181     223.748137   \n",
       "min                   0.001263   20062.000000    18.002337      30.000000   \n",
       "25%                   2.998794   88310.000000    23.422985     225.500000   \n",
       "50%                   5.933622  157866.000000    28.768999     417.000000   \n",
       "75%                   9.019124  227749.000000    34.324594     612.000000   \n",
       "max                  11.999313  299954.000000    39.997211     800.000000   \n",
       "\n",
       "       Physical Activity Days Per Week  Sleep Hours Per Day  Heart Attack Risk  \n",
       "count                      8763.000000          8763.000000        8763.000000  \n",
       "mean                          3.489672             7.023508           0.358211  \n",
       "std                           2.282687             1.988473           0.479502  \n",
       "min                           0.000000             4.000000           0.000000  \n",
       "25%                           2.000000             5.000000           0.000000  \n",
       "50%                           3.000000             7.000000           0.000000  \n",
       "75%                           5.000000             9.000000           1.000000  \n",
       "max                           7.000000            10.000000           1.000000  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eee03ebb",
   "metadata": {
    "papermill": {
     "duration": 0.044741,
     "end_time": "2024-05-11T11:16:23.743932",
     "exception": false,
     "start_time": "2024-05-11T11:16:23.699191",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .shape()\n",
    "**shape** attribute tells us about the **total number of rows and columns** in the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "62957c70",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:23.837979Z",
     "iopub.status.busy": "2024-05-11T11:16:23.837168Z",
     "iopub.status.idle": "2024-05-11T11:16:23.844696Z",
     "shell.execute_reply": "2024-05-11T11:16:23.843142Z"
    },
    "papermill": {
     "duration": 0.058245,
     "end_time": "2024-05-11T11:16:23.847714",
     "exception": false,
     "start_time": "2024-05-11T11:16:23.789469",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8763, 26)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# print shape (total number of rows and columns)\n",
    "\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c07ca192",
   "metadata": {
    "papermill": {
     "duration": 0.045282,
     "end_time": "2024-05-11T11:16:23.942207",
     "exception": false,
     "start_time": "2024-05-11T11:16:23.896925",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .columns\n",
    "**print all columns**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "91db0e90",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:24.039271Z",
     "iopub.status.busy": "2024-05-11T11:16:24.038553Z",
     "iopub.status.idle": "2024-05-11T11:16:24.045548Z",
     "shell.execute_reply": "2024-05-11T11:16:24.044503Z"
    },
    "papermill": {
     "duration": 0.06004,
     "end_time": "2024-05-11T11:16:24.047942",
     "exception": false,
     "start_time": "2024-05-11T11:16:23.987902",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Patient ID', 'Age', 'Sex', 'Cholesterol', 'Blood Pressure',\n",
       "       'Heart Rate', 'Diabetes', 'Family History', 'Smoking', 'Obesity',\n",
       "       'Alcohol Consumption', 'Exercise Hours Per Week', 'Diet',\n",
       "       'Previous Heart Problems', 'Medication Use', 'Stress Level',\n",
       "       'Sedentary Hours Per Day', 'Income', 'BMI', 'Triglycerides',\n",
       "       'Physical Activity Days Per Week', 'Sleep Hours Per Day', 'Country',\n",
       "       'Continent', 'Hemisphere', 'Heart Attack Risk'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5bfb551",
   "metadata": {
    "papermill": {
     "duration": 0.046203,
     "end_time": "2024-05-11T11:16:24.140604",
     "exception": false,
     "start_time": "2024-05-11T11:16:24.094401",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .memory_usage()\n",
    "We check the total memory used by dataset. This is helpful to know so that our computer can handle the data correctly. **Memory usage is shown in bytes and NOT in MB**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f5a47fea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:24.236503Z",
     "iopub.status.busy": "2024-05-11T11:16:24.235739Z",
     "iopub.status.idle": "2024-05-11T11:16:24.245428Z",
     "shell.execute_reply": "2024-05-11T11:16:24.243484Z"
    },
    "papermill": {
     "duration": 0.060971,
     "end_time": "2024-05-11T11:16:24.248046",
     "exception": false,
     "start_time": "2024-05-11T11:16:24.187075",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index                                128\n",
      "Patient ID                         70104\n",
      "Age                                70104\n",
      "Sex                                70104\n",
      "Cholesterol                        70104\n",
      "Blood Pressure                     70104\n",
      "Heart Rate                         70104\n",
      "Diabetes                           70104\n",
      "Family History                     70104\n",
      "Smoking                            70104\n",
      "Obesity                            70104\n",
      "Alcohol Consumption                70104\n",
      "Exercise Hours Per Week            70104\n",
      "Diet                               70104\n",
      "Previous Heart Problems            70104\n",
      "Medication Use                     70104\n",
      "Stress Level                       70104\n",
      "Sedentary Hours Per Day            70104\n",
      "Income                             70104\n",
      "BMI                                70104\n",
      "Triglycerides                      70104\n",
      "Physical Activity Days Per Week    70104\n",
      "Sleep Hours Per Day                70104\n",
      "Country                            70104\n",
      "Continent                          70104\n",
      "Hemisphere                         70104\n",
      "Heart Attack Risk                  70104\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "memory_used = df.memory_usage()\n",
    "\n",
    "print(memory_used)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "431febe0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:24.342546Z",
     "iopub.status.busy": "2024-05-11T11:16:24.341788Z",
     "iopub.status.idle": "2024-05-11T11:16:24.347457Z",
     "shell.execute_reply": "2024-05-11T11:16:24.346363Z"
    },
    "papermill": {
     "duration": 0.056005,
     "end_time": "2024-05-11T11:16:24.350184",
     "exception": false,
     "start_time": "2024-05-11T11:16:24.294179",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1822832\n"
     ]
    }
   ],
   "source": [
    "total_memory_used = memory_used.sum()\n",
    "\n",
    "print(total_memory_used)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "79c9224e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:24.445004Z",
     "iopub.status.busy": "2024-05-11T11:16:24.444469Z",
     "iopub.status.idle": "2024-05-11T11:16:24.453730Z",
     "shell.execute_reply": "2024-05-11T11:16:24.452381Z"
    },
    "papermill": {
     "duration": 0.059412,
     "end_time": "2024-05-11T11:16:24.456457",
     "exception": false,
     "start_time": "2024-05-11T11:16:24.397045",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total memory used in MB's\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "1.7383880615234375"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# TO SHOW memory usage in MB's use the following code\n",
    "\n",
    "print(\"Total memory used in MB's\")\n",
    "total_memory_used / 1024 ** 2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3e3b723",
   "metadata": {
    "papermill": {
     "duration": 0.045768,
     "end_time": "2024-05-11T11:16:24.549575",
     "exception": false,
     "start_time": "2024-05-11T11:16:24.503807",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Changing the dtypes** of columns saves memory. This allows our computer to **work faster and efficiently** and calculations take less time\n",
    "\n",
    "**CAUTION**: When changing dtypes of columns always make sure that the values of columns lie within the range of dtype. For example: int8 can ONLY represent integers from -128 to 127. If the values in the columns always fall within the range of int8, then there's no loss of information, however if they don't then we risk losing precision and overflow of values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "cd4d213d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:24.645393Z",
     "iopub.status.busy": "2024-05-11T11:16:24.644510Z",
     "iopub.status.idle": "2024-05-11T11:16:24.694057Z",
     "shell.execute_reply": "2024-05-11T11:16:24.692572Z"
    },
    "papermill": {
     "duration": 0.100753,
     "end_time": "2024-05-11T11:16:24.696962",
     "exception": false,
     "start_time": "2024-05-11T11:16:24.596209",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# change dtype of columns to int32 and float 16 and category\n",
    "\n",
    "columns = df.columns\n",
    "\n",
    "for col in columns:\n",
    "    \n",
    "    if df[col].dtype == \"int\":\n",
    "        df[col] = df[col].astype(\"int32\")\n",
    "    \n",
    "    elif df[col].dtype == \"float\":\n",
    "        df[col] = df[col].astype(\"float16\")\n",
    "        \n",
    "    elif df[col].dtype == \"object\":\n",
    "        df[col] = df[col].astype(\"category\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "14448fac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:24.792192Z",
     "iopub.status.busy": "2024-05-11T11:16:24.791697Z",
     "iopub.status.idle": "2024-05-11T11:16:24.802855Z",
     "shell.execute_reply": "2024-05-11T11:16:24.801344Z"
    },
    "papermill": {
     "duration": 0.062593,
     "end_time": "2024-05-11T11:16:24.805864",
     "exception": false,
     "start_time": "2024-05-11T11:16:24.743271",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1191513\n"
     ]
    }
   ],
   "source": [
    "# Repeat step 6\n",
    "\n",
    "memory_used = df.memory_usage()\n",
    "\n",
    "total_memory_used = memory_used.sum()\n",
    "\n",
    "print(total_memory_used)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "8289cf93",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:24.906744Z",
     "iopub.status.busy": "2024-05-11T11:16:24.905127Z",
     "iopub.status.idle": "2024-05-11T11:16:24.914451Z",
     "shell.execute_reply": "2024-05-11T11:16:24.913101Z"
    },
    "papermill": {
     "duration": 0.064906,
     "end_time": "2024-05-11T11:16:24.916947",
     "exception": false,
     "start_time": "2024-05-11T11:16:24.852041",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total memory used in MB's\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "1.1363153457641602"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# TO SHOW memory usage in MB's use the following code\n",
    "\n",
    "print(\"Total memory used in MB's\")\n",
    "total_memory_used / 1024 ** 2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4bd76231",
   "metadata": {
    "papermill": {
     "duration": 0.046738,
     "end_time": "2024-05-11T11:16:25.010932",
     "exception": false,
     "start_time": "2024-05-11T11:16:24.964194",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .isnull()\n",
    "## OR\n",
    "## .isna()\n",
    "**check for null/missing values**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "9a9b2d96",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:25.108474Z",
     "iopub.status.busy": "2024-05-11T11:16:25.107935Z",
     "iopub.status.idle": "2024-05-11T11:16:25.148351Z",
     "shell.execute_reply": "2024-05-11T11:16:25.146779Z"
    },
    "papermill": {
     "duration": 0.09244,
     "end_time": "2024-05-11T11:16:25.151129",
     "exception": false,
     "start_time": "2024-05-11T11:16:25.058689",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Patient ID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Blood Pressure</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>...</th>\n",
       "      <th>Sedentary Hours Per Day</th>\n",
       "      <th>Income</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity Days Per Week</th>\n",
       "      <th>Sleep Hours Per Day</th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Hemisphere</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8758</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8759</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8760</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8761</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8762</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8763 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Patient ID    Age    Sex  Cholesterol  Blood Pressure  Heart Rate  \\\n",
       "0          False  False  False        False           False       False   \n",
       "1          False  False  False        False           False       False   \n",
       "2          False  False  False        False           False       False   \n",
       "3          False  False  False        False           False       False   \n",
       "4          False  False  False        False           False       False   \n",
       "...          ...    ...    ...          ...             ...         ...   \n",
       "8758       False  False  False        False           False       False   \n",
       "8759       False  False  False        False           False       False   \n",
       "8760       False  False  False        False           False       False   \n",
       "8761       False  False  False        False           False       False   \n",
       "8762       False  False  False        False           False       False   \n",
       "\n",
       "      Diabetes  Family History  Smoking  Obesity  ...  \\\n",
       "0        False           False    False    False  ...   \n",
       "1        False           False    False    False  ...   \n",
       "2        False           False    False    False  ...   \n",
       "3        False           False    False    False  ...   \n",
       "4        False           False    False    False  ...   \n",
       "...        ...             ...      ...      ...  ...   \n",
       "8758     False           False    False    False  ...   \n",
       "8759     False           False    False    False  ...   \n",
       "8760     False           False    False    False  ...   \n",
       "8761     False           False    False    False  ...   \n",
       "8762     False           False    False    False  ...   \n",
       "\n",
       "      Sedentary Hours Per Day  Income    BMI  Triglycerides  \\\n",
       "0                       False   False  False          False   \n",
       "1                       False   False  False          False   \n",
       "2                       False   False  False          False   \n",
       "3                       False   False  False          False   \n",
       "4                       False   False  False          False   \n",
       "...                       ...     ...    ...            ...   \n",
       "8758                    False   False  False          False   \n",
       "8759                    False   False  False          False   \n",
       "8760                    False   False  False          False   \n",
       "8761                    False   False  False          False   \n",
       "8762                    False   False  False          False   \n",
       "\n",
       "      Physical Activity Days Per Week  Sleep Hours Per Day  Country  \\\n",
       "0                               False                False    False   \n",
       "1                               False                False    False   \n",
       "2                               False                False    False   \n",
       "3                               False                False    False   \n",
       "4                               False                False    False   \n",
       "...                               ...                  ...      ...   \n",
       "8758                            False                False    False   \n",
       "8759                            False                False    False   \n",
       "8760                            False                False    False   \n",
       "8761                            False                False    False   \n",
       "8762                            False                False    False   \n",
       "\n",
       "      Continent  Hemisphere  Heart Attack Risk  \n",
       "0         False       False              False  \n",
       "1         False       False              False  \n",
       "2         False       False              False  \n",
       "3         False       False              False  \n",
       "4         False       False              False  \n",
       "...         ...         ...                ...  \n",
       "8758      False       False              False  \n",
       "8759      False       False              False  \n",
       "8760      False       False              False  \n",
       "8761      False       False              False  \n",
       "8762      False       False              False  \n",
       "\n",
       "[8763 rows x 26 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check for null/missing values\n",
    "\n",
    "missing_values = df.isnull()\n",
    "\n",
    "# We can also use a different code to check missing values\n",
    "# missing_values = df.isna()\n",
    "\n",
    "missing_values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ef3691f1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:25.249100Z",
     "iopub.status.busy": "2024-05-11T11:16:25.248299Z",
     "iopub.status.idle": "2024-05-11T11:16:25.258921Z",
     "shell.execute_reply": "2024-05-11T11:16:25.257570Z"
    },
    "papermill": {
     "duration": 0.062569,
     "end_time": "2024-05-11T11:16:25.261633",
     "exception": false,
     "start_time": "2024-05-11T11:16:25.199064",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Patient ID                         0\n",
      "Age                                0\n",
      "Sex                                0\n",
      "Cholesterol                        0\n",
      "Blood Pressure                     0\n",
      "Heart Rate                         0\n",
      "Diabetes                           0\n",
      "Family History                     0\n",
      "Smoking                            0\n",
      "Obesity                            0\n",
      "Alcohol Consumption                0\n",
      "Exercise Hours Per Week            0\n",
      "Diet                               0\n",
      "Previous Heart Problems            0\n",
      "Medication Use                     0\n",
      "Stress Level                       0\n",
      "Sedentary Hours Per Day            0\n",
      "Income                             0\n",
      "BMI                                0\n",
      "Triglycerides                      0\n",
      "Physical Activity Days Per Week    0\n",
      "Sleep Hours Per Day                0\n",
      "Country                            0\n",
      "Continent                          0\n",
      "Hemisphere                         0\n",
      "Heart Attack Risk                  0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(missing_values.isna().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b8c37acb",
   "metadata": {
    "papermill": {
     "duration": 0.048272,
     "end_time": "2024-05-11T11:16:25.358364",
     "exception": false,
     "start_time": "2024-05-11T11:16:25.310092",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We **check for duplicated rows** here to make sure **information is NOT repeated**. If we see that we have duplicated rows then we should **remove the duplicated rows** because they can be **lead to incorrect results**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b4bff1e",
   "metadata": {
    "papermill": {
     "duration": 0.048,
     "end_time": "2024-05-11T11:16:25.456111",
     "exception": false,
     "start_time": "2024-05-11T11:16:25.408111",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .duplicated()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "6fd67771",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:25.554610Z",
     "iopub.status.busy": "2024-05-11T11:16:25.553085Z",
     "iopub.status.idle": "2024-05-11T11:16:25.569472Z",
     "shell.execute_reply": "2024-05-11T11:16:25.568406Z"
    },
    "papermill": {
     "duration": 0.069019,
     "end_time": "2024-05-11T11:16:25.572914",
     "exception": false,
     "start_time": "2024-05-11T11:16:25.503895",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0       False\n",
      "1       False\n",
      "2       False\n",
      "3       False\n",
      "4       False\n",
      "        ...  \n",
      "8758    False\n",
      "8759    False\n",
      "8760    False\n",
      "8761    False\n",
      "8762    False\n",
      "Length: 8763, dtype: bool\n"
     ]
    }
   ],
   "source": [
    "# Check for duplicated rows\n",
    "\n",
    "duplicated_values = df.duplicated()\n",
    "\n",
    "print(duplicated_values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f9476d35",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:25.677277Z",
     "iopub.status.busy": "2024-05-11T11:16:25.676755Z",
     "iopub.status.idle": "2024-05-11T11:16:25.683631Z",
     "shell.execute_reply": "2024-05-11T11:16:25.682390Z"
    },
    "papermill": {
     "duration": 0.062772,
     "end_time": "2024-05-11T11:16:25.686443",
     "exception": false,
     "start_time": "2024-05-11T11:16:25.623671",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total duplicated values in dataset:\n",
      "0\n"
     ]
    }
   ],
   "source": [
    "# Check for duplicated rows\n",
    "\n",
    "print(\"Total duplicated values in dataset:\")\n",
    "print(duplicated_values.sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e1ffd5a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:25.789156Z",
     "iopub.status.busy": "2024-05-11T11:16:25.788744Z",
     "iopub.status.idle": "2024-05-11T11:16:25.796270Z",
     "shell.execute_reply": "2024-05-11T11:16:25.795406Z"
    },
    "papermill": {
     "duration": 0.061204,
     "end_time": "2024-05-11T11:16:25.798771",
     "exception": false,
     "start_time": "2024-05-11T11:16:25.737567",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Patient ID', 'Age', 'Sex', 'Cholesterol', 'Blood Pressure',\n",
       "       'Heart Rate', 'Diabetes', 'Family History', 'Smoking', 'Obesity',\n",
       "       'Alcohol Consumption', 'Exercise Hours Per Week', 'Diet',\n",
       "       'Previous Heart Problems', 'Medication Use', 'Stress Level',\n",
       "       'Sedentary Hours Per Day', 'Income', 'BMI', 'Triglycerides',\n",
       "       'Physical Activity Days Per Week', 'Sleep Hours Per Day', 'Country',\n",
       "       'Continent', 'Hemisphere', 'Heart Attack Risk'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c110d29",
   "metadata": {
    "papermill": {
     "duration": 0.050728,
     "end_time": "2024-05-11T11:16:25.900643",
     "exception": false,
     "start_time": "2024-05-11T11:16:25.849915",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Task.2:**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf24509b",
   "metadata": {
    "papermill": {
     "duration": 0.04957,
     "end_time": "2024-05-11T11:16:26.002894",
     "exception": false,
     "start_time": "2024-05-11T11:16:25.953324",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "rename method will allow us to **rename columns** in df. This is useful because now columns will have **meaningful names**. This can also be useful if column names are too long. Renaming them to shorter names will allow us to access them easily."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "278be061",
   "metadata": {
    "papermill": {
     "duration": 0.04734,
     "end_time": "2024-05-11T11:16:26.099329",
     "exception": false,
     "start_time": "2024-05-11T11:16:26.051989",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .rename()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8640d825",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:26.199526Z",
     "iopub.status.busy": "2024-05-11T11:16:26.198686Z",
     "iopub.status.idle": "2024-05-11T11:16:26.225970Z",
     "shell.execute_reply": "2024-05-11T11:16:26.224386Z"
    },
    "papermill": {
     "duration": 0.081469,
     "end_time": "2024-05-11T11:16:26.228687",
     "exception": false,
     "start_time": "2024-05-11T11:16:26.147218",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Blood Pressure</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>...</th>\n",
       "      <th>Sedentary Hours Per Day</th>\n",
       "      <th>Income</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity Days Per Week</th>\n",
       "      <th>Sleep Hours Per Day</th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Hemisphere</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BMW7812</td>\n",
       "      <td>67</td>\n",
       "      <td>Male</td>\n",
       "      <td>208</td>\n",
       "      <td>158/88</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.613281</td>\n",
       "      <td>261404</td>\n",
       "      <td>31.2500</td>\n",
       "      <td>286</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CZE1114</td>\n",
       "      <td>21</td>\n",
       "      <td>Male</td>\n",
       "      <td>389</td>\n",
       "      <td>165/93</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>4.964844</td>\n",
       "      <td>285768</td>\n",
       "      <td>27.1875</td>\n",
       "      <td>235</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        id  Age   Sex  Cholesterol Blood Pressure  Heart Rate  Diabetes  \\\n",
       "0  BMW7812   67  Male          208         158/88          72         0   \n",
       "1  CZE1114   21  Male          389         165/93          98         1   \n",
       "\n",
       "   Family History  Smoking  Obesity  ...  Sedentary Hours Per Day  Income  \\\n",
       "0               0        1        0  ...                 6.613281  261404   \n",
       "1               1        1        1  ...                 4.964844  285768   \n",
       "\n",
       "       BMI  Triglycerides  Physical Activity Days Per Week  \\\n",
       "0  31.2500            286                                0   \n",
       "1  27.1875            235                                1   \n",
       "\n",
       "   Sleep Hours Per Day    Country      Continent           Hemisphere  \\\n",
       "0                    6  Argentina  South America  Southern Hemisphere   \n",
       "1                    7     Canada  North America  Northern Hemisphere   \n",
       "\n",
       "   Heart Attack Risk  \n",
       "0                  0  \n",
       "1                  0  \n",
       "\n",
       "[2 rows x 26 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Rename columns\n",
    "df = df.rename(columns={'Patient ID': \"id\"})\n",
    "df.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "53f0902f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:26.328353Z",
     "iopub.status.busy": "2024-05-11T11:16:26.327828Z",
     "iopub.status.idle": "2024-05-11T11:16:26.336701Z",
     "shell.execute_reply": "2024-05-11T11:16:26.335300Z"
    },
    "papermill": {
     "duration": 0.062546,
     "end_time": "2024-05-11T11:16:26.339910",
     "exception": false,
     "start_time": "2024-05-11T11:16:26.277364",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['id', 'Age', 'Sex', 'Cholesterol', 'BP', 'Heart Rate', 'Diabetes',\n",
      "       'Family History', 'Smoking', 'Obesity', 'Alcohol Consumption',\n",
      "       'Exercise Hours Per Week', 'Diet', 'Previous Heart Problems',\n",
      "       'Medication Use', 'Stress Level', 'Sedentary Hours', 'Income', 'BMI',\n",
      "       'Triglycerides', 'Physical Activity', 'Sleep Hours', 'Country',\n",
      "       'Continent', 'Hemisphere', 'Heart Attack Risk'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "# Rename Columns\n",
    "\n",
    "cols_to_rename = {\n",
    "    \"Sedentary Hours Per Day\" : \"Sedentary Hours\",\n",
    "    \"Patient ID\" : \"Id\",\n",
    "    \"Physical Activity Days Per Week\" : \"Physical Activity\",\n",
    "    \"Sleep Hours Per Day\" : \"Sleep Hours\",\n",
    "    \"Blood Pressure\" : \"BP\"\n",
    "}\n",
    "\n",
    "\n",
    "df.rename(columns = cols_to_rename, inplace=True)\n",
    "\n",
    "# check that columns have been renamed\n",
    "print(df.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "16dd8692",
   "metadata": {
    "papermill": {
     "duration": 0.0483,
     "end_time": "2024-05-11T11:16:26.436681",
     "exception": false,
     "start_time": "2024-05-11T11:16:26.388381",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "value_counts function can be used to quickly take a look at the **unique values** in each column and the **total count** of these values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2130b8d0",
   "metadata": {
    "papermill": {
     "duration": 0.048733,
     "end_time": "2024-05-11T11:16:26.536181",
     "exception": false,
     "start_time": "2024-05-11T11:16:26.487448",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "75ff05e3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:26.641712Z",
     "iopub.status.busy": "2024-05-11T11:16:26.640255Z",
     "iopub.status.idle": "2024-05-11T11:16:26.652529Z",
     "shell.execute_reply": "2024-05-11T11:16:26.650979Z"
    },
    "papermill": {
     "duration": 0.069169,
     "end_time": "2024-05-11T11:16:26.655849",
     "exception": false,
     "start_time": "2024-05-11T11:16:26.586680",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Country\n",
       "Germany           477\n",
       "Argentina         471\n",
       "Brazil            462\n",
       "United Kingdom    457\n",
       "Australia         449\n",
       "Nigeria           448\n",
       "France            446\n",
       "Canada            440\n",
       "China             436\n",
       "New Zealand       435\n",
       "Japan             433\n",
       "Italy             431\n",
       "Spain             430\n",
       "Colombia          429\n",
       "Thailand          428\n",
       "South Africa      425\n",
       "Vietnam           425\n",
       "United States     420\n",
       "India             412\n",
       "South Korea       409\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Country'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "9590b111",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:26.761590Z",
     "iopub.status.busy": "2024-05-11T11:16:26.761185Z",
     "iopub.status.idle": "2024-05-11T11:16:26.777732Z",
     "shell.execute_reply": "2024-05-11T11:16:26.775686Z"
    },
    "papermill": {
     "duration": 0.072548,
     "end_time": "2024-05-11T11:16:26.781011",
     "exception": false,
     "start_time": "2024-05-11T11:16:26.708463",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Continent\n",
      "Asia             2543\n",
      "Europe           2241\n",
      "South America    1362\n",
      "Australia         884\n",
      "Africa            873\n",
      "North America     860\n",
      "Name: count, dtype: int64\n",
      "_____________________________________________________\n",
      "\n",
      "\n",
      "Sex\n",
      "Male      6111\n",
      "Female    2652\n",
      "Name: count, dtype: int64\n",
      "_____________________________________________________\n",
      "\n",
      "\n",
      "Smoking\n",
      "1    7859\n",
      "0     904\n",
      "Name: count, dtype: int64\n",
      "_____________________________________________________\n",
      "\n",
      "\n",
      "Heart Attack Risk\n",
      "0    5624\n",
      "1    3139\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# print value counts of columns\n",
    "\n",
    "print(df[\"Continent\"].value_counts())\n",
    "\n",
    "# print new line to separate content\n",
    "print(\"_____________________________________________________\\n\\n\")\n",
    "\n",
    "print(df[\"Sex\"].value_counts())\n",
    "\n",
    "print(\"_____________________________________________________\\n\\n\")\n",
    "\n",
    "print(df[\"Smoking\"].value_counts())\n",
    "\n",
    "print(\"_____________________________________________________\\n\\n\")\n",
    "\n",
    "print(df[\"Heart Attack Risk\"].value_counts())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d1f045c4",
   "metadata": {
    "papermill": {
     "duration": 0.04998,
     "end_time": "2024-05-11T11:16:26.882827",
     "exception": false,
     "start_time": "2024-05-11T11:16:26.832847",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## value_counts()  (ascending order)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "b8716c0e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:26.989255Z",
     "iopub.status.busy": "2024-05-11T11:16:26.988866Z",
     "iopub.status.idle": "2024-05-11T11:16:27.001418Z",
     "shell.execute_reply": "2024-05-11T11:16:26.999640Z"
    },
    "papermill": {
     "duration": 0.070667,
     "end_time": "2024-05-11T11:16:27.004885",
     "exception": false,
     "start_time": "2024-05-11T11:16:26.934218",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Country\n",
       "South Korea       409\n",
       "India             412\n",
       "United States     420\n",
       "Vietnam           425\n",
       "South Africa      425\n",
       "Thailand          428\n",
       "Colombia          429\n",
       "Spain             430\n",
       "Italy             431\n",
       "Japan             433\n",
       "New Zealand       435\n",
       "China             436\n",
       "Canada            440\n",
       "France            446\n",
       "Nigeria           448\n",
       "Australia         449\n",
       "United Kingdom    457\n",
       "Brazil            462\n",
       "Argentina         471\n",
       "Germany           477\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#We can sort the parameter to ascending order..\n",
    "df['Country'].value_counts(ascending = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8bf01db",
   "metadata": {
    "papermill": {
     "duration": 0.04885,
     "end_time": "2024-05-11T11:16:27.103703",
     "exception": false,
     "start_time": "2024-05-11T11:16:27.054853",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .value_counts()  (descending order)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "0604096b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:27.203810Z",
     "iopub.status.busy": "2024-05-11T11:16:27.203427Z",
     "iopub.status.idle": "2024-05-11T11:16:27.214575Z",
     "shell.execute_reply": "2024-05-11T11:16:27.213354Z"
    },
    "papermill": {
     "duration": 0.065251,
     "end_time": "2024-05-11T11:16:27.217851",
     "exception": false,
     "start_time": "2024-05-11T11:16:27.152600",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Country\n",
       "Germany           477\n",
       "Argentina         471\n",
       "Brazil            462\n",
       "United Kingdom    457\n",
       "Australia         449\n",
       "Nigeria           448\n",
       "France            446\n",
       "Canada            440\n",
       "China             436\n",
       "New Zealand       435\n",
       "Japan             433\n",
       "Italy             431\n",
       "Spain             430\n",
       "Colombia          429\n",
       "Thailand          428\n",
       "South Africa      425\n",
       "Vietnam           425\n",
       "United States     420\n",
       "India             412\n",
       "South Korea       409\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#descendig order\n",
    "df['Country'].value_counts(ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b08b62bd",
   "metadata": {
    "papermill": {
     "duration": 0.049414,
     "end_time": "2024-05-11T11:16:27.317190",
     "exception": false,
     "start_time": "2024-05-11T11:16:27.267776",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**loc** and **iloc** methods are used to subset the dataframe. The key difference between the two methods is that iloc only accepts **integer indexes** while the loc method **accepts labels such as names of columns**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a7cdfb9",
   "metadata": {
    "papermill": {
     "duration": 0.04886,
     "end_time": "2024-05-11T11:16:27.414745",
     "exception": false,
     "start_time": "2024-05-11T11:16:27.365885",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .loc\n",
    "For slicing dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "247a7a0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:27.516939Z",
     "iopub.status.busy": "2024-05-11T11:16:27.515572Z",
     "iopub.status.idle": "2024-05-11T11:16:27.545849Z",
     "shell.execute_reply": "2024-05-11T11:16:27.543911Z"
    },
    "papermill": {
     "duration": 0.084219,
     "end_time": "2024-05-11T11:16:27.548384",
     "exception": false,
     "start_time": "2024-05-11T11:16:27.464165",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>BP</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>...</th>\n",
       "      <th>Sedentary Hours</th>\n",
       "      <th>Income</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity</th>\n",
       "      <th>Sleep Hours</th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Hemisphere</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BMW7812</td>\n",
       "      <td>67</td>\n",
       "      <td>Male</td>\n",
       "      <td>208</td>\n",
       "      <td>158/88</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.613281</td>\n",
       "      <td>261404</td>\n",
       "      <td>31.250000</td>\n",
       "      <td>286</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CZE1114</td>\n",
       "      <td>21</td>\n",
       "      <td>Male</td>\n",
       "      <td>389</td>\n",
       "      <td>165/93</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>4.964844</td>\n",
       "      <td>285768</td>\n",
       "      <td>27.187500</td>\n",
       "      <td>235</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BNI9906</td>\n",
       "      <td>21</td>\n",
       "      <td>Female</td>\n",
       "      <td>324</td>\n",
       "      <td>174/99</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>9.460938</td>\n",
       "      <td>235282</td>\n",
       "      <td>28.171875</td>\n",
       "      <td>587</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>France</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>JLN3497</td>\n",
       "      <td>84</td>\n",
       "      <td>Male</td>\n",
       "      <td>383</td>\n",
       "      <td>163/100</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.648438</td>\n",
       "      <td>125640</td>\n",
       "      <td>36.468750</td>\n",
       "      <td>378</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>GFO8847</td>\n",
       "      <td>66</td>\n",
       "      <td>Male</td>\n",
       "      <td>318</td>\n",
       "      <td>91/88</td>\n",
       "      <td>93</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.514648</td>\n",
       "      <td>160555</td>\n",
       "      <td>21.812500</td>\n",
       "      <td>231</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>Thailand</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>ZOO7941</td>\n",
       "      <td>54</td>\n",
       "      <td>Female</td>\n",
       "      <td>297</td>\n",
       "      <td>172/86</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7.796875</td>\n",
       "      <td>241339</td>\n",
       "      <td>20.140625</td>\n",
       "      <td>795</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>WYV0966</td>\n",
       "      <td>90</td>\n",
       "      <td>Male</td>\n",
       "      <td>358</td>\n",
       "      <td>102/73</td>\n",
       "      <td>84</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.627441</td>\n",
       "      <td>190450</td>\n",
       "      <td>28.890625</td>\n",
       "      <td>284</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>XXM0972</td>\n",
       "      <td>84</td>\n",
       "      <td>Male</td>\n",
       "      <td>220</td>\n",
       "      <td>131/68</td>\n",
       "      <td>107</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>10.546875</td>\n",
       "      <td>122093</td>\n",
       "      <td>22.218750</td>\n",
       "      <td>370</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>Japan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>XCQ5937</td>\n",
       "      <td>20</td>\n",
       "      <td>Male</td>\n",
       "      <td>145</td>\n",
       "      <td>144/105</td>\n",
       "      <td>68</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>11.351562</td>\n",
       "      <td>25086</td>\n",
       "      <td>35.812500</td>\n",
       "      <td>790</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>FTJ5456</td>\n",
       "      <td>43</td>\n",
       "      <td>Female</td>\n",
       "      <td>248</td>\n",
       "      <td>160/70</td>\n",
       "      <td>55</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>4.054688</td>\n",
       "      <td>209703</td>\n",
       "      <td>22.562500</td>\n",
       "      <td>232</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>Japan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        id  Age     Sex  Cholesterol       BP  Heart Rate  Diabetes  \\\n",
       "0  BMW7812   67    Male          208   158/88          72         0   \n",
       "1  CZE1114   21    Male          389   165/93          98         1   \n",
       "2  BNI9906   21  Female          324   174/99          72         1   \n",
       "3  JLN3497   84    Male          383  163/100          73         1   \n",
       "4  GFO8847   66    Male          318    91/88          93         1   \n",
       "5  ZOO7941   54  Female          297   172/86          48         1   \n",
       "6  WYV0966   90    Male          358   102/73          84         0   \n",
       "7  XXM0972   84    Male          220   131/68         107         0   \n",
       "8  XCQ5937   20    Male          145  144/105          68         1   \n",
       "9  FTJ5456   43  Female          248   160/70          55         0   \n",
       "\n",
       "   Family History  Smoking  Obesity  ...  Sedentary Hours  Income        BMI  \\\n",
       "0               0        1        0  ...         6.613281  261404  31.250000   \n",
       "1               1        1        1  ...         4.964844  285768  27.187500   \n",
       "2               0        0        0  ...         9.460938  235282  28.171875   \n",
       "3               1        1        0  ...         7.648438  125640  36.468750   \n",
       "4               1        1        1  ...         1.514648  160555  21.812500   \n",
       "5               1        1        0  ...         7.796875  241339  20.140625   \n",
       "6               0        1        0  ...         0.627441  190450  28.890625   \n",
       "7               0        1        1  ...        10.546875  122093  22.218750   \n",
       "8               0        1        1  ...        11.351562   25086  35.812500   \n",
       "9               1        1        1  ...         4.054688  209703  22.562500   \n",
       "\n",
       "   Triglycerides  Physical Activity  Sleep Hours    Country      Continent  \\\n",
       "0            286                  0            6  Argentina  South America   \n",
       "1            235                  1            7     Canada  North America   \n",
       "2            587                  4            4     France         Europe   \n",
       "3            378                  3            4     Canada  North America   \n",
       "4            231                  1            5   Thailand           Asia   \n",
       "5            795                  5           10    Germany         Europe   \n",
       "6            284                  4           10     Canada  North America   \n",
       "7            370                  6            7      Japan           Asia   \n",
       "8            790                  7            4     Brazil  South America   \n",
       "9            232                  7            7      Japan           Asia   \n",
       "\n",
       "            Hemisphere  Heart Attack Risk  \n",
       "0  Southern Hemisphere                  0  \n",
       "1  Northern Hemisphere                  0  \n",
       "2  Northern Hemisphere                  0  \n",
       "3  Northern Hemisphere                  0  \n",
       "4  Northern Hemisphere                  0  \n",
       "5  Northern Hemisphere                  1  \n",
       "6  Northern Hemisphere                  1  \n",
       "7  Northern Hemisphere                  1  \n",
       "8  Southern Hemisphere                  0  \n",
       "9  Northern Hemisphere                  0  \n",
       "\n",
       "[10 rows x 26 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#for slicing dataset...\n",
    "#print only 10 rows\n",
    "df.loc[0:9]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "0406e561",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:27.650045Z",
     "iopub.status.busy": "2024-05-11T11:16:27.649558Z",
     "iopub.status.idle": "2024-05-11T11:16:27.667960Z",
     "shell.execute_reply": "2024-05-11T11:16:27.666559Z"
    },
    "papermill": {
     "duration": 0.072503,
     "end_time": "2024-05-11T11:16:27.670515",
     "exception": false,
     "start_time": "2024-05-11T11:16:27.598012",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>67</td>\n",
       "      <td>South America</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>North America</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>Europe</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>North America</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>66</td>\n",
       "      <td>Asia</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8758</th>\n",
       "      <td>60</td>\n",
       "      <td>Asia</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8759</th>\n",
       "      <td>28</td>\n",
       "      <td>North America</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8760</th>\n",
       "      <td>47</td>\n",
       "      <td>South America</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8761</th>\n",
       "      <td>36</td>\n",
       "      <td>South America</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8762</th>\n",
       "      <td>25</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8763 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Age      Continent  Heart Attack Risk\n",
       "0      67  South America                  0\n",
       "1      21  North America                  0\n",
       "2      21         Europe                  0\n",
       "3      84  North America                  0\n",
       "4      66           Asia                  0\n",
       "...   ...            ...                ...\n",
       "8758   60           Asia                  0\n",
       "8759   28  North America                  0\n",
       "8760   47  South America                  1\n",
       "8761   36  South America                  0\n",
       "8762   25         Europe                  1\n",
       "\n",
       "[8763 rows x 3 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Subset DataFrame for [\"Age\", \"Continent\", \"Heart Attack Risk\"] columns and All rows\n",
    "\n",
    "df.loc[: , [\"Age\", \"Continent\", \"Heart Attack Risk\"]]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d13ce495",
   "metadata": {
    "papermill": {
     "duration": 0.048994,
     "end_time": "2024-05-11T11:16:27.769863",
     "exception": false,
     "start_time": "2024-05-11T11:16:27.720869",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .iloc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "5d22ff01",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:27.870977Z",
     "iopub.status.busy": "2024-05-11T11:16:27.870513Z",
     "iopub.status.idle": "2024-05-11T11:16:27.890154Z",
     "shell.execute_reply": "2024-05-11T11:16:27.888960Z"
    },
    "papermill": {
     "duration": 0.073695,
     "end_time": "2024-05-11T11:16:27.892798",
     "exception": false,
     "start_time": "2024-05-11T11:16:27.819103",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>BP</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>Exercise Hours Per Week</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>67</td>\n",
       "      <td>Male</td>\n",
       "      <td>208</td>\n",
       "      <td>158/88</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.167969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>Male</td>\n",
       "      <td>389</td>\n",
       "      <td>165/93</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.813477</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>Female</td>\n",
       "      <td>324</td>\n",
       "      <td>174/99</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.078125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>Male</td>\n",
       "      <td>383</td>\n",
       "      <td>163/100</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.828125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>66</td>\n",
       "      <td>Male</td>\n",
       "      <td>318</td>\n",
       "      <td>91/88</td>\n",
       "      <td>93</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5.804688</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>54</td>\n",
       "      <td>Female</td>\n",
       "      <td>297</td>\n",
       "      <td>172/86</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.625000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>90</td>\n",
       "      <td>Male</td>\n",
       "      <td>358</td>\n",
       "      <td>102/73</td>\n",
       "      <td>84</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.097656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>84</td>\n",
       "      <td>Male</td>\n",
       "      <td>220</td>\n",
       "      <td>131/68</td>\n",
       "      <td>107</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.427734</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>20</td>\n",
       "      <td>Male</td>\n",
       "      <td>145</td>\n",
       "      <td>144/105</td>\n",
       "      <td>68</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>16.875000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age     Sex  Cholesterol       BP  Heart Rate  Diabetes  Family History  \\\n",
       "0   67    Male          208   158/88          72         0               0   \n",
       "1   21    Male          389   165/93          98         1               1   \n",
       "2   21  Female          324   174/99          72         1               0   \n",
       "3   84    Male          383  163/100          73         1               1   \n",
       "4   66    Male          318    91/88          93         1               1   \n",
       "5   54  Female          297   172/86          48         1               1   \n",
       "6   90    Male          358   102/73          84         0               0   \n",
       "7   84    Male          220   131/68         107         0               0   \n",
       "8   20    Male          145  144/105          68         1               0   \n",
       "\n",
       "   Smoking  Obesity  Alcohol Consumption  Exercise Hours Per Week  \n",
       "0        1        0                    0                 4.167969  \n",
       "1        1        1                    1                 1.813477  \n",
       "2        0        0                    0                 2.078125  \n",
       "3        1        0                    1                 9.828125  \n",
       "4        1        1                    0                 5.804688  \n",
       "5        1        0                    1                 0.625000  \n",
       "6        1        0                    1                 4.097656  \n",
       "7        1        1                    1                 3.427734  \n",
       "8        1        1                    0                16.875000  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#print both rows and columns then we use 'iloc'\n",
    "#iloc print only integer numbers.\n",
    "df.iloc[0:9 , 1:12]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "55e2e666",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:27.997337Z",
     "iopub.status.busy": "2024-05-11T11:16:27.996826Z",
     "iopub.status.idle": "2024-05-11T11:16:28.016993Z",
     "shell.execute_reply": "2024-05-11T11:16:28.015735Z"
    },
    "papermill": {
     "duration": 0.074873,
     "end_time": "2024-05-11T11:16:28.020109",
     "exception": false,
     "start_time": "2024-05-11T11:16:27.945236",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>BP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BMW7812</td>\n",
       "      <td>67</td>\n",
       "      <td>Male</td>\n",
       "      <td>208</td>\n",
       "      <td>158/88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CZE1114</td>\n",
       "      <td>21</td>\n",
       "      <td>Male</td>\n",
       "      <td>389</td>\n",
       "      <td>165/93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BNI9906</td>\n",
       "      <td>21</td>\n",
       "      <td>Female</td>\n",
       "      <td>324</td>\n",
       "      <td>174/99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>JLN3497</td>\n",
       "      <td>84</td>\n",
       "      <td>Male</td>\n",
       "      <td>383</td>\n",
       "      <td>163/100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>GFO8847</td>\n",
       "      <td>66</td>\n",
       "      <td>Male</td>\n",
       "      <td>318</td>\n",
       "      <td>91/88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8758</th>\n",
       "      <td>MSV9918</td>\n",
       "      <td>60</td>\n",
       "      <td>Male</td>\n",
       "      <td>121</td>\n",
       "      <td>94/76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8759</th>\n",
       "      <td>QSV6764</td>\n",
       "      <td>28</td>\n",
       "      <td>Female</td>\n",
       "      <td>120</td>\n",
       "      <td>157/102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8760</th>\n",
       "      <td>XKA5925</td>\n",
       "      <td>47</td>\n",
       "      <td>Male</td>\n",
       "      <td>250</td>\n",
       "      <td>161/75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8761</th>\n",
       "      <td>EPE6801</td>\n",
       "      <td>36</td>\n",
       "      <td>Male</td>\n",
       "      <td>178</td>\n",
       "      <td>119/67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8762</th>\n",
       "      <td>ZWN9666</td>\n",
       "      <td>25</td>\n",
       "      <td>Female</td>\n",
       "      <td>356</td>\n",
       "      <td>138/67</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8763 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id  Age     Sex  Cholesterol       BP\n",
       "0     BMW7812   67    Male          208   158/88\n",
       "1     CZE1114   21    Male          389   165/93\n",
       "2     BNI9906   21  Female          324   174/99\n",
       "3     JLN3497   84    Male          383  163/100\n",
       "4     GFO8847   66    Male          318    91/88\n",
       "...       ...  ...     ...          ...      ...\n",
       "8758  MSV9918   60    Male          121    94/76\n",
       "8759  QSV6764   28  Female          120  157/102\n",
       "8760  XKA5925   47    Male          250   161/75\n",
       "8761  EPE6801   36    Male          178   119/67\n",
       "8762  ZWN9666   25  Female          356   138/67\n",
       "\n",
       "[8763 rows x 5 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Subset / Slice the DataFrame\n",
    "# All rows and first 5 columns\n",
    "\n",
    "df.iloc[:, 0:5]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d024dcb",
   "metadata": {
    "papermill": {
     "duration": 0.052557,
     "end_time": "2024-05-11T11:16:28.126245",
     "exception": false,
     "start_time": "2024-05-11T11:16:28.073688",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Delete column from dataset**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a48bfdf",
   "metadata": {
    "papermill": {
     "duration": 0.052716,
     "end_time": "2024-05-11T11:16:28.232544",
     "exception": false,
     "start_time": "2024-05-11T11:16:28.179828",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**del** keyword can be used to **delete** a column from DataFrame. Deleting / dropping columns is useful when these columns have no impact on the ML models and therefore are useless for analysis.\n",
    "\n",
    "Note: More commonly we use the **drop** function to remove columns but here we will use the del keyword"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9854204",
   "metadata": {
    "papermill": {
     "duration": 0.052679,
     "end_time": "2024-05-11T11:16:28.338272",
     "exception": false,
     "start_time": "2024-05-11T11:16:28.285593",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "809df432",
   "metadata": {
    "papermill": {
     "duration": 0.052971,
     "end_time": "2024-05-11T11:16:28.443951",
     "exception": false,
     "start_time": "2024-05-11T11:16:28.390980",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## del (delete)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "5d072f23",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:28.554752Z",
     "iopub.status.busy": "2024-05-11T11:16:28.554335Z",
     "iopub.status.idle": "2024-05-11T11:16:28.559918Z",
     "shell.execute_reply": "2024-05-11T11:16:28.558699Z"
    },
    "papermill": {
     "duration": 0.064522,
     "end_time": "2024-05-11T11:16:28.563771",
     "exception": false,
     "start_time": "2024-05-11T11:16:28.499249",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#delete Id column.\n",
    "del df[\"id\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1100fa61",
   "metadata": {
    "papermill": {
     "duration": 0.05061,
     "end_time": "2024-05-11T11:16:28.670319",
     "exception": false,
     "start_time": "2024-05-11T11:16:28.619709",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## create new column\n",
    "\n",
    "We have a column in dataframe Sedentary Hours which is the total number of hours a person rests. So we can use this information to create a **new column** \"Active Hours\" by subtracting Sedentary Hours by 24 which gives us the total number of hours a person is active. A new column can be created just like we create a **new key in a dictionary**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "912dfd93",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:28.774152Z",
     "iopub.status.busy": "2024-05-11T11:16:28.773706Z",
     "iopub.status.idle": "2024-05-11T11:16:28.799831Z",
     "shell.execute_reply": "2024-05-11T11:16:28.798600Z"
    },
    "papermill": {
     "duration": 0.081542,
     "end_time": "2024-05-11T11:16:28.803122",
     "exception": false,
     "start_time": "2024-05-11T11:16:28.721580",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>BP</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>...</th>\n",
       "      <th>Income</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity</th>\n",
       "      <th>Sleep Hours</th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Hemisphere</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "      <th>new_column</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>67</td>\n",
       "      <td>Male</td>\n",
       "      <td>208</td>\n",
       "      <td>158/88</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>261404</td>\n",
       "      <td>31.25</td>\n",
       "      <td>286</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age   Sex  Cholesterol      BP  Heart Rate  Diabetes  Family History  \\\n",
       "0   67  Male          208  158/88          72         0               0   \n",
       "\n",
       "   Smoking  Obesity  Alcohol Consumption  ...  Income    BMI  Triglycerides  \\\n",
       "0        1        0                    0  ...  261404  31.25            286   \n",
       "\n",
       "   Physical Activity  Sleep Hours    Country      Continent  \\\n",
       "0                  0            6  Argentina  South America   \n",
       "\n",
       "            Hemisphere  Heart Attack Risk  new_column  \n",
       "0  Southern Hemisphere                  0           1  \n",
       "\n",
       "[1 rows x 26 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#create new column..\n",
    "df['new_column'] = 1\n",
    "df.head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "6b49a1ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:28.911453Z",
     "iopub.status.busy": "2024-05-11T11:16:28.910941Z",
     "iopub.status.idle": "2024-05-11T11:16:28.939836Z",
     "shell.execute_reply": "2024-05-11T11:16:28.938418Z"
    },
    "papermill": {
     "duration": 0.08555,
     "end_time": "2024-05-11T11:16:28.942826",
     "exception": false,
     "start_time": "2024-05-11T11:16:28.857276",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>BP</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>...</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity</th>\n",
       "      <th>Sleep Hours</th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Hemisphere</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "      <th>new_column</th>\n",
       "      <th>Active Hours</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>67</td>\n",
       "      <td>Male</td>\n",
       "      <td>208</td>\n",
       "      <td>158/88</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>31.25</td>\n",
       "      <td>286</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>17.390625</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age   Sex  Cholesterol      BP  Heart Rate  Diabetes  Family History  \\\n",
       "0   67  Male          208  158/88          72         0               0   \n",
       "\n",
       "   Smoking  Obesity  Alcohol Consumption  ...    BMI Triglycerides  \\\n",
       "0        1        0                    0  ...  31.25           286   \n",
       "\n",
       "   Physical Activity  Sleep Hours    Country      Continent  \\\n",
       "0                  0            6  Argentina  South America   \n",
       "\n",
       "            Hemisphere  Heart Attack Risk  new_column  Active Hours  \n",
       "0  Southern Hemisphere                  0           1     17.390625  \n",
       "\n",
       "[1 rows x 27 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a New Column i.e \"Active Hours\"\n",
    "\n",
    "df[\"Active Hours\"] = 24 - df[\"Sedentary Hours\"]\n",
    "df.head(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f17e86c7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-03-08T11:07:21.132918Z",
     "iopub.status.busy": "2024-03-08T11:07:21.132573Z",
     "iopub.status.idle": "2024-03-08T11:07:21.140225Z",
     "shell.execute_reply": "2024-03-08T11:07:21.138701Z",
     "shell.execute_reply.started": "2024-03-08T11:07:21.132892Z"
    },
    "papermill": {
     "duration": 0.067352,
     "end_time": "2024-05-11T11:16:29.061492",
     "exception": false,
     "start_time": "2024-05-11T11:16:28.994140",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Task.3:**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db3ea17c",
   "metadata": {
    "papermill": {
     "duration": 0.051046,
     "end_time": "2024-05-11T11:16:29.179010",
     "exception": false,
     "start_time": "2024-05-11T11:16:29.127964",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### The formulae for  calculating mean is\n",
    "##             mean = total / number"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13a53dfc",
   "metadata": {
    "papermill": {
     "duration": 0.069775,
     "end_time": "2024-05-11T11:16:29.306454",
     "exception": false,
     "start_time": "2024-05-11T11:16:29.236679",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "0c0a6fc1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:29.429254Z",
     "iopub.status.busy": "2024-05-11T11:16:29.427490Z",
     "iopub.status.idle": "2024-05-11T11:16:29.441263Z",
     "shell.execute_reply": "2024-05-11T11:16:29.439301Z"
    },
    "papermill": {
     "duration": 0.077922,
     "end_time": "2024-05-11T11:16:29.446040",
     "exception": false,
     "start_time": "2024-05-11T11:16:29.368118",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "53.71\n",
      "\n",
      "259.88\n",
      "\n",
      "158263.18\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Use for loops and caculate the mean of columns [\"Age\", \"Cholesterol\", \"Income\"]\n",
    "\n",
    "\n",
    "for col in [\"Age\", \"Cholesterol\", \"Income\"]:\n",
    "    \n",
    "    total = df[col].sum()\n",
    "    \n",
    "    n = len(df[col])\n",
    "    \n",
    "    mean = total / n\n",
    "    \n",
    "    #round the mean value to 2 decimal places\n",
    "    \n",
    "    mean = round(mean, 2)\n",
    "    \n",
    "    print(mean)\n",
    "    \n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19700b60",
   "metadata": {
    "papermill": {
     "duration": 0.053998,
     "end_time": "2024-05-11T11:16:29.559275",
     "exception": false,
     "start_time": "2024-05-11T11:16:29.505277",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .std()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "af617644",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:29.678161Z",
     "iopub.status.busy": "2024-05-11T11:16:29.677138Z",
     "iopub.status.idle": "2024-05-11T11:16:29.687209Z",
     "shell.execute_reply": "2024-05-11T11:16:29.686086Z"
    },
    "papermill": {
     "duration": 0.070916,
     "end_time": "2024-05-11T11:16:29.690105",
     "exception": false,
     "start_time": "2024-05-11T11:16:29.619189",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "21.24829631134157\n",
      "\n",
      "80.85866206944085\n",
      "\n",
      "80570.59320833185\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Use numpy caculate the standard deviation of columns [\"Age\", \"Cholesterol\", \"Income\"]\n",
    "\n",
    "\n",
    "print( np.std(df[\"Age\"]) )\n",
    "\n",
    "print()\n",
    "\n",
    "print( np.std(df[\"Cholesterol\"]) )\n",
    "\n",
    "print()\n",
    "\n",
    "print( np.std(df[\"Income\"]) )\n",
    "\n",
    "print()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09deea1d",
   "metadata": {
    "papermill": {
     "duration": 0.055927,
     "end_time": "2024-05-11T11:16:29.805705",
     "exception": false,
     "start_time": "2024-05-11T11:16:29.749778",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .mode()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "41cc8a21",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:29.918463Z",
     "iopub.status.busy": "2024-05-11T11:16:29.917521Z",
     "iopub.status.idle": "2024-05-11T11:16:29.933829Z",
     "shell.execute_reply": "2024-05-11T11:16:29.931617Z"
    },
    "papermill": {
     "duration": 0.075015,
     "end_time": "2024-05-11T11:16:29.936798",
     "exception": false,
     "start_time": "2024-05-11T11:16:29.861783",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    Male\n",
      "Name: Sex, dtype: category\n",
      "Categories (2, object): ['Female', 'Male']\n",
      "\n",
      "0    1\n",
      "Name: Smoking, dtype: int32\n",
      "\n",
      "0    1\n",
      "Name: Obesity, dtype: int32\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Calculate mode of columns [\"Sex\", \"Smoking\", \"Obesity\"]\n",
    "\n",
    "print( df[\"Sex\"].mode() )\n",
    "\n",
    "print()\n",
    "\n",
    "print( df[\"Smoking\"].mode() )\n",
    "\n",
    "print()\n",
    "\n",
    "print( df[\"Obesity\"].mode() )\n",
    "\n",
    "print()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f4e4267",
   "metadata": {
    "papermill": {
     "duration": 0.054446,
     "end_time": "2024-05-11T11:16:30.044847",
     "exception": false,
     "start_time": "2024-05-11T11:16:29.990401",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**select_dtypes** function can be used to subset dataframe on columns with a particluar dtype"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b2b31c2",
   "metadata": {
    "papermill": {
     "duration": 0.053172,
     "end_time": "2024-05-11T11:16:30.151522",
     "exception": false,
     "start_time": "2024-05-11T11:16:30.098350",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .select_dtypes()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "eae3dcb4",
   "metadata": {
    "_kg_hide-input": true,
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:30.266467Z",
     "iopub.status.busy": "2024-05-11T11:16:30.265253Z",
     "iopub.status.idle": "2024-05-11T11:16:30.292905Z",
     "shell.execute_reply": "2024-05-11T11:16:30.291755Z"
    },
    "papermill": {
     "duration": 0.088525,
     "end_time": "2024-05-11T11:16:30.295619",
     "exception": false,
     "start_time": "2024-05-11T11:16:30.207094",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>Previous Heart Problems</th>\n",
       "      <th>Medication Use</th>\n",
       "      <th>Stress Level</th>\n",
       "      <th>Income</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity</th>\n",
       "      <th>Sleep Hours</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "      <th>new_column</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>67</td>\n",
       "      <td>208</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>261404</td>\n",
       "      <td>286</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>389</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>285768</td>\n",
       "      <td>235</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>324</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>235282</td>\n",
       "      <td>587</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>383</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>125640</td>\n",
       "      <td>378</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>66</td>\n",
       "      <td>318</td>\n",
       "      <td>93</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>160555</td>\n",
       "      <td>231</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8758</th>\n",
       "      <td>60</td>\n",
       "      <td>121</td>\n",
       "      <td>61</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>235420</td>\n",
       "      <td>67</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8759</th>\n",
       "      <td>28</td>\n",
       "      <td>120</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>217881</td>\n",
       "      <td>617</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8760</th>\n",
       "      <td>47</td>\n",
       "      <td>250</td>\n",
       "      <td>105</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>36998</td>\n",
       "      <td>527</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8761</th>\n",
       "      <td>36</td>\n",
       "      <td>178</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>209943</td>\n",
       "      <td>114</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8762</th>\n",
       "      <td>25</td>\n",
       "      <td>356</td>\n",
       "      <td>75</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>247338</td>\n",
       "      <td>180</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8763 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Age  Cholesterol  Heart Rate  Diabetes  Family History  Smoking  \\\n",
       "0      67          208          72         0               0        1   \n",
       "1      21          389          98         1               1        1   \n",
       "2      21          324          72         1               0        0   \n",
       "3      84          383          73         1               1        1   \n",
       "4      66          318          93         1               1        1   \n",
       "...   ...          ...         ...       ...             ...      ...   \n",
       "8758   60          121          61         1               1        1   \n",
       "8759   28          120          73         1               0        0   \n",
       "8760   47          250         105         0               1        1   \n",
       "8761   36          178          60         1               0        1   \n",
       "8762   25          356          75         1               1        0   \n",
       "\n",
       "      Obesity  Alcohol Consumption  Previous Heart Problems  Medication Use  \\\n",
       "0           0                    0                        0               0   \n",
       "1           1                    1                        1               0   \n",
       "2           0                    0                        1               1   \n",
       "3           0                    1                        1               0   \n",
       "4           1                    0                        1               0   \n",
       "...       ...                  ...                      ...             ...   \n",
       "8758        0                    1                        1               1   \n",
       "8759        1                    0                        0               0   \n",
       "8760        1                    1                        1               0   \n",
       "8761        0                    0                        1               1   \n",
       "8762        0                    1                        0               0   \n",
       "\n",
       "      Stress Level  Income  Triglycerides  Physical Activity  Sleep Hours  \\\n",
       "0                9  261404            286                  0            6   \n",
       "1                1  285768            235                  1            7   \n",
       "2                9  235282            587                  4            4   \n",
       "3                9  125640            378                  3            4   \n",
       "4                6  160555            231                  1            5   \n",
       "...            ...     ...            ...                ...          ...   \n",
       "8758             8  235420             67                  7            7   \n",
       "8759             8  217881            617                  4            9   \n",
       "8760             5   36998            527                  4            4   \n",
       "8761             5  209943            114                  2            8   \n",
       "8762             8  247338            180                  7            4   \n",
       "\n",
       "      Heart Attack Risk  new_column  \n",
       "0                     0           1  \n",
       "1                     0           1  \n",
       "2                     0           1  \n",
       "3                     0           1  \n",
       "4                     0           1  \n",
       "...                 ...         ...  \n",
       "8758                  0           1  \n",
       "8759                  0           1  \n",
       "8760                  1           1  \n",
       "8761                  0           1  \n",
       "8762                  1           1  \n",
       "\n",
       "[8763 rows x 17 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# select only int and float columns\n",
    "\n",
    "df.select_dtypes(include = [\"int\", \"float\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e351e24f",
   "metadata": {
    "papermill": {
     "duration": 0.056965,
     "end_time": "2024-05-11T11:16:30.409543",
     "exception": false,
     "start_time": "2024-05-11T11:16:30.352578",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "groupby function is used to **group the dataframe by a particular column**. We can use the get_group function on a groupby object to get a particular group of dataset. This is useful because identifying groups in the dataste can help us analyse it better"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "da808717",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:30.525815Z",
     "iopub.status.busy": "2024-05-11T11:16:30.523964Z",
     "iopub.status.idle": "2024-05-11T11:16:30.531367Z",
     "shell.execute_reply": "2024-05-11T11:16:30.530446Z"
    },
    "papermill": {
     "duration": 0.066918,
     "end_time": "2024-05-11T11:16:30.534000",
     "exception": false,
     "start_time": "2024-05-11T11:16:30.467082",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Group the dataframe by Continent Column\n",
    "\n",
    "grouped_df = df.groupby(by = [\"Continent\"], observed=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "b0233dc5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:30.643990Z",
     "iopub.status.busy": "2024-05-11T11:16:30.642627Z",
     "iopub.status.idle": "2024-05-11T11:16:30.679749Z",
     "shell.execute_reply": "2024-05-11T11:16:30.678135Z"
    },
    "papermill": {
     "duration": 0.093586,
     "end_time": "2024-05-11T11:16:30.682654",
     "exception": false,
     "start_time": "2024-05-11T11:16:30.589068",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>BP</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>...</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity</th>\n",
       "      <th>Sleep Hours</th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Hemisphere</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "      <th>new_column</th>\n",
       "      <th>Active Hours</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>Female</td>\n",
       "      <td>324</td>\n",
       "      <td>174/99</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>28.171875</td>\n",
       "      <td>587</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>France</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>14.539062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>54</td>\n",
       "      <td>Female</td>\n",
       "      <td>297</td>\n",
       "      <td>172/86</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>20.140625</td>\n",
       "      <td>795</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>16.203125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>73</td>\n",
       "      <td>Male</td>\n",
       "      <td>122</td>\n",
       "      <td>114/88</td>\n",
       "      <td>97</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>36.531250</td>\n",
       "      <td>773</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>Italy</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>13.914062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>45</td>\n",
       "      <td>Male</td>\n",
       "      <td>294</td>\n",
       "      <td>130/84</td>\n",
       "      <td>66</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>25.125000</td>\n",
       "      <td>360</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>France</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>17.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>50</td>\n",
       "      <td>Male</td>\n",
       "      <td>359</td>\n",
       "      <td>175/60</td>\n",
       "      <td>97</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>34.656250</td>\n",
       "      <td>358</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>19.953125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8738</th>\n",
       "      <td>88</td>\n",
       "      <td>Male</td>\n",
       "      <td>146</td>\n",
       "      <td>157/97</td>\n",
       "      <td>78</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>23.421875</td>\n",
       "      <td>446</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>17.718750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8748</th>\n",
       "      <td>81</td>\n",
       "      <td>Male</td>\n",
       "      <td>137</td>\n",
       "      <td>143/64</td>\n",
       "      <td>61</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>35.062500</td>\n",
       "      <td>191</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>17.234375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8751</th>\n",
       "      <td>75</td>\n",
       "      <td>Male</td>\n",
       "      <td>176</td>\n",
       "      <td>102/89</td>\n",
       "      <td>78</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>23.796875</td>\n",
       "      <td>748</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>17.359375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8755</th>\n",
       "      <td>25</td>\n",
       "      <td>Male</td>\n",
       "      <td>307</td>\n",
       "      <td>137/94</td>\n",
       "      <td>78</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>33.468750</td>\n",
       "      <td>296</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>13.484375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8762</th>\n",
       "      <td>25</td>\n",
       "      <td>Female</td>\n",
       "      <td>356</td>\n",
       "      <td>138/67</td>\n",
       "      <td>75</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>32.906250</td>\n",
       "      <td>180</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14.992188</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2241 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Age     Sex  Cholesterol      BP  Heart Rate  Diabetes  Family History  \\\n",
       "2      21  Female          324  174/99          72         1               0   \n",
       "5      54  Female          297  172/86          48         1               1   \n",
       "15     73    Male          122  114/88          97         1               1   \n",
       "21     45    Male          294  130/84          66         0               0   \n",
       "22     50    Male          359  175/60          97         0               1   \n",
       "...   ...     ...          ...     ...         ...       ...             ...   \n",
       "8738   88    Male          146  157/97          78         0               0   \n",
       "8748   81    Male          137  143/64          61         1               0   \n",
       "8751   75    Male          176  102/89          78         0               0   \n",
       "8755   25    Male          307  137/94          78         0               1   \n",
       "8762   25  Female          356  138/67          75         1               1   \n",
       "\n",
       "      Smoking  Obesity  Alcohol Consumption  ...        BMI Triglycerides  \\\n",
       "2           0        0                    0  ...  28.171875           587   \n",
       "5           1        0                    1  ...  20.140625           795   \n",
       "15          1        0                    1  ...  36.531250           773   \n",
       "21          1        1                    1  ...  25.125000           360   \n",
       "22          1        0                    1  ...  34.656250           358   \n",
       "...       ...      ...                  ...  ...        ...           ...   \n",
       "8738        1        0                    1  ...  23.421875           446   \n",
       "8748        1        1                    0  ...  35.062500           191   \n",
       "8751        1        1                    1  ...  23.796875           748   \n",
       "8755        1        0                    1  ...  33.468750           296   \n",
       "8762        0        0                    1  ...  32.906250           180   \n",
       "\n",
       "      Physical Activity  Sleep Hours         Country  Continent  \\\n",
       "2                     4            4          France     Europe   \n",
       "5                     5           10         Germany     Europe   \n",
       "15                    5            8           Italy     Europe   \n",
       "21                    4            6          France     Europe   \n",
       "22                    4            8           Spain     Europe   \n",
       "...                 ...          ...             ...        ...   \n",
       "8738                  6           10           Spain     Europe   \n",
       "8748                  3           10           Spain     Europe   \n",
       "8751                  5            8           Spain     Europe   \n",
       "8755                  7            5           Spain     Europe   \n",
       "8762                  7            4  United Kingdom     Europe   \n",
       "\n",
       "               Hemisphere  Heart Attack Risk  new_column  Active Hours  \n",
       "2     Northern Hemisphere                  0           1     14.539062  \n",
       "5     Northern Hemisphere                  1           1     16.203125  \n",
       "15    Southern Hemisphere                  1           1     13.914062  \n",
       "21    Northern Hemisphere                  1           1     17.000000  \n",
       "22    Southern Hemisphere                  0           1     19.953125  \n",
       "...                   ...                ...         ...           ...  \n",
       "8738  Southern Hemisphere                  0           1     17.718750  \n",
       "8748  Southern Hemisphere                  0           1     17.234375  \n",
       "8751  Southern Hemisphere                  1           1     17.359375  \n",
       "8755  Southern Hemisphere                  0           1     13.484375  \n",
       "8762  Northern Hemisphere                  1           1     14.992188  \n",
       "\n",
       "[2241 rows x 27 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped_df.get_group(\"Europe\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "645aa85f",
   "metadata": {
    "papermill": {
     "duration": 0.051822,
     "end_time": "2024-05-11T11:16:30.789094",
     "exception": false,
     "start_time": "2024-05-11T11:16:30.737272",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Task.4:**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "dfda679c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:30.896833Z",
     "iopub.status.busy": "2024-05-11T11:16:30.895564Z",
     "iopub.status.idle": "2024-05-11T11:16:30.900790Z",
     "shell.execute_reply": "2024-05-11T11:16:30.899866Z"
    },
    "papermill": {
     "duration": 0.061542,
     "end_time": "2024-05-11T11:16:30.903144",
     "exception": false,
     "start_time": "2024-05-11T11:16:30.841602",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "e1134e27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:31.012543Z",
     "iopub.status.busy": "2024-05-11T11:16:31.011698Z",
     "iopub.status.idle": "2024-05-11T11:16:31.026681Z",
     "shell.execute_reply": "2024-05-11T11:16:31.024429Z"
    },
    "papermill": {
     "duration": 0.073825,
     "end_time": "2024-05-11T11:16:31.029223",
     "exception": false,
     "start_time": "2024-05-11T11:16:30.955398",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sex\n",
      "Male      6111\n",
      "Female    2652\n",
      "Name: count, dtype: int64\n",
      "\n",
      "\n",
      "\n",
      "Diet\n",
      "Healthy      2960\n",
      "Average      2912\n",
      "Unhealthy    2891\n",
      "Name: count, dtype: int64\n",
      "\n",
      "\n",
      "\n",
      "Continent\n",
      "Asia             2543\n",
      "Europe           2241\n",
      "South America    1362\n",
      "Australia         884\n",
      "Africa            873\n",
      "North America     860\n",
      "Name: count, dtype: int64\n",
      "\n",
      "\n",
      "\n",
      "CategoricalIndex(['Asia', 'Europe', 'South America', 'Australia', 'Africa',\n",
      "                  'North America'],\n",
      "                 categories=['Africa', 'Asia', 'Australia', 'Europe', 'North America', 'South America'], ordered=False, dtype='category', name='Continent')\n"
     ]
    }
   ],
   "source": [
    "# this shows the order of Sex,Diet and Continents with the most values\n",
    "print(df[\"Sex\"].value_counts())\n",
    "print(\"\\n\\n\")\n",
    "\n",
    "print(df[\"Diet\"].value_counts())\n",
    "print(\"\\n\\n\")\n",
    "\n",
    "print(df[\"Continent\"].value_counts())\n",
    "print(\"\\n\\n\")\n",
    "\n",
    "# this will print the continent names in ascending order\n",
    "print(df[\"Continent\"].value_counts().index)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2e7f494",
   "metadata": {
    "papermill": {
     "duration": 0.053279,
     "end_time": "2024-05-11T11:16:31.136690",
     "exception": false,
     "start_time": "2024-05-11T11:16:31.083411",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .countplot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "e82d6a48",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:31.245248Z",
     "iopub.status.busy": "2024-05-11T11:16:31.244389Z",
     "iopub.status.idle": "2024-05-11T11:16:31.557993Z",
     "shell.execute_reply": "2024-05-11T11:16:31.556381Z"
    },
    "papermill": {
     "duration": 0.371483,
     "end_time": "2024-05-11T11:16:31.561150",
     "exception": false,
     "start_time": "2024-05-11T11:16:31.189667",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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T7Vu3TrDXjsAAKg4DN1C9MEHHyg7O1sdO3ZUcHCw7bZ8+XLbmFmzZql3794aMGCAOnTooKCgIK1YscK23tXVVWvXrpWrq6siIiL05JNPasiQIYqNjbWNqVu3rtatW6f4+Hi1aNFCb7/9tubNm6fIyMhyfb0AAKBiqlDnIaqoOA/Rb8N5iByD8xABQOk47XmIAAAAjEAhAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApkchAgAApmdoIdq6dav69OmjkJAQWSwWrVq1ym79008/LYvFYnfr3r273ZjMzEwNHjxYvr6+8vf31/Dhw5Wbm2s35sCBA3rooYdUpUoVhYaGavr06WX90gAAgBMxtBDl5eWpRYsWmjNnzk3HdO/eXenp6bbbsmXL7NYPHjxYhw4dUnx8vNauXautW7fq2Wefta3PyclRt27dVKdOHe3bt08zZszQ5MmT9eGHH5bZ6wIAAM7Fzcgn79Gjh3r06HHLMZ6engoKCrrhuiNHjmj9+vX6+uuv1aZNG0nSe++9p549e+qtt95SSEiIlixZomvXrmnBggXy8PBQ06ZNlZycrJkzZ9oVJwAAYF4Vfg7Rli1bFBAQoEaNGun555/XhQsXbOuSkpLk7+9vK0OS1LVrV7m4uGj37t22MR06dJCHh4dtTGRkpI4dO6aLFy/e8DmvXr2qnJwcuxsAAKi8KnQh6t69uxYvXqyEhARNmzZNiYmJ6tGjhwoLCyVJGRkZCggIsPs3bm5uqlGjhjIyMmxjAgMD7cZcv399zC9NmTJFfn5+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AJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJgehQgAAJhehS5EkydPlsVisbs1btzYtv7KlSuKiopSzZo15ePjowEDBujs2bN2j5GWlqZevXrJ29tbAQEBGjNmjAoKCsr7pQAAgArMzegAv6Zp06batGmT7b6b2/9Ffvnll7Vu3Tp99tln8vPz06hRo9S/f3/t2LFDklRYWKhevXopKChIO3fuVHp6uoYMGSJ3d3e9+eab5f5aAABAxVThC5Gbm5uCgoKKLc/Oztb8+fO1dOlSde7cWZK0cOFCNWnSRLt27dL999+vjRs36vDhw9q0aZMCAwPVsmVL/eUvf9G4ceM0efJkeXh4lPfLAQAAFVCF3mUmSd99951CQkJUr149DR48WGlpaZKkffv2KT8/X127drWNbdy4se666y4lJSVJkpKSkhQeHq7AwEDbmMjISOXk5OjQoUM3fc6rV68qJyfH7gYAACqvCl2I2rVrp7i4OK1fv14ffPCBUlNT9dBDD+nSpUvKyMiQh4eH/P397f5NYGCgMjIyJEkZGRl2Zej6+uvrbmbKlCny8/Oz3UJDQx37wgAAQIVSoXeZ9ejRw/Zz8+bN1a5dO9WpU0effvqpvLy8yux5x48fr+joaNv9nJwcShEAAJVYhd5C9Ev+/v665557dPz4cQUFBenatWvKysqyG3P27FnbnKOgoKBiR51dv3+jeUnXeXp6ytfX1+4GAAAqL6cqRLm5uUpJSVFwcLBat24td3d3JSQk2NYfO3ZMaWlpioiIkCRFRETo4MGDOnfunG1MfHy8fH19FRYWVu75AQBAxVShd5m9+uqr6tOnj+rUqaMzZ85o0qRJcnV11aBBg+Tn56fhw4crOjpaNWrUkK+vr1544QVFRETo/vvvlyR169ZNYWFheuqppzR9+nRlZGRowoQJioqKkqenp8GvDgAAVBQVuhB9//33GjRokC5cuKDatWvrwQcf1K5du1S7dm1J0qxZs+Ti4qIBAwbo6tWrioyM1N/+9jfbv3d1ddXatWv1/PPPKyIiQlWrVtXQoUMVGxtr1EsCAAAVUIUuRJ988skt11epUkVz5szRnDlzbjqmTp06+vLLLx0dDQAAVCJONYcIAACgLFCIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6VGIAACA6ZmqEM2ZM0d33323qlSponbt2mnPnj1GRwIAABWAaQrR8uXLFR0drUmTJumbb75RixYtFBkZqXPnzhkdDQAAGMw0hWjmzJkaMWKEnnnmGYWFhWnu3Lny9vbWggULjI4GAAAM5mZ0gPJw7do17du3T+PHj7ctc3FxUdeuXZWUlFRs/NWrV3X16lXb/ezsbElSTk7OLZ+n8OplByV2br/2Pv2aS1cKHZTEuZX2fZSkgssFDkji/BzxXuYV8F5KpX8vL1/90UFJnJsj/k9eyc93QBLnd6v38vo6q9X66w9kNYHTp09bJVl37txpt3zMmDHW++67r9j4SZMmWSVx48aNGzdu3CrB7dSpU7/aFUyxhei3Gj9+vKKjo233i4qKlJmZqZo1a8pisRiY7NZycnIUGhqqU6dOydfX1+g4Tov30XF4Lx2H99IxeB8dxxneS6vVqkuXLikkJORXx5qiENWqVUuurq46e/as3fKzZ88qKCio2HhPT095enraLfP39y/LiA7l6+tbYf9z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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x = df[\"Continent\"], order = df[\"Continent\"].value_counts().index)\n",
    "plt.xticks(rotation = 90)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "82920dbc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:31.672268Z",
     "iopub.status.busy": "2024-05-11T11:16:31.671745Z",
     "iopub.status.idle": "2024-05-11T11:16:31.836978Z",
     "shell.execute_reply": "2024-05-11T11:16:31.835558Z"
    },
    "papermill": {
     "duration": 0.222586,
     "end_time": "2024-05-11T11:16:31.839582",
     "exception": false,
     "start_time": "2024-05-11T11:16:31.616996",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x = df[\"Sex\"], order = df[\"Sex\"].value_counts().index)\n",
    "plt.xticks(rotation = 90)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "8597d2ff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:31.949014Z",
     "iopub.status.busy": "2024-05-11T11:16:31.948056Z",
     "iopub.status.idle": "2024-05-11T11:16:32.654901Z",
     "shell.execute_reply": "2024-05-11T11:16:32.653689Z"
    },
    "papermill": {
     "duration": 0.764815,
     "end_time": "2024-05-11T11:16:32.657703",
     "exception": false,
     "start_time": "2024-05-11T11:16:31.892888",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "columns = ['Diet', 'Country','Hemisphere']\n",
    "\n",
    "for column in columns:\n",
    "    plt.figure(figsize=(4, 3))\n",
    "    sns.countplot(x=column, data=df)\n",
    "    plt.title(f'Count Plot of {column}')\n",
    "    plt.xticks(rotation=90)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc115075",
   "metadata": {
    "papermill": {
     "duration": 0.056784,
     "end_time": "2024-05-11T11:16:32.773571",
     "exception": false,
     "start_time": "2024-05-11T11:16:32.716787",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .pie()\n",
    "**pieplot**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "93878d2b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:32.890484Z",
     "iopub.status.busy": "2024-05-11T11:16:32.888839Z",
     "iopub.status.idle": "2024-05-11T11:16:33.015878Z",
     "shell.execute_reply": "2024-05-11T11:16:33.014450Z"
    },
    "papermill": {
     "duration": 0.189066,
     "end_time": "2024-05-11T11:16:33.019067",
     "exception": false,
     "start_time": "2024-05-11T11:16:32.830001",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(df[\"Heart Attack Risk\"].value_counts(),labels = [\"No Risk\"\n",
    ", \"At Risk\"],colors = [\"tab:cyan\",\"#e84a4a\"])\n",
    "\n",
    "plt.title(\"Ratio of People At Heart Attack Risk\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "69d90ff9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:33.138408Z",
     "iopub.status.busy": "2024-05-11T11:16:33.136691Z",
     "iopub.status.idle": "2024-05-11T11:16:33.149061Z",
     "shell.execute_reply": "2024-05-11T11:16:33.147518Z"
    },
    "papermill": {
     "duration": 0.074954,
     "end_time": "2024-05-11T11:16:33.152141",
     "exception": false,
     "start_time": "2024-05-11T11:16:33.077187",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Diabetes\n",
       "1    5716\n",
       "0    3047\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"Diabetes\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "b7e148ed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:33.266751Z",
     "iopub.status.busy": "2024-05-11T11:16:33.266258Z",
     "iopub.status.idle": "2024-05-11T11:16:33.566643Z",
     "shell.execute_reply": "2024-05-11T11:16:33.565167Z"
    },
    "papermill": {
     "duration": 0.360431,
     "end_time": "2024-05-11T11:16:33.569408",
     "exception": false,
     "start_time": "2024-05-11T11:16:33.208977",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "columns = [\"Smoking\", \"Diabetes\", \"Previous Heart Problems\"]\n",
    "\n",
    "for column in columns:\n",
    "    plt.figure(figsize=(4, 3))\n",
    "    counts = df[column].value_counts()\n",
    "    plt.pie(counts, labels=counts.index, autopct='%1.1f%%')\n",
    "    plt.title(f'Pie Plot of {column}')\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "967d1161",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:33.690436Z",
     "iopub.status.busy": "2024-05-11T11:16:33.689278Z",
     "iopub.status.idle": "2024-05-11T11:16:33.699949Z",
     "shell.execute_reply": "2024-05-11T11:16:33.698451Z"
    },
    "papermill": {
     "duration": 0.074198,
     "end_time": "2024-05-11T11:16:33.702695",
     "exception": false,
     "start_time": "2024-05-11T11:16:33.628497",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Sex\n",
       "Male      6111\n",
       "Female    2652\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"Sex\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "5101eace",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:33.818818Z",
     "iopub.status.busy": "2024-05-11T11:16:33.818314Z",
     "iopub.status.idle": "2024-05-11T11:16:33.848375Z",
     "shell.execute_reply": "2024-05-11T11:16:33.846568Z"
    },
    "papermill": {
     "duration": 0.091803,
     "end_time": "2024-05-11T11:16:33.851196",
     "exception": false,
     "start_time": "2024-05-11T11:16:33.759393",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                        0.006403\n",
       "Cholesterol                0.019340\n",
       "Heart Rate                -0.004251\n",
       "Diabetes                   0.017225\n",
       "Family History            -0.001652\n",
       "Smoking                   -0.004051\n",
       "Obesity                   -0.013318\n",
       "Alcohol Consumption       -0.013778\n",
       "Exercise Hours Per Week    0.011133\n",
       "Previous Heart Problems    0.000274\n",
       "Medication Use             0.002234\n",
       "Stress Level              -0.004111\n",
       "Sedentary Hours           -0.005618\n",
       "Income                     0.009628\n",
       "BMI                        0.000025\n",
       "Triglycerides              0.010471\n",
       "Physical Activity         -0.005014\n",
       "Sleep Hours               -0.018528\n",
       "new_column                      NaN\n",
       "Active Hours               0.005617\n",
       "dtype: float64"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "numeric = df.select_dtypes(include = \"number\")\n",
    "\n",
    "del numeric[\"Heart Attack Risk\"]\n",
    "\n",
    "score = numeric.corrwith(df[\"Heart Attack Risk\"])\n",
    "\n",
    "score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "2b8c3b96",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:33.971081Z",
     "iopub.status.busy": "2024-05-11T11:16:33.970593Z",
     "iopub.status.idle": "2024-05-11T11:16:34.302189Z",
     "shell.execute_reply": "2024-05-11T11:16:34.300981Z"
    },
    "papermill": {
     "duration": 0.396244,
     "end_time": "2024-05-11T11:16:34.305163",
     "exception": false,
     "start_time": "2024-05-11T11:16:33.908919",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.barh(y = score.index, width = score)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27c47278",
   "metadata": {
    "papermill": {
     "duration": 0.057908,
     "end_time": "2024-05-11T11:16:34.420512",
     "exception": false,
     "start_time": "2024-05-11T11:16:34.362604",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .Pointplot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "265a5ebc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:34.539599Z",
     "iopub.status.busy": "2024-05-11T11:16:34.539181Z",
     "iopub.status.idle": "2024-05-11T11:16:35.042171Z",
     "shell.execute_reply": "2024-05-11T11:16:35.040595Z"
    },
    "papermill": {
     "duration": 0.566426,
     "end_time": "2024-05-11T11:16:35.044959",
     "exception": false,
     "start_time": "2024-05-11T11:16:34.478533",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pointplot(data = df, x = \"Continent\",y = \"Income\")\n",
    "plt.title('Income by Continent')\n",
    "plt.xticks(rotation=90)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "bf2e1838",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:35.163434Z",
     "iopub.status.busy": "2024-05-11T11:16:35.162999Z",
     "iopub.status.idle": "2024-05-11T11:16:35.788748Z",
     "shell.execute_reply": "2024-05-11T11:16:35.787606Z"
    },
    "papermill": {
     "duration": 0.688893,
     "end_time": "2024-05-11T11:16:35.791764",
     "exception": false,
     "start_time": "2024-05-11T11:16:35.102871",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "columns = [\"Income\", \"BMI\", \"Age\"]\n",
    "\n",
    "for column in columns:\n",
    "    plt.figure(figsize=(4, 3))\n",
    "    plt.hist(df[column], color='#0072BD',edgecolor='black')\n",
    "    plt.title(f'Histogram of {column}')\n",
    "    plt.xlabel(column)\n",
    "    plt.ylabel('Frequency')\n",
    "    plt.xticks(rotation=90)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "3e28d55d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:35.921252Z",
     "iopub.status.busy": "2024-05-11T11:16:35.920818Z",
     "iopub.status.idle": "2024-05-11T11:16:36.881453Z",
     "shell.execute_reply": "2024-05-11T11:16:36.879586Z"
    },
    "papermill": {
     "duration": 1.029507,
     "end_time": "2024-05-11T11:16:36.884304",
     "exception": false,
     "start_time": "2024-05-11T11:16:35.854797",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600.25x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x_column = 'Continent'\n",
    "\n",
    "# Selecting a numeric column for y-axis\n",
    "y_column = 'Heart Attack Risk'\n",
    "\n",
    "# Create the point plot\n",
    "sns.catplot(data=df, x=x_column, y=\"Income\", kind=\"point\", hue=\"Sex\", \n",
    "join=False, dodge=True)\n",
    "\n",
    "plt.xticks(rotation=45)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5dc40bdc",
   "metadata": {
    "papermill": {
     "duration": 0.065178,
     "end_time": "2024-05-11T11:16:37.010091",
     "exception": false,
     "start_time": "2024-05-11T11:16:36.944913",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Task.5:**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "66777e82",
   "metadata": {
    "papermill": {
     "duration": 0.059464,
     "end_time": "2024-05-11T11:16:37.132278",
     "exception": false,
     "start_time": "2024-05-11T11:16:37.072814",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Correlation**\n",
    "Correlation shows if two things are related and how strongly they are connected. If one thing goes up, and the other usually goes up too, they have a positive correlation. If one goes up and the other goes down, they have a negative correlation. Correlation score is always between -1 to 1. Values close to 1 show strong positive relation while values close to -1 show strong negativee relation and values close to 0 show no relation\n",
    "\n",
    "**Correlation** can only be found for **numeric columns**. So we need to **select only numeric columns** then we can use the corr function to find the correlation **score**.\n",
    "\n",
    "Once the correlation score is found then we can the heatmap function from seaborn to help us to **visually inspect the correlation** of columns with each other."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15e91e17",
   "metadata": {
    "papermill": {
     "duration": 0.060885,
     "end_time": "2024-05-11T11:16:37.255040",
     "exception": false,
     "start_time": "2024-05-11T11:16:37.194155",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## correlation of 'Heart Attack Risk' with other columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "4954ef80",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:37.378054Z",
     "iopub.status.busy": "2024-05-11T11:16:37.377584Z",
     "iopub.status.idle": "2024-05-11T11:16:37.442147Z",
     "shell.execute_reply": "2024-05-11T11:16:37.440639Z"
    },
    "papermill": {
     "duration": 0.130222,
     "end_time": "2024-05-11T11:16:37.445838",
     "exception": false,
     "start_time": "2024-05-11T11:16:37.315616",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>Exercise Hours Per Week</th>\n",
       "      <th>Previous Heart Problems</th>\n",
       "      <th>...</th>\n",
       "      <th>Stress Level</th>\n",
       "      <th>Sedentary Hours</th>\n",
       "      <th>Income</th>\n",
       "      <th>BMI</th>\n",
       "      <th>Triglycerides</th>\n",
       "      <th>Physical Activity</th>\n",
       "      <th>Sleep Hours</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "      <th>new_column</th>\n",
       "      <th>Active Hours</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.009107</td>\n",
       "      <td>-0.003844</td>\n",
       "      <td>-0.014105</td>\n",
       "      <td>0.008353</td>\n",
       "      <td>0.394891</td>\n",
       "      <td>-0.008140</td>\n",
       "      <td>-0.006666</td>\n",
       "      <td>0.001202</td>\n",
       "      <td>0.000868</td>\n",
       "      <td>...</td>\n",
       "      <td>0.018307</td>\n",
       "      <td>0.017279</td>\n",
       "      <td>-0.001733</td>\n",
       "      <td>-0.002613</td>\n",
       "      <td>0.003415</td>\n",
       "      <td>0.001384</td>\n",
       "      <td>-0.002185</td>\n",
       "      <td>0.006403</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.017285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cholesterol</th>\n",
       "      <td>-0.009107</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000315</td>\n",
       "      <td>-0.013428</td>\n",
       "      <td>-0.021608</td>\n",
       "      <td>0.016342</td>\n",
       "      <td>-0.014843</td>\n",
       "      <td>-0.007261</td>\n",
       "      <td>0.021515</td>\n",
       "      <td>-0.006070</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.024487</td>\n",
       "      <td>0.018914</td>\n",
       "      <td>0.000007</td>\n",
       "      <td>0.017276</td>\n",
       "      <td>-0.005454</td>\n",
       "      <td>0.016056</td>\n",
       "      <td>0.004456</td>\n",
       "      <td>0.019340</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.018920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Heart Rate</th>\n",
       "      <td>-0.003844</td>\n",
       "      <td>0.000315</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.006764</td>\n",
       "      <td>-0.013470</td>\n",
       "      <td>-0.012331</td>\n",
       "      <td>0.012725</td>\n",
       "      <td>0.003459</td>\n",
       "      <td>0.008278</td>\n",
       "      <td>-0.004956</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.004547</td>\n",
       "      <td>-0.010230</td>\n",
       "      <td>0.004873</td>\n",
       "      <td>0.005301</td>\n",
       "      <td>0.012244</td>\n",
       "      <td>0.000834</td>\n",
       "      <td>0.001811</td>\n",
       "      <td>-0.004251</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.010235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Diabetes</th>\n",
       "      <td>-0.014105</td>\n",
       "      <td>-0.013428</td>\n",
       "      <td>0.006764</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.013844</td>\n",
       "      <td>0.000527</td>\n",
       "      <td>0.012866</td>\n",
       "      <td>0.005551</td>\n",
       "      <td>-0.007009</td>\n",
       "      <td>0.000867</td>\n",
       "      <td>...</td>\n",
       "      <td>0.006719</td>\n",
       "      <td>0.004698</td>\n",
       "      <td>-0.000759</td>\n",
       "      <td>-0.002855</td>\n",
       "      <td>0.010431</td>\n",
       "      <td>-0.002411</td>\n",
       "      <td>-0.012457</td>\n",
       "      <td>0.017225</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.004672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family History</th>\n",
       "      <td>0.008353</td>\n",
       "      <td>-0.021608</td>\n",
       "      <td>-0.013470</td>\n",
       "      <td>-0.013844</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.011748</td>\n",
       "      <td>-0.001444</td>\n",
       "      <td>0.012701</td>\n",
       "      <td>-0.006380</td>\n",
       "      <td>-0.004568</td>\n",
       "      <td>...</td>\n",
       "      <td>0.015637</td>\n",
       "      <td>0.002573</td>\n",
       "      <td>-0.000401</td>\n",
       "      <td>-0.011487</td>\n",
       "      <td>-0.001904</td>\n",
       "      <td>0.009561</td>\n",
       "      <td>-0.011199</td>\n",
       "      <td>-0.001652</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.002576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Smoking</th>\n",
       "      <td>0.394891</td>\n",
       "      <td>0.016342</td>\n",
       "      <td>-0.012331</td>\n",
       "      <td>0.000527</td>\n",
       "      <td>0.011748</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.003969</td>\n",
       "      <td>0.012754</td>\n",
       "      <td>-0.000149</td>\n",
       "      <td>-0.000574</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.001757</td>\n",
       "      <td>0.015305</td>\n",
       "      <td>0.003096</td>\n",
       "      <td>0.007679</td>\n",
       "      <td>0.004650</td>\n",
       "      <td>-0.006465</td>\n",
       "      <td>-0.005424</td>\n",
       "      <td>-0.004051</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.015303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Obesity</th>\n",
       "      <td>-0.008140</td>\n",
       "      <td>-0.014843</td>\n",
       "      <td>0.012725</td>\n",
       "      <td>0.012866</td>\n",
       "      <td>-0.001444</td>\n",
       "      <td>0.003969</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.024195</td>\n",
       "      <td>0.002099</td>\n",
       "      <td>0.005159</td>\n",
       "      <td>...</td>\n",
       "      <td>0.010626</td>\n",
       "      <td>-0.001332</td>\n",
       "      <td>-0.003870</td>\n",
       "      <td>-0.006041</td>\n",
       "      <td>0.001467</td>\n",
       "      <td>0.005337</td>\n",
       "      <td>-0.005314</td>\n",
       "      <td>-0.013318</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.001364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <td>-0.006666</td>\n",
       "      <td>-0.007261</td>\n",
       "      <td>0.003459</td>\n",
       "      <td>0.005551</td>\n",
       "      <td>0.012701</td>\n",
       "      <td>0.012754</td>\n",
       "      <td>-0.024195</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.008513</td>\n",
       "      <td>0.010395</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.005023</td>\n",
       "      <td>-0.012828</td>\n",
       "      <td>-0.022396</td>\n",
       "      <td>0.010566</td>\n",
       "      <td>0.006169</td>\n",
       "      <td>0.001593</td>\n",
       "      <td>-0.000843</td>\n",
       "      <td>-0.013778</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.012814</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Exercise Hours Per Week</th>\n",
       "      <td>0.001202</td>\n",
       "      <td>0.021515</td>\n",
       "      <td>0.008278</td>\n",
       "      <td>-0.007009</td>\n",
       "      <td>-0.006380</td>\n",
       "      <td>-0.000149</td>\n",
       "      <td>0.002099</td>\n",
       "      <td>-0.008513</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.005252</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.009097</td>\n",
       "      <td>0.008756</td>\n",
       "      <td>-0.023413</td>\n",
       "      <td>0.003792</td>\n",
       "      <td>0.001714</td>\n",
       "      <td>0.007725</td>\n",
       "      <td>-0.001243</td>\n",
       "      <td>0.011133</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.008761</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Previous Heart Problems</th>\n",
       "      <td>0.000868</td>\n",
       "      <td>-0.006070</td>\n",
       "      <td>-0.004956</td>\n",
       "      <td>0.000867</td>\n",
       "      <td>-0.004568</td>\n",
       "      <td>-0.000574</td>\n",
       "      <td>0.005159</td>\n",
       "      <td>0.010395</td>\n",
       "      <td>0.005252</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.017629</td>\n",
       "      <td>-0.002695</td>\n",
       "      <td>-0.003281</td>\n",
       "      <td>0.015710</td>\n",
       "      <td>-0.019029</td>\n",
       "      <td>0.008537</td>\n",
       "      <td>0.004460</td>\n",
       "      <td>0.000274</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.002682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Medication Use</th>\n",
       "      <td>0.000980</td>\n",
       "      <td>-0.000905</td>\n",
       "      <td>0.009244</td>\n",
       "      <td>-0.002656</td>\n",
       "      <td>0.000981</td>\n",
       "      <td>-0.010877</td>\n",
       "      <td>-0.006267</td>\n",
       "      <td>0.003339</td>\n",
       "      <td>-0.007128</td>\n",
       "      <td>0.005336</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000863</td>\n",
       "      <td>0.022510</td>\n",
       "      <td>-0.003464</td>\n",
       "      <td>0.009510</td>\n",
       "      <td>-0.011095</td>\n",
       "      <td>-0.011139</td>\n",
       "      <td>-0.020393</td>\n",
       "      <td>0.002234</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.022515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Stress Level</th>\n",
       "      <td>0.018307</td>\n",
       "      <td>-0.024487</td>\n",
       "      <td>-0.004547</td>\n",
       "      <td>0.006719</td>\n",
       "      <td>0.015637</td>\n",
       "      <td>-0.001757</td>\n",
       "      <td>0.010626</td>\n",
       "      <td>-0.005023</td>\n",
       "      <td>-0.009097</td>\n",
       "      <td>-0.017629</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.005401</td>\n",
       "      <td>-0.002760</td>\n",
       "      <td>-0.003244</td>\n",
       "      <td>-0.003921</td>\n",
       "      <td>0.007405</td>\n",
       "      <td>-0.014205</td>\n",
       "      <td>-0.004111</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005397</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sedentary Hours</th>\n",
       "      <td>0.017279</td>\n",
       "      <td>0.018914</td>\n",
       "      <td>-0.010230</td>\n",
       "      <td>0.004698</td>\n",
       "      <td>0.002573</td>\n",
       "      <td>0.015305</td>\n",
       "      <td>-0.001332</td>\n",
       "      <td>-0.012828</td>\n",
       "      <td>0.008756</td>\n",
       "      <td>-0.002695</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.005401</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.003505</td>\n",
       "      <td>-0.000023</td>\n",
       "      <td>-0.005790</td>\n",
       "      <td>-0.006174</td>\n",
       "      <td>0.004791</td>\n",
       "      <td>-0.005618</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.999999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Income</th>\n",
       "      <td>-0.001733</td>\n",
       "      <td>0.000007</td>\n",
       "      <td>0.004873</td>\n",
       "      <td>-0.000759</td>\n",
       "      <td>-0.000401</td>\n",
       "      <td>0.003096</td>\n",
       "      <td>-0.003870</td>\n",
       "      <td>-0.022396</td>\n",
       "      <td>-0.023413</td>\n",
       "      <td>-0.003281</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.002760</td>\n",
       "      <td>0.003505</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.008838</td>\n",
       "      <td>0.010739</td>\n",
       "      <td>0.000130</td>\n",
       "      <td>-0.006598</td>\n",
       "      <td>0.009628</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.003509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BMI</th>\n",
       "      <td>-0.002613</td>\n",
       "      <td>0.017276</td>\n",
       "      <td>0.005301</td>\n",
       "      <td>-0.002855</td>\n",
       "      <td>-0.011487</td>\n",
       "      <td>0.007679</td>\n",
       "      <td>-0.006041</td>\n",
       "      <td>0.010566</td>\n",
       "      <td>0.003792</td>\n",
       "      <td>0.015710</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003244</td>\n",
       "      <td>-0.000023</td>\n",
       "      <td>0.008838</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.005971</td>\n",
       "      <td>0.008117</td>\n",
       "      <td>-0.010024</td>\n",
       "      <td>0.000025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Triglycerides</th>\n",
       "      <td>0.003415</td>\n",
       "      <td>-0.005454</td>\n",
       "      <td>0.012244</td>\n",
       "      <td>0.010431</td>\n",
       "      <td>-0.001904</td>\n",
       "      <td>0.004650</td>\n",
       "      <td>0.001467</td>\n",
       "      <td>0.006169</td>\n",
       "      <td>0.001714</td>\n",
       "      <td>-0.019029</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003921</td>\n",
       "      <td>-0.005790</td>\n",
       "      <td>0.010739</td>\n",
       "      <td>-0.005971</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.007556</td>\n",
       "      <td>-0.029216</td>\n",
       "      <td>0.010471</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Physical Activity</th>\n",
       "      <td>0.001384</td>\n",
       "      <td>0.016056</td>\n",
       "      <td>0.000834</td>\n",
       "      <td>-0.002411</td>\n",
       "      <td>0.009561</td>\n",
       "      <td>-0.006465</td>\n",
       "      <td>0.005337</td>\n",
       "      <td>0.001593</td>\n",
       "      <td>0.007725</td>\n",
       "      <td>0.008537</td>\n",
       "      <td>...</td>\n",
       "      <td>0.007405</td>\n",
       "      <td>-0.006174</td>\n",
       "      <td>0.000130</td>\n",
       "      <td>0.008117</td>\n",
       "      <td>-0.007556</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.014033</td>\n",
       "      <td>-0.005014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.006180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sleep Hours</th>\n",
       "      <td>-0.002185</td>\n",
       "      <td>0.004456</td>\n",
       "      <td>0.001811</td>\n",
       "      <td>-0.012457</td>\n",
       "      <td>-0.011199</td>\n",
       "      <td>-0.005424</td>\n",
       "      <td>-0.005314</td>\n",
       "      <td>-0.000843</td>\n",
       "      <td>-0.001243</td>\n",
       "      <td>0.004460</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.014205</td>\n",
       "      <td>0.004791</td>\n",
       "      <td>-0.006598</td>\n",
       "      <td>-0.010024</td>\n",
       "      <td>-0.029216</td>\n",
       "      <td>0.014033</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.018528</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.004775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Heart Attack Risk</th>\n",
       "      <td>0.006403</td>\n",
       "      <td>0.019340</td>\n",
       "      <td>-0.004251</td>\n",
       "      <td>0.017225</td>\n",
       "      <td>-0.001652</td>\n",
       "      <td>-0.004051</td>\n",
       "      <td>-0.013318</td>\n",
       "      <td>-0.013778</td>\n",
       "      <td>0.011133</td>\n",
       "      <td>0.000274</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.004111</td>\n",
       "      <td>-0.005618</td>\n",
       "      <td>0.009628</td>\n",
       "      <td>0.000025</td>\n",
       "      <td>0.010471</td>\n",
       "      <td>-0.005014</td>\n",
       "      <td>-0.018528</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>new_column</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Active Hours</th>\n",
       "      <td>-0.017285</td>\n",
       "      <td>-0.018920</td>\n",
       "      <td>0.010235</td>\n",
       "      <td>-0.004672</td>\n",
       "      <td>-0.002576</td>\n",
       "      <td>-0.015303</td>\n",
       "      <td>0.001364</td>\n",
       "      <td>0.012814</td>\n",
       "      <td>-0.008761</td>\n",
       "      <td>0.002682</td>\n",
       "      <td>...</td>\n",
       "      <td>0.005397</td>\n",
       "      <td>-0.999999</td>\n",
       "      <td>-0.003509</td>\n",
       "      <td>0.000014</td>\n",
       "      <td>0.005772</td>\n",
       "      <td>0.006180</td>\n",
       "      <td>-0.004775</td>\n",
       "      <td>0.005617</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>21 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                              Age  Cholesterol  Heart Rate  Diabetes  \\\n",
       "Age                      1.000000    -0.009107   -0.003844 -0.014105   \n",
       "Cholesterol             -0.009107     1.000000    0.000315 -0.013428   \n",
       "Heart Rate              -0.003844     0.000315    1.000000  0.006764   \n",
       "Diabetes                -0.014105    -0.013428    0.006764  1.000000   \n",
       "Family History           0.008353    -0.021608   -0.013470 -0.013844   \n",
       "Smoking                  0.394891     0.016342   -0.012331  0.000527   \n",
       "Obesity                 -0.008140    -0.014843    0.012725  0.012866   \n",
       "Alcohol Consumption     -0.006666    -0.007261    0.003459  0.005551   \n",
       "Exercise Hours Per Week  0.001202     0.021515    0.008278 -0.007009   \n",
       "Previous Heart Problems  0.000868    -0.006070   -0.004956  0.000867   \n",
       "Medication Use           0.000980    -0.000905    0.009244 -0.002656   \n",
       "Stress Level             0.018307    -0.024487   -0.004547  0.006719   \n",
       "Sedentary Hours          0.017279     0.018914   -0.010230  0.004698   \n",
       "Income                  -0.001733     0.000007    0.004873 -0.000759   \n",
       "BMI                     -0.002613     0.017276    0.005301 -0.002855   \n",
       "Triglycerides            0.003415    -0.005454    0.012244  0.010431   \n",
       "Physical Activity        0.001384     0.016056    0.000834 -0.002411   \n",
       "Sleep Hours             -0.002185     0.004456    0.001811 -0.012457   \n",
       "Heart Attack Risk        0.006403     0.019340   -0.004251  0.017225   \n",
       "new_column                    NaN          NaN         NaN       NaN   \n",
       "Active Hours            -0.017285    -0.018920    0.010235 -0.004672   \n",
       "\n",
       "                         Family History   Smoking   Obesity  \\\n",
       "Age                            0.008353  0.394891 -0.008140   \n",
       "Cholesterol                   -0.021608  0.016342 -0.014843   \n",
       "Heart Rate                    -0.013470 -0.012331  0.012725   \n",
       "Diabetes                      -0.013844  0.000527  0.012866   \n",
       "Family History                 1.000000  0.011748 -0.001444   \n",
       "Smoking                        0.011748  1.000000  0.003969   \n",
       "Obesity                       -0.001444  0.003969  1.000000   \n",
       "Alcohol Consumption            0.012701  0.012754 -0.024195   \n",
       "Exercise Hours Per Week       -0.006380 -0.000149  0.002099   \n",
       "Previous Heart Problems       -0.004568 -0.000574  0.005159   \n",
       "Medication Use                 0.000981 -0.010877 -0.006267   \n",
       "Stress Level                   0.015637 -0.001757  0.010626   \n",
       "Sedentary Hours                0.002573  0.015305 -0.001332   \n",
       "Income                        -0.000401  0.003096 -0.003870   \n",
       "BMI                           -0.011487  0.007679 -0.006041   \n",
       "Triglycerides                 -0.001904  0.004650  0.001467   \n",
       "Physical Activity              0.009561 -0.006465  0.005337   \n",
       "Sleep Hours                   -0.011199 -0.005424 -0.005314   \n",
       "Heart Attack Risk             -0.001652 -0.004051 -0.013318   \n",
       "new_column                          NaN       NaN       NaN   \n",
       "Active Hours                  -0.002576 -0.015303  0.001364   \n",
       "\n",
       "                         Alcohol Consumption  Exercise Hours Per Week  \\\n",
       "Age                                -0.006666                 0.001202   \n",
       "Cholesterol                        -0.007261                 0.021515   \n",
       "Heart Rate                          0.003459                 0.008278   \n",
       "Diabetes                            0.005551                -0.007009   \n",
       "Family History                      0.012701                -0.006380   \n",
       "Smoking                             0.012754                -0.000149   \n",
       "Obesity                            -0.024195                 0.002099   \n",
       "Alcohol Consumption                 1.000000                -0.008513   \n",
       "Exercise Hours Per Week            -0.008513                 1.000000   \n",
       "Previous Heart Problems             0.010395                 0.005252   \n",
       "Medication Use                      0.003339                -0.007128   \n",
       "Stress Level                       -0.005023                -0.009097   \n",
       "Sedentary Hours                    -0.012828                 0.008756   \n",
       "Income                             -0.022396                -0.023413   \n",
       "BMI                                 0.010566                 0.003792   \n",
       "Triglycerides                       0.006169                 0.001714   \n",
       "Physical Activity                   0.001593                 0.007725   \n",
       "Sleep Hours                        -0.000843                -0.001243   \n",
       "Heart Attack Risk                  -0.013778                 0.011133   \n",
       "new_column                               NaN                      NaN   \n",
       "Active Hours                        0.012814                -0.008761   \n",
       "\n",
       "                         Previous Heart Problems  ...  Stress Level  \\\n",
       "Age                                     0.000868  ...      0.018307   \n",
       "Cholesterol                            -0.006070  ...     -0.024487   \n",
       "Heart Rate                             -0.004956  ...     -0.004547   \n",
       "Diabetes                                0.000867  ...      0.006719   \n",
       "Family History                         -0.004568  ...      0.015637   \n",
       "Smoking                                -0.000574  ...     -0.001757   \n",
       "Obesity                                 0.005159  ...      0.010626   \n",
       "Alcohol Consumption                     0.010395  ...     -0.005023   \n",
       "Exercise Hours Per Week                 0.005252  ...     -0.009097   \n",
       "Previous Heart Problems                 1.000000  ...     -0.017629   \n",
       "Medication Use                          0.005336  ...      0.000863   \n",
       "Stress Level                           -0.017629  ...      1.000000   \n",
       "Sedentary Hours                        -0.002695  ...     -0.005401   \n",
       "Income                                 -0.003281  ...     -0.002760   \n",
       "BMI                                     0.015710  ...     -0.003244   \n",
       "Triglycerides                          -0.019029  ...     -0.003921   \n",
       "Physical Activity                       0.008537  ...      0.007405   \n",
       "Sleep Hours                             0.004460  ...     -0.014205   \n",
       "Heart Attack Risk                       0.000274  ...     -0.004111   \n",
       "new_column                                   NaN  ...           NaN   \n",
       "Active Hours                            0.002682  ...      0.005397   \n",
       "\n",
       "                         Sedentary Hours    Income       BMI  Triglycerides  \\\n",
       "Age                             0.017279 -0.001733 -0.002613       0.003415   \n",
       "Cholesterol                     0.018914  0.000007  0.017276      -0.005454   \n",
       "Heart Rate                     -0.010230  0.004873  0.005301       0.012244   \n",
       "Diabetes                        0.004698 -0.000759 -0.002855       0.010431   \n",
       "Family History                  0.002573 -0.000401 -0.011487      -0.001904   \n",
       "Smoking                         0.015305  0.003096  0.007679       0.004650   \n",
       "Obesity                        -0.001332 -0.003870 -0.006041       0.001467   \n",
       "Alcohol Consumption            -0.012828 -0.022396  0.010566       0.006169   \n",
       "Exercise Hours Per Week         0.008756 -0.023413  0.003792       0.001714   \n",
       "Previous Heart Problems        -0.002695 -0.003281  0.015710      -0.019029   \n",
       "Medication Use                  0.022510 -0.003464  0.009510      -0.011095   \n",
       "Stress Level                   -0.005401 -0.002760 -0.003244      -0.003921   \n",
       "Sedentary Hours                 1.000000  0.003505 -0.000023      -0.005790   \n",
       "Income                          0.003505  1.000000  0.008838       0.010739   \n",
       "BMI                            -0.000023  0.008838  1.000000      -0.005971   \n",
       "Triglycerides                  -0.005790  0.010739 -0.005971       1.000000   \n",
       "Physical Activity              -0.006174  0.000130  0.008117      -0.007556   \n",
       "Sleep Hours                     0.004791 -0.006598 -0.010024      -0.029216   \n",
       "Heart Attack Risk              -0.005618  0.009628  0.000025       0.010471   \n",
       "new_column                           NaN       NaN       NaN            NaN   \n",
       "Active Hours                   -0.999999 -0.003509  0.000014       0.005772   \n",
       "\n",
       "                         Physical Activity  Sleep Hours  Heart Attack Risk  \\\n",
       "Age                               0.001384    -0.002185           0.006403   \n",
       "Cholesterol                       0.016056     0.004456           0.019340   \n",
       "Heart Rate                        0.000834     0.001811          -0.004251   \n",
       "Diabetes                         -0.002411    -0.012457           0.017225   \n",
       "Family History                    0.009561    -0.011199          -0.001652   \n",
       "Smoking                          -0.006465    -0.005424          -0.004051   \n",
       "Obesity                           0.005337    -0.005314          -0.013318   \n",
       "Alcohol Consumption               0.001593    -0.000843          -0.013778   \n",
       "Exercise Hours Per Week           0.007725    -0.001243           0.011133   \n",
       "Previous Heart Problems           0.008537     0.004460           0.000274   \n",
       "Medication Use                   -0.011139    -0.020393           0.002234   \n",
       "Stress Level                      0.007405    -0.014205          -0.004111   \n",
       "Sedentary Hours                  -0.006174     0.004791          -0.005618   \n",
       "Income                            0.000130    -0.006598           0.009628   \n",
       "BMI                               0.008117    -0.010024           0.000025   \n",
       "Triglycerides                    -0.007556    -0.029216           0.010471   \n",
       "Physical Activity                 1.000000     0.014033          -0.005014   \n",
       "Sleep Hours                       0.014033     1.000000          -0.018528   \n",
       "Heart Attack Risk                -0.005014    -0.018528           1.000000   \n",
       "new_column                             NaN          NaN                NaN   \n",
       "Active Hours                      0.006180    -0.004775           0.005617   \n",
       "\n",
       "                         new_column  Active Hours  \n",
       "Age                             NaN     -0.017285  \n",
       "Cholesterol                     NaN     -0.018920  \n",
       "Heart Rate                      NaN      0.010235  \n",
       "Diabetes                        NaN     -0.004672  \n",
       "Family History                  NaN     -0.002576  \n",
       "Smoking                         NaN     -0.015303  \n",
       "Obesity                         NaN      0.001364  \n",
       "Alcohol Consumption             NaN      0.012814  \n",
       "Exercise Hours Per Week         NaN     -0.008761  \n",
       "Previous Heart Problems         NaN      0.002682  \n",
       "Medication Use                  NaN     -0.022515  \n",
       "Stress Level                    NaN      0.005397  \n",
       "Sedentary Hours                 NaN     -0.999999  \n",
       "Income                          NaN     -0.003509  \n",
       "BMI                             NaN      0.000014  \n",
       "Triglycerides                   NaN      0.005772  \n",
       "Physical Activity               NaN      0.006180  \n",
       "Sleep Hours                     NaN     -0.004775  \n",
       "Heart Attack Risk               NaN      0.005617  \n",
       "new_column                      NaN           NaN  \n",
       "Active Hours                    NaN      1.000000  \n",
       "\n",
       "[21 rows x 21 columns]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Make a correlation graph to check the correlation of \"Heart Attack Risk\" with other columns.\n",
    "\n",
    "numeric_columns = df.select_dtypes(include = \"number\") # select only numeric columns\n",
    "\n",
    "correlation_score = numeric_columns.corr() # find the correlation score of columns\n",
    "\n",
    "correlation_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "34f967e2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:37.579489Z",
     "iopub.status.busy": "2024-05-11T11:16:37.578996Z",
     "iopub.status.idle": "2024-05-11T11:16:37.586954Z",
     "shell.execute_reply": "2024-05-11T11:16:37.585641Z"
    },
    "papermill": {
     "duration": 0.077739,
     "end_time": "2024-05-11T11:16:37.589662",
     "exception": false,
     "start_time": "2024-05-11T11:16:37.511923",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "columns = df.select_dtypes(include = [\"int\", \"float\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "d9ed55a6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:37.721967Z",
     "iopub.status.busy": "2024-05-11T11:16:37.721537Z",
     "iopub.status.idle": "2024-05-11T11:16:39.249213Z",
     "shell.execute_reply": "2024-05-11T11:16:39.247777Z"
    },
    "papermill": {
     "duration": 1.598198,
     "end_time": "2024-05-11T11:16:39.254102",
     "exception": false,
     "start_time": "2024-05-11T11:16:37.655904",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1900x1000 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (19,10))\n",
    "sns.heatmap(columns.corr(),annot = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50be3de3",
   "metadata": {
    "papermill": {
     "duration": 0.067151,
     "end_time": "2024-05-11T11:16:39.388365",
     "exception": false,
     "start_time": "2024-05-11T11:16:39.321214",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Most Machine learning models work only with **numeric data type** therefore we need to **identify categorical columns** in our data and **transform** them into numeric data type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "952ea3d9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:39.523238Z",
     "iopub.status.busy": "2024-05-11T11:16:39.522347Z",
     "iopub.status.idle": "2024-05-11T11:16:39.530573Z",
     "shell.execute_reply": "2024-05-11T11:16:39.529634Z"
    },
    "papermill": {
     "duration": 0.078394,
     "end_time": "2024-05-11T11:16:39.532972",
     "exception": false,
     "start_time": "2024-05-11T11:16:39.454578",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Sex', 'BP', 'Diet', 'Country', 'Continent', 'Hemisphere'], dtype='object')"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Identify / Find out which columns have dtype category.\n",
    "\n",
    "categorical_columns = df.select_dtypes(\"category\").columns\n",
    "categorical_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "b10b2036",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:39.667194Z",
     "iopub.status.busy": "2024-05-11T11:16:39.666725Z",
     "iopub.status.idle": "2024-05-11T11:16:39.678137Z",
     "shell.execute_reply": "2024-05-11T11:16:39.676562Z"
    },
    "papermill": {
     "duration": 0.081512,
     "end_time": "2024-05-11T11:16:39.681417",
     "exception": false,
     "start_time": "2024-05-11T11:16:39.599905",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                           int32\n",
       "Sex                        category\n",
       "Cholesterol                   int32\n",
       "BP                         category\n",
       "Heart Rate                    int32\n",
       "Diabetes                      int32\n",
       "Family History                int32\n",
       "Smoking                       int32\n",
       "Obesity                       int32\n",
       "Alcohol Consumption           int32\n",
       "Exercise Hours Per Week     float16\n",
       "Diet                       category\n",
       "Previous Heart Problems       int32\n",
       "Medication Use                int32\n",
       "Stress Level                  int32\n",
       "Sedentary Hours             float16\n",
       "Income                        int32\n",
       "BMI                         float16\n",
       "Triglycerides                 int32\n",
       "Physical Activity             int32\n",
       "Sleep Hours                   int32\n",
       "Country                    category\n",
       "Continent                  category\n",
       "Hemisphere                 category\n",
       "Heart Attack Risk             int32\n",
       "new_column                    int64\n",
       "Active Hours                float16\n",
       "dtype: object"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "e8153479",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:39.820489Z",
     "iopub.status.busy": "2024-05-11T11:16:39.819750Z",
     "iopub.status.idle": "2024-05-11T11:16:39.850069Z",
     "shell.execute_reply": "2024-05-11T11:16:39.848933Z"
    },
    "papermill": {
     "duration": 0.100822,
     "end_time": "2024-05-11T11:16:39.852615",
     "exception": false,
     "start_time": "2024-05-11T11:16:39.751793",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>158</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>165</td>\n",
       "      <td>93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>174</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>163</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>91</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8758</th>\n",
       "      <td>94</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8759</th>\n",
       "      <td>157</td>\n",
       "      <td>102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8760</th>\n",
       "      <td>161</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8761</th>\n",
       "      <td>119</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8762</th>\n",
       "      <td>138</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8763 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        0    1\n",
       "0     158   88\n",
       "1     165   93\n",
       "2     174   99\n",
       "3     163  100\n",
       "4      91   88\n",
       "...   ...  ...\n",
       "8758   94   76\n",
       "8759  157  102\n",
       "8760  161   75\n",
       "8761  119   67\n",
       "8762  138   67\n",
       "\n",
       "[8763 rows x 2 columns]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Convert Blood Pressure column into 2 new columns systolic and dysystolic with dtype of int\n",
    "\n",
    "bp_splitted = df[\"BP\"].str.split(\"/\", expand = True)\n",
    "\n",
    "bp_splitted"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "5819b480",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:39.987676Z",
     "iopub.status.busy": "2024-05-11T11:16:39.986896Z",
     "iopub.status.idle": "2024-05-11T11:16:40.028534Z",
     "shell.execute_reply": "2024-05-11T11:16:40.026972Z"
    },
    "papermill": {
     "duration": 0.112749,
     "end_time": "2024-05-11T11:16:40.031255",
     "exception": false,
     "start_time": "2024-05-11T11:16:39.918506",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "int32\n",
      "int32\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>Exercise Hours Per Week</th>\n",
       "      <th>...</th>\n",
       "      <th>Physical Activity</th>\n",
       "      <th>Sleep Hours</th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Hemisphere</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "      <th>new_column</th>\n",
       "      <th>Active Hours</th>\n",
       "      <th>systolic</th>\n",
       "      <th>dysystolic</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>67</td>\n",
       "      <td>Male</td>\n",
       "      <td>208</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.167969</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>17.390625</td>\n",
       "      <td>158</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>Male</td>\n",
       "      <td>389</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.813477</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>19.031250</td>\n",
       "      <td>165</td>\n",
       "      <td>93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>Female</td>\n",
       "      <td>324</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.078125</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>France</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>14.539062</td>\n",
       "      <td>174</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>Male</td>\n",
       "      <td>383</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.828125</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>16.343750</td>\n",
       "      <td>163</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>66</td>\n",
       "      <td>Male</td>\n",
       "      <td>318</td>\n",
       "      <td>93</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5.804688</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>Thailand</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.484375</td>\n",
       "      <td>91</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age     Sex  Cholesterol  Heart Rate  Diabetes  Family History  Smoking  \\\n",
       "0   67    Male          208          72         0               0        1   \n",
       "1   21    Male          389          98         1               1        1   \n",
       "2   21  Female          324          72         1               0        0   \n",
       "3   84    Male          383          73         1               1        1   \n",
       "4   66    Male          318          93         1               1        1   \n",
       "\n",
       "   Obesity  Alcohol Consumption  Exercise Hours Per Week  ...  \\\n",
       "0        0                    0                 4.167969  ...   \n",
       "1        1                    1                 1.813477  ...   \n",
       "2        0                    0                 2.078125  ...   \n",
       "3        0                    1                 9.828125  ...   \n",
       "4        1                    0                 5.804688  ...   \n",
       "\n",
       "  Physical Activity  Sleep Hours    Country      Continent  \\\n",
       "0                 0            6  Argentina  South America   \n",
       "1                 1            7     Canada  North America   \n",
       "2                 4            4     France         Europe   \n",
       "3                 3            4     Canada  North America   \n",
       "4                 1            5   Thailand           Asia   \n",
       "\n",
       "            Hemisphere  Heart Attack Risk  new_column  Active Hours  systolic  \\\n",
       "0  Southern Hemisphere                  0           1     17.390625       158   \n",
       "1  Northern Hemisphere                  0           1     19.031250       165   \n",
       "2  Northern Hemisphere                  0           1     14.539062       174   \n",
       "3  Northern Hemisphere                  0           1     16.343750       163   \n",
       "4  Northern Hemisphere                  0           1     22.484375        91   \n",
       "\n",
       "   dysystolic  \n",
       "0          88  \n",
       "1          93  \n",
       "2          99  \n",
       "3         100  \n",
       "4          88  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"systolic\"] = bp_splitted[0] # get the first column values and create systolic column\n",
    "df[\"dysystolic\"] = bp_splitted[1] # get the second column values and create dysystolic column\n",
    "\n",
    "# convert dtype into int\n",
    "df[\"systolic\"] = df[\"systolic\"].astype(\"int32\")\n",
    "df[\"dysystolic\"]  = df[\"dysystolic\"].astype(\"int32\")\n",
    "\n",
    "# check to see of new columns have been converted into int dtype\n",
    "print(df[\"systolic\"].dtype)\n",
    "print(df[\"dysystolic\"].dtype)\n",
    "\n",
    "\n",
    "# drop/delete Blood Pressure column\n",
    "del df[\"BP\"]\n",
    "\n",
    "# print the df\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "25ddcc25",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:40.168234Z",
     "iopub.status.busy": "2024-05-11T11:16:40.167826Z",
     "iopub.status.idle": "2024-05-11T11:16:40.196653Z",
     "shell.execute_reply": "2024-05-11T11:16:40.195324Z"
    },
    "papermill": {
     "duration": 0.100767,
     "end_time": "2024-05-11T11:16:40.199489",
     "exception": false,
     "start_time": "2024-05-11T11:16:40.098722",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>Exercise Hours Per Week</th>\n",
       "      <th>...</th>\n",
       "      <th>Physical Activity</th>\n",
       "      <th>Sleep Hours</th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Hemisphere</th>\n",
       "      <th>Heart Attack Risk</th>\n",
       "      <th>new_column</th>\n",
       "      <th>Active Hours</th>\n",
       "      <th>systolic</th>\n",
       "      <th>dysystolic</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>67</td>\n",
       "      <td>Male</td>\n",
       "      <td>208</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.167969</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>Argentina</td>\n",
       "      <td>South America</td>\n",
       "      <td>Southern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>17.390625</td>\n",
       "      <td>158</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>Male</td>\n",
       "      <td>389</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.813477</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>19.031250</td>\n",
       "      <td>165</td>\n",
       "      <td>93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>Female</td>\n",
       "      <td>324</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.078125</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>France</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>14.539062</td>\n",
       "      <td>174</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>Male</td>\n",
       "      <td>383</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.828125</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>Canada</td>\n",
       "      <td>North America</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>16.343750</td>\n",
       "      <td>163</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>66</td>\n",
       "      <td>Male</td>\n",
       "      <td>318</td>\n",
       "      <td>93</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5.804688</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>Thailand</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Northern Hemisphere</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>22.484375</td>\n",
       "      <td>91</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age     Sex  Cholesterol  Heart Rate  Diabetes  Family History  Smoking  \\\n",
       "0   67    Male          208          72         0               0        1   \n",
       "1   21    Male          389          98         1               1        1   \n",
       "2   21  Female          324          72         1               0        0   \n",
       "3   84    Male          383          73         1               1        1   \n",
       "4   66    Male          318          93         1               1        1   \n",
       "\n",
       "   Obesity  Alcohol Consumption  Exercise Hours Per Week  ...  \\\n",
       "0        0                    0                 4.167969  ...   \n",
       "1        1                    1                 1.813477  ...   \n",
       "2        0                    0                 2.078125  ...   \n",
       "3        0                    1                 9.828125  ...   \n",
       "4        1                    0                 5.804688  ...   \n",
       "\n",
       "  Physical Activity  Sleep Hours    Country      Continent  \\\n",
       "0                 0            6  Argentina  South America   \n",
       "1                 1            7     Canada  North America   \n",
       "2                 4            4     France         Europe   \n",
       "3                 3            4     Canada  North America   \n",
       "4                 1            5   Thailand           Asia   \n",
       "\n",
       "            Hemisphere  Heart Attack Risk  new_column  Active Hours  systolic  \\\n",
       "0  Southern Hemisphere                  0           1     17.390625       158   \n",
       "1  Northern Hemisphere                  0           1     19.031250       165   \n",
       "2  Northern Hemisphere                  0           1     14.539062       174   \n",
       "3  Northern Hemisphere                  0           1     16.343750       163   \n",
       "4  Northern Hemisphere                  0           1     22.484375        91   \n",
       "\n",
       "   dysystolic  \n",
       "0          88  \n",
       "1          93  \n",
       "2          99  \n",
       "3         100  \n",
       "4          88  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b25a3eb",
   "metadata": {
    "papermill": {
     "duration": 0.131126,
     "end_time": "2024-05-11T11:16:40.416626",
     "exception": false,
     "start_time": "2024-05-11T11:16:40.285500",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Ordinal encoding on 'Diet' column (using map function)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "e67924da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:40.551653Z",
     "iopub.status.busy": "2024-05-11T11:16:40.551219Z",
     "iopub.status.idle": "2024-05-11T11:16:40.562361Z",
     "shell.execute_reply": "2024-05-11T11:16:40.561173Z"
    },
    "papermill": {
     "duration": 0.082178,
     "end_time": "2024-05-11T11:16:40.564832",
     "exception": false,
     "start_time": "2024-05-11T11:16:40.482654",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Diet\n",
       "Healthy      2960\n",
       "Average      2912\n",
       "Unhealthy    2891\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Diet'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "59967cbd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:40.704664Z",
     "iopub.status.busy": "2024-05-11T11:16:40.704159Z",
     "iopub.status.idle": "2024-05-11T11:16:40.712803Z",
     "shell.execute_reply": "2024-05-11T11:16:40.711161Z"
    },
    "papermill": {
     "duration": 0.082703,
     "end_time": "2024-05-11T11:16:40.715659",
     "exception": false,
     "start_time": "2024-05-11T11:16:40.632956",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "ordinal_map = {'Healthy': 2, 'Average': 1, 'Unhealthy':0}\n",
    "df['Diet'] = df['Diet'].map(ordinal_map)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "75e6f14e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:40.852758Z",
     "iopub.status.busy": "2024-05-11T11:16:40.852236Z",
     "iopub.status.idle": "2024-05-11T11:16:40.865078Z",
     "shell.execute_reply": "2024-05-11T11:16:40.863802Z"
    },
    "papermill": {
     "duration": 0.084331,
     "end_time": "2024-05-11T11:16:40.867704",
     "exception": false,
     "start_time": "2024-05-11T11:16:40.783373",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Diet\n",
       "2    2960\n",
       "1    2912\n",
       "0    2891\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Diet'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "4f0b9079",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:41.006838Z",
     "iopub.status.busy": "2024-05-11T11:16:41.006427Z",
     "iopub.status.idle": "2024-05-11T11:16:41.014118Z",
     "shell.execute_reply": "2024-05-11T11:16:41.012642Z"
    },
    "papermill": {
     "duration": 0.082015,
     "end_time": "2024-05-11T11:16:41.016842",
     "exception": false,
     "start_time": "2024-05-11T11:16:40.934827",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Diet']= df['Diet'].astype(\"int32\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f5d9457",
   "metadata": {
    "papermill": {
     "duration": 0.070221,
     "end_time": "2024-05-11T11:16:41.154838",
     "exception": false,
     "start_time": "2024-05-11T11:16:41.084617",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### One hot encoding on('Sex','Country','Continent','Hemisphere')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "22401d25",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:41.298229Z",
     "iopub.status.busy": "2024-05-11T11:16:41.297766Z",
     "iopub.status.idle": "2024-05-11T11:16:41.335280Z",
     "shell.execute_reply": "2024-05-11T11:16:41.333858Z"
    },
    "papermill": {
     "duration": 0.114693,
     "end_time": "2024-05-11T11:16:41.338441",
     "exception": false,
     "start_time": "2024-05-11T11:16:41.223748",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>Exercise Hours Per Week</th>\n",
       "      <th>Diet</th>\n",
       "      <th>...</th>\n",
       "      <th>Country_Thailand</th>\n",
       "      <th>Country_United Kingdom</th>\n",
       "      <th>Country_United States</th>\n",
       "      <th>Country_Vietnam</th>\n",
       "      <th>Continent_Asia</th>\n",
       "      <th>Continent_Australia</th>\n",
       "      <th>Continent_Europe</th>\n",
       "      <th>Continent_North America</th>\n",
       "      <th>Continent_South America</th>\n",
       "      <th>Hemisphere_Southern Hemisphere</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>67</td>\n",
       "      <td>208</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.167969</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>389</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.813477</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>324</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.078125</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>383</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.828125</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>66</td>\n",
       "      <td>318</td>\n",
       "      <td>93</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5.804688</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 50 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age  Cholesterol  Heart Rate  Diabetes  Family History  Smoking  Obesity  \\\n",
       "0   67          208          72         0               0        1        0   \n",
       "1   21          389          98         1               1        1        1   \n",
       "2   21          324          72         1               0        0        0   \n",
       "3   84          383          73         1               1        1        0   \n",
       "4   66          318          93         1               1        1        1   \n",
       "\n",
       "   Alcohol Consumption  Exercise Hours Per Week  Diet  ...  Country_Thailand  \\\n",
       "0                    0                 4.167969     1  ...             False   \n",
       "1                    1                 1.813477     0  ...             False   \n",
       "2                    0                 2.078125     2  ...             False   \n",
       "3                    1                 9.828125     1  ...             False   \n",
       "4                    0                 5.804688     0  ...              True   \n",
       "\n",
       "   Country_United Kingdom  Country_United States  Country_Vietnam  \\\n",
       "0                   False                  False            False   \n",
       "1                   False                  False            False   \n",
       "2                   False                  False            False   \n",
       "3                   False                  False            False   \n",
       "4                   False                  False            False   \n",
       "\n",
       "   Continent_Asia  Continent_Australia  Continent_Europe  \\\n",
       "0           False                False             False   \n",
       "1           False                False             False   \n",
       "2           False                False              True   \n",
       "3           False                False             False   \n",
       "4            True                False             False   \n",
       "\n",
       "   Continent_North America  Continent_South America  \\\n",
       "0                    False                     True   \n",
       "1                     True                    False   \n",
       "2                    False                    False   \n",
       "3                     True                    False   \n",
       "4                    False                    False   \n",
       "\n",
       "   Hemisphere_Southern Hemisphere  \n",
       "0                            True  \n",
       "1                           False  \n",
       "2                           False  \n",
       "3                           False  \n",
       "4                           False  \n",
       "\n",
       "[5 rows x 50 columns]"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Convert columns ['Sex', 'Country', 'Continent', 'Hemisphere' ] into numbers using get_dummies function\n",
    "\n",
    "df = pd.get_dummies(df, columns = ['Sex', 'Country', 'Continent', 'Hemisphere' ],\n",
    "drop_first=True)\n",
    "\n",
    "# print the data frame\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "b6a34505",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:41.481580Z",
     "iopub.status.busy": "2024-05-11T11:16:41.481063Z",
     "iopub.status.idle": "2024-05-11T11:16:41.491985Z",
     "shell.execute_reply": "2024-05-11T11:16:41.490733Z"
    },
    "papermill": {
     "duration": 0.086337,
     "end_time": "2024-05-11T11:16:41.494902",
     "exception": false,
     "start_time": "2024-05-11T11:16:41.408565",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                                 int32\n",
       "Cholesterol                         int32\n",
       "Heart Rate                          int32\n",
       "Diabetes                            int32\n",
       "Family History                      int32\n",
       "Smoking                             int32\n",
       "Obesity                             int32\n",
       "Alcohol Consumption                 int32\n",
       "Exercise Hours Per Week           float16\n",
       "Diet                                int32\n",
       "Previous Heart Problems             int32\n",
       "Medication Use                      int32\n",
       "Stress Level                        int32\n",
       "Sedentary Hours                   float16\n",
       "Income                              int32\n",
       "BMI                               float16\n",
       "Triglycerides                       int32\n",
       "Physical Activity                   int32\n",
       "Sleep Hours                         int32\n",
       "Heart Attack Risk                   int32\n",
       "new_column                          int64\n",
       "Active Hours                      float16\n",
       "systolic                            int32\n",
       "dysystolic                          int32\n",
       "Sex_Male                             bool\n",
       "Country_Australia                    bool\n",
       "Country_Brazil                       bool\n",
       "Country_Canada                       bool\n",
       "Country_China                        bool\n",
       "Country_Colombia                     bool\n",
       "Country_France                       bool\n",
       "Country_Germany                      bool\n",
       "Country_India                        bool\n",
       "Country_Italy                        bool\n",
       "Country_Japan                        bool\n",
       "Country_New Zealand                  bool\n",
       "Country_Nigeria                      bool\n",
       "Country_South Africa                 bool\n",
       "Country_South Korea                  bool\n",
       "Country_Spain                        bool\n",
       "Country_Thailand                     bool\n",
       "Country_United Kingdom               bool\n",
       "Country_United States                bool\n",
       "Country_Vietnam                      bool\n",
       "Continent_Asia                       bool\n",
       "Continent_Australia                  bool\n",
       "Continent_Europe                     bool\n",
       "Continent_North America              bool\n",
       "Continent_South America              bool\n",
       "Hemisphere_Southern Hemisphere       bool\n",
       "dtype: object"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "e86a55dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:41.641225Z",
     "iopub.status.busy": "2024-05-11T11:16:41.640745Z",
     "iopub.status.idle": "2024-05-11T11:16:41.649415Z",
     "shell.execute_reply": "2024-05-11T11:16:41.648162Z"
    },
    "papermill": {
     "duration": 0.084368,
     "end_time": "2024-05-11T11:16:41.652329",
     "exception": false,
     "start_time": "2024-05-11T11:16:41.567961",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Age', 'Cholesterol', 'Heart Rate', 'Diabetes', 'Family History',\n",
       "       'Smoking', 'Obesity', 'Alcohol Consumption', 'Exercise Hours Per Week',\n",
       "       'Diet', 'Previous Heart Problems', 'Medication Use', 'Stress Level',\n",
       "       'Sedentary Hours', 'Income', 'BMI', 'Triglycerides',\n",
       "       'Physical Activity', 'Sleep Hours', 'Heart Attack Risk', 'new_column',\n",
       "       'Active Hours', 'systolic', 'dysystolic', 'Sex_Male',\n",
       "       'Country_Australia', 'Country_Brazil', 'Country_Canada',\n",
       "       'Country_China', 'Country_Colombia', 'Country_France',\n",
       "       'Country_Germany', 'Country_India', 'Country_Italy', 'Country_Japan',\n",
       "       'Country_New Zealand', 'Country_Nigeria', 'Country_South Africa',\n",
       "       'Country_South Korea', 'Country_Spain', 'Country_Thailand',\n",
       "       'Country_United Kingdom', 'Country_United States', 'Country_Vietnam',\n",
       "       'Continent_Asia', 'Continent_Australia', 'Continent_Europe',\n",
       "       'Continent_North America', 'Continent_South America',\n",
       "       'Hemisphere_Southern Hemisphere'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "08599c70",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:41.794999Z",
     "iopub.status.busy": "2024-05-11T11:16:41.794563Z",
     "iopub.status.idle": "2024-05-11T11:16:41.806059Z",
     "shell.execute_reply": "2024-05-11T11:16:41.804342Z"
    },
    "papermill": {
     "duration": 0.08596,
     "end_time": "2024-05-11T11:16:41.808926",
     "exception": false,
     "start_time": "2024-05-11T11:16:41.722966",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Sex_Male', 'Country_Australia', 'Country_Brazil', 'Country_Canada',\n",
       "       'Country_China', 'Country_Colombia', 'Country_France',\n",
       "       'Country_Germany', 'Country_India', 'Country_Italy', 'Country_Japan',\n",
       "       'Country_New Zealand', 'Country_Nigeria', 'Country_South Africa',\n",
       "       'Country_South Korea', 'Country_Spain', 'Country_Thailand',\n",
       "       'Country_United Kingdom', 'Country_United States', 'Country_Vietnam',\n",
       "       'Continent_Asia', 'Continent_Australia', 'Continent_Europe',\n",
       "       'Continent_North America', 'Continent_South America',\n",
       "       'Hemisphere_Southern Hemisphere'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Convert the boolean columns into numbers\n",
    "\n",
    "# first select all columns with dtype bool\n",
    "\n",
    "bool_columns = df.select_dtypes(include = \"bool\").columns\n",
    "\n",
    "bool_columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b88ede67",
   "metadata": {
    "papermill": {
     "duration": 0.068411,
     "end_time": "2024-05-11T11:16:41.947061",
     "exception": false,
     "start_time": "2024-05-11T11:16:41.878650",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### convert **bool** to **integer**\n",
    "### .astype()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "d8b0c8c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:42.092242Z",
     "iopub.status.busy": "2024-05-11T11:16:42.091814Z",
     "iopub.status.idle": "2024-05-11T11:16:42.111463Z",
     "shell.execute_reply": "2024-05-11T11:16:42.109772Z"
    },
    "papermill": {
     "duration": 0.094204,
     "end_time": "2024-05-11T11:16:42.114857",
     "exception": false,
     "start_time": "2024-05-11T11:16:42.020653",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "for bool_col in bool_columns:\n",
    "    df[bool_col] = df[bool_col].astype(\"int32\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "3023fb2f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:42.257800Z",
     "iopub.status.busy": "2024-05-11T11:16:42.257412Z",
     "iopub.status.idle": "2024-05-11T11:16:42.269728Z",
     "shell.execute_reply": "2024-05-11T11:16:42.268601Z"
    },
    "papermill": {
     "duration": 0.086887,
     "end_time": "2024-05-11T11:16:42.272319",
     "exception": false,
     "start_time": "2024-05-11T11:16:42.185432",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                                 int32\n",
       "Cholesterol                         int32\n",
       "Heart Rate                          int32\n",
       "Diabetes                            int32\n",
       "Family History                      int32\n",
       "Smoking                             int32\n",
       "Obesity                             int32\n",
       "Alcohol Consumption                 int32\n",
       "Exercise Hours Per Week           float16\n",
       "Diet                                int32\n",
       "Previous Heart Problems             int32\n",
       "Medication Use                      int32\n",
       "Stress Level                        int32\n",
       "Sedentary Hours                   float16\n",
       "Income                              int32\n",
       "BMI                               float16\n",
       "Triglycerides                       int32\n",
       "Physical Activity                   int32\n",
       "Sleep Hours                         int32\n",
       "Heart Attack Risk                   int32\n",
       "new_column                          int64\n",
       "Active Hours                      float16\n",
       "systolic                            int32\n",
       "dysystolic                          int32\n",
       "Sex_Male                            int32\n",
       "Country_Australia                   int32\n",
       "Country_Brazil                      int32\n",
       "Country_Canada                      int32\n",
       "Country_China                       int32\n",
       "Country_Colombia                    int32\n",
       "Country_France                      int32\n",
       "Country_Germany                     int32\n",
       "Country_India                       int32\n",
       "Country_Italy                       int32\n",
       "Country_Japan                       int32\n",
       "Country_New Zealand                 int32\n",
       "Country_Nigeria                     int32\n",
       "Country_South Africa                int32\n",
       "Country_South Korea                 int32\n",
       "Country_Spain                       int32\n",
       "Country_Thailand                    int32\n",
       "Country_United Kingdom              int32\n",
       "Country_United States               int32\n",
       "Country_Vietnam                     int32\n",
       "Continent_Asia                      int32\n",
       "Continent_Australia                 int32\n",
       "Continent_Europe                    int32\n",
       "Continent_North America             int32\n",
       "Continent_South America             int32\n",
       "Hemisphere_Southern Hemisphere      int32\n",
       "dtype: object"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "96824ed1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:42.419168Z",
     "iopub.status.busy": "2024-05-11T11:16:42.418765Z",
     "iopub.status.idle": "2024-05-11T11:16:42.426487Z",
     "shell.execute_reply": "2024-05-11T11:16:42.424725Z"
    },
    "papermill": {
     "duration": 0.083407,
     "end_time": "2024-05-11T11:16:42.429158",
     "exception": false,
     "start_time": "2024-05-11T11:16:42.345751",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "columns = ['Diet','systolic', 'dysystolic', 'Sex_Female', 'Sex_Male', 'Country_Argentina',\n",
    "       'Country_Australia', 'Country_Brazil', 'Country_Canada',\n",
    "       'Country_China', 'Country_Colombia', 'Country_France',\n",
    "       'Country_Germany', 'Country_India', 'Country_Italy', 'Country_Japan',\n",
    "       'Country_New Zealand', 'Country_Nigeria', 'Country_South Africa',\n",
    "       'Country_South Korea', 'Country_Spain', 'Country_Thailand',\n",
    "       'Country_United Kingdom', 'Country_United States', 'Country_Vietnam',\n",
    "       'Continent_Africa', 'Continent_Asia', 'Continent_Australia',\n",
    "       'Continent_Europe', 'Continent_North America',\n",
    "       'Continent_South America', 'Hemisphere_Northern Hemisphere',\n",
    "       'Hemisphere_Southern Hemisphere']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a602ed2",
   "metadata": {
    "papermill": {
     "duration": 0.06885,
     "end_time": "2024-05-11T11:16:42.569908",
     "exception": false,
     "start_time": "2024-05-11T11:16:42.501058",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Convert from 'bool' to 'integer'\n",
    "## .astype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "361b6c2d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:42.715730Z",
     "iopub.status.busy": "2024-05-11T11:16:42.715240Z",
     "iopub.status.idle": "2024-05-11T11:16:42.721059Z",
     "shell.execute_reply": "2024-05-11T11:16:42.719495Z"
    },
    "papermill": {
     "duration": 0.081765,
     "end_time": "2024-05-11T11:16:42.723645",
     "exception": false,
     "start_time": "2024-05-11T11:16:42.641880",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#df[columns] = df[columns].astype('int')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "ed3d02ce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:42.865541Z",
     "iopub.status.busy": "2024-05-11T11:16:42.864912Z",
     "iopub.status.idle": "2024-05-11T11:16:42.871497Z",
     "shell.execute_reply": "2024-05-11T11:16:42.869996Z"
    },
    "papermill": {
     "duration": 0.081546,
     "end_time": "2024-05-11T11:16:42.874188",
     "exception": false,
     "start_time": "2024-05-11T11:16:42.792642",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "5c411cae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:43.015399Z",
     "iopub.status.busy": "2024-05-11T11:16:43.014134Z",
     "iopub.status.idle": "2024-05-11T11:16:43.024502Z",
     "shell.execute_reply": "2024-05-11T11:16:43.023106Z"
    },
    "papermill": {
     "duration": 0.085148,
     "end_time": "2024-05-11T11:16:43.027100",
     "exception": false,
     "start_time": "2024-05-11T11:16:42.941952",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Seaparate the target variable and remaining data\n",
    "x = df.drop('Heart Attack Risk',axis = 1)\n",
    "y = df['Heart Attack Risk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "b21bee09",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:43.174110Z",
     "iopub.status.busy": "2024-05-11T11:16:43.173599Z",
     "iopub.status.idle": "2024-05-11T11:16:43.203459Z",
     "shell.execute_reply": "2024-05-11T11:16:43.201901Z"
    },
    "papermill": {
     "duration": 0.105829,
     "end_time": "2024-05-11T11:16:43.206353",
     "exception": false,
     "start_time": "2024-05-11T11:16:43.100524",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>Exercise Hours Per Week</th>\n",
       "      <th>Diet</th>\n",
       "      <th>...</th>\n",
       "      <th>Country_Thailand</th>\n",
       "      <th>Country_United Kingdom</th>\n",
       "      <th>Country_United States</th>\n",
       "      <th>Country_Vietnam</th>\n",
       "      <th>Continent_Asia</th>\n",
       "      <th>Continent_Australia</th>\n",
       "      <th>Continent_Europe</th>\n",
       "      <th>Continent_North America</th>\n",
       "      <th>Continent_South America</th>\n",
       "      <th>Hemisphere_Southern Hemisphere</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>67</td>\n",
       "      <td>208</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.167969</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21</td>\n",
       "      <td>389</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.813477</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21</td>\n",
       "      <td>324</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.078125</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>383</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.828125</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>66</td>\n",
       "      <td>318</td>\n",
       "      <td>93</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5.804688</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Age  Cholesterol  Heart Rate  Diabetes  Family History  Smoking  Obesity  \\\n",
       "0   67          208          72         0               0        1        0   \n",
       "1   21          389          98         1               1        1        1   \n",
       "2   21          324          72         1               0        0        0   \n",
       "3   84          383          73         1               1        1        0   \n",
       "4   66          318          93         1               1        1        1   \n",
       "\n",
       "   Alcohol Consumption  Exercise Hours Per Week  Diet  ...  Country_Thailand  \\\n",
       "0                    0                 4.167969     1  ...                 0   \n",
       "1                    1                 1.813477     0  ...                 0   \n",
       "2                    0                 2.078125     2  ...                 0   \n",
       "3                    1                 9.828125     1  ...                 0   \n",
       "4                    0                 5.804688     0  ...                 1   \n",
       "\n",
       "   Country_United Kingdom  Country_United States  Country_Vietnam  \\\n",
       "0                       0                      0                0   \n",
       "1                       0                      0                0   \n",
       "2                       0                      0                0   \n",
       "3                       0                      0                0   \n",
       "4                       0                      0                0   \n",
       "\n",
       "   Continent_Asia  Continent_Australia  Continent_Europe  \\\n",
       "0               0                    0                 0   \n",
       "1               0                    0                 0   \n",
       "2               0                    0                 1   \n",
       "3               0                    0                 0   \n",
       "4               1                    0                 0   \n",
       "\n",
       "   Continent_North America  Continent_South America  \\\n",
       "0                        0                        1   \n",
       "1                        1                        0   \n",
       "2                        0                        0   \n",
       "3                        1                        0   \n",
       "4                        0                        0   \n",
       "\n",
       "   Hemisphere_Southern Hemisphere  \n",
       "0                               1  \n",
       "1                               0  \n",
       "2                               0  \n",
       "3                               0  \n",
       "4                               0  \n",
       "\n",
       "[5 rows x 49 columns]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "fd48361d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:43.349825Z",
     "iopub.status.busy": "2024-05-11T11:16:43.349318Z",
     "iopub.status.idle": "2024-05-11T11:16:43.359351Z",
     "shell.execute_reply": "2024-05-11T11:16:43.358089Z"
    },
    "papermill": {
     "duration": 0.084055,
     "end_time": "2024-05-11T11:16:43.361839",
     "exception": false,
     "start_time": "2024-05-11T11:16:43.277784",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       0\n",
       "1       0\n",
       "2       0\n",
       "3       0\n",
       "4       0\n",
       "       ..\n",
       "8758    0\n",
       "8759    0\n",
       "8760    1\n",
       "8761    0\n",
       "8762    1\n",
       "Name: Heart Attack Risk, Length: 8763, dtype: int32"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "7813bd9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:43.504045Z",
     "iopub.status.busy": "2024-05-11T11:16:43.503627Z",
     "iopub.status.idle": "2024-05-11T11:16:43.833059Z",
     "shell.execute_reply": "2024-05-11T11:16:43.831731Z"
    },
    "papermill": {
     "duration": 0.404177,
     "end_time": "2024-05-11T11:16:43.836181",
     "exception": false,
     "start_time": "2024-05-11T11:16:43.432004",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "train_x,test_x,train_y,test_y = train_test_split(x,y, test_size = 0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "f47b9521",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:43.976841Z",
     "iopub.status.busy": "2024-05-11T11:16:43.976396Z",
     "iopub.status.idle": "2024-05-11T11:16:44.009997Z",
     "shell.execute_reply": "2024-05-11T11:16:44.008644Z"
    },
    "papermill": {
     "duration": 0.107724,
     "end_time": "2024-05-11T11:16:44.012824",
     "exception": false,
     "start_time": "2024-05-11T11:16:43.905100",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>Exercise Hours Per Week</th>\n",
       "      <th>Diet</th>\n",
       "      <th>...</th>\n",
       "      <th>Country_Thailand</th>\n",
       "      <th>Country_United Kingdom</th>\n",
       "      <th>Country_United States</th>\n",
       "      <th>Country_Vietnam</th>\n",
       "      <th>Continent_Asia</th>\n",
       "      <th>Continent_Australia</th>\n",
       "      <th>Continent_Europe</th>\n",
       "      <th>Continent_North America</th>\n",
       "      <th>Continent_South America</th>\n",
       "      <th>Hemisphere_Southern Hemisphere</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5954</th>\n",
       "      <td>52</td>\n",
       "      <td>240</td>\n",
       "      <td>78</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>19.578125</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5324</th>\n",
       "      <td>48</td>\n",
       "      <td>303</td>\n",
       "      <td>79</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>11.179688</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8703</th>\n",
       "      <td>52</td>\n",
       "      <td>129</td>\n",
       "      <td>78</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10.789062</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5662</th>\n",
       "      <td>37</td>\n",
       "      <td>229</td>\n",
       "      <td>86</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>12.523438</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7556</th>\n",
       "      <td>74</td>\n",
       "      <td>218</td>\n",
       "      <td>79</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.050781</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2499</th>\n",
       "      <td>38</td>\n",
       "      <td>186</td>\n",
       "      <td>71</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13.406250</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8439</th>\n",
       "      <td>62</td>\n",
       "      <td>341</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12.140625</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5978</th>\n",
       "      <td>88</td>\n",
       "      <td>241</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>8.242188</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3142</th>\n",
       "      <td>24</td>\n",
       "      <td>278</td>\n",
       "      <td>108</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11.828125</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7875</th>\n",
       "      <td>73</td>\n",
       "      <td>301</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5.863281</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7010 rows × 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Age  Cholesterol  Heart Rate  Diabetes  Family History  Smoking  \\\n",
       "5954   52          240          78         1               0        1   \n",
       "5324   48          303          79         1               0        1   \n",
       "8703   52          129          78         1               0        1   \n",
       "5662   37          229          86         1               1        0   \n",
       "7556   74          218          79         1               1        1   \n",
       "...   ...          ...         ...       ...             ...      ...   \n",
       "2499   38          186          71         1               1        1   \n",
       "8439   62          341          98         1               1        1   \n",
       "5978   88          241          43         1               1        1   \n",
       "3142   24          278         108         0               1        1   \n",
       "7875   73          301          72         1               0        1   \n",
       "\n",
       "      Obesity  Alcohol Consumption  Exercise Hours Per Week  Diet  ...  \\\n",
       "5954        0                    1                19.578125     1  ...   \n",
       "5324        1                    0                11.179688     1  ...   \n",
       "8703        1                    1                10.789062     2  ...   \n",
       "5662        0                    1                12.523438     0  ...   \n",
       "7556        0                    0                 2.050781     2  ...   \n",
       "...       ...                  ...                      ...   ...  ...   \n",
       "2499        0                    0                13.406250     1  ...   \n",
       "8439        0                    0                12.140625     2  ...   \n",
       "5978        0                    1                 8.242188     0  ...   \n",
       "3142        0                    0                11.828125     2  ...   \n",
       "7875        1                    1                 5.863281     0  ...   \n",
       "\n",
       "      Country_Thailand  Country_United Kingdom  Country_United States  \\\n",
       "5954                 0                       0                      0   \n",
       "5324                 0                       0                      0   \n",
       "8703                 0                       0                      0   \n",
       "5662                 0                       0                      0   \n",
       "7556                 0                       0                      0   \n",
       "...                ...                     ...                    ...   \n",
       "2499                 0                       0                      0   \n",
       "8439                 1                       0                      0   \n",
       "5978                 0                       0                      0   \n",
       "3142                 0                       0                      0   \n",
       "7875                 0                       0                      0   \n",
       "\n",
       "      Country_Vietnam  Continent_Asia  Continent_Australia  Continent_Europe  \\\n",
       "5954                0               1                    0                 0   \n",
       "5324                0               0                    0                 0   \n",
       "8703                0               1                    0                 0   \n",
       "5662                1               1                    0                 0   \n",
       "7556                0               0                    0                 1   \n",
       "...               ...             ...                  ...               ...   \n",
       "2499                0               0                    0                 1   \n",
       "8439                0               1                    0                 0   \n",
       "5978                0               0                    0                 0   \n",
       "3142                0               0                    0                 1   \n",
       "7875                0               0                    0                 0   \n",
       "\n",
       "      Continent_North America  Continent_South America  \\\n",
       "5954                        0                        0   \n",
       "5324                        1                        0   \n",
       "8703                        0                        0   \n",
       "5662                        0                        0   \n",
       "7556                        0                        0   \n",
       "...                       ...                      ...   \n",
       "2499                        0                        0   \n",
       "8439                        0                        0   \n",
       "5978                        0                        1   \n",
       "3142                        0                        0   \n",
       "7875                        1                        0   \n",
       "\n",
       "      Hemisphere_Southern Hemisphere  \n",
       "5954                               0  \n",
       "5324                               0  \n",
       "8703                               0  \n",
       "5662                               0  \n",
       "7556                               1  \n",
       "...                              ...  \n",
       "2499                               0  \n",
       "8439                               0  \n",
       "5978                               1  \n",
       "3142                               0  \n",
       "7875                               0  \n",
       "\n",
       "[7010 rows x 49 columns]"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "f9175d13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:44.158386Z",
     "iopub.status.busy": "2024-05-11T11:16:44.157952Z",
     "iopub.status.idle": "2024-05-11T11:16:44.185859Z",
     "shell.execute_reply": "2024-05-11T11:16:44.184405Z"
    },
    "papermill": {
     "duration": 0.102446,
     "end_time": "2024-05-11T11:16:44.188958",
     "exception": false,
     "start_time": "2024-05-11T11:16:44.086512",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Cholesterol</th>\n",
       "      <th>Heart Rate</th>\n",
       "      <th>Diabetes</th>\n",
       "      <th>Family History</th>\n",
       "      <th>Smoking</th>\n",
       "      <th>Obesity</th>\n",
       "      <th>Alcohol Consumption</th>\n",
       "      <th>Exercise Hours Per Week</th>\n",
       "      <th>Diet</th>\n",
       "      <th>...</th>\n",
       "      <th>Country_Thailand</th>\n",
       "      <th>Country_United Kingdom</th>\n",
       "      <th>Country_United States</th>\n",
       "      <th>Country_Vietnam</th>\n",
       "      <th>Continent_Asia</th>\n",
       "      <th>Continent_Australia</th>\n",
       "      <th>Continent_Europe</th>\n",
       "      <th>Continent_North America</th>\n",
       "      <th>Continent_South America</th>\n",
       "      <th>Hemisphere_Southern Hemisphere</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8693</th>\n",
       "      <td>57</td>\n",
       "      <td>344</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>9.671875</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3620</th>\n",
       "      <td>40</td>\n",
       "      <td>374</td>\n",
       "      <td>44</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2.003906</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1092</th>\n",
       "      <td>21</td>\n",
       "      <td>229</td>\n",
       "      <td>49</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.679688</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3669</th>\n",
       "      <td>85</td>\n",
       "      <td>322</td>\n",
       "      <td>93</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.402344</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8222</th>\n",
       "      <td>56</td>\n",
       "      <td>337</td>\n",
       "      <td>105</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.220703</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7694</th>\n",
       "      <td>83</td>\n",
       "      <td>195</td>\n",
       "      <td>63</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3.757812</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7853</th>\n",
       "      <td>44</td>\n",
       "      <td>346</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4.398438</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4177</th>\n",
       "      <td>34</td>\n",
       "      <td>311</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.527344</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1608</th>\n",
       "      <td>22</td>\n",
       "      <td>222</td>\n",
       "      <td>58</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>8.695312</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1656</th>\n",
       "      <td>63</td>\n",
       "      <td>261</td>\n",
       "      <td>87</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14.632812</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1753 rows × 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Age  Cholesterol  Heart Rate  Diabetes  Family History  Smoking  \\\n",
       "8693   57          344          73         1               0        1   \n",
       "3620   40          374          44         1               1        1   \n",
       "1092   21          229          49         0               0        1   \n",
       "3669   85          322          93         0               0        1   \n",
       "8222   56          337         105         1               1        1   \n",
       "...   ...          ...         ...       ...             ...      ...   \n",
       "7694   83          195          63         0               0        1   \n",
       "7853   44          346          43         0               1        1   \n",
       "4177   34          311          73         1               0        0   \n",
       "1608   22          222          58         1               0        1   \n",
       "1656   63          261          87         1               1        1   \n",
       "\n",
       "      Obesity  Alcohol Consumption  Exercise Hours Per Week  Diet  ...  \\\n",
       "8693        1                    0                 9.671875     1  ...   \n",
       "3620        1                    0                 2.003906     2  ...   \n",
       "1092        0                    1                 1.679688     2  ...   \n",
       "3669        1                    1                 2.402344     0  ...   \n",
       "8222        1                    1                 2.220703     1  ...   \n",
       "...       ...                  ...                      ...   ...  ...   \n",
       "7694        1                    0                 3.757812     1  ...   \n",
       "7853        0                    1                 4.398438     0  ...   \n",
       "4177        0                    0                 6.527344     2  ...   \n",
       "1608        1                    1                 8.695312     2  ...   \n",
       "1656        1                    1                14.632812     0  ...   \n",
       "\n",
       "      Country_Thailand  Country_United Kingdom  Country_United States  \\\n",
       "8693                 0                       0                      0   \n",
       "3620                 0                       0                      0   \n",
       "1092                 0                       0                      0   \n",
       "3669                 0                       0                      0   \n",
       "8222                 0                       0                      0   \n",
       "...                ...                     ...                    ...   \n",
       "7694                 0                       0                      0   \n",
       "7853                 0                       0                      0   \n",
       "4177                 0                       0                      0   \n",
       "1608                 0                       0                      0   \n",
       "1656                 0                       0                      0   \n",
       "\n",
       "      Country_Vietnam  Continent_Asia  Continent_Australia  Continent_Europe  \\\n",
       "8693                0               0                    0                 1   \n",
       "3620                0               1                    0                 0   \n",
       "1092                0               0                    0                 0   \n",
       "3669                0               0                    0                 0   \n",
       "8222                0               0                    0                 0   \n",
       "...               ...             ...                  ...               ...   \n",
       "7694                0               0                    1                 0   \n",
       "7853                0               0                    0                 0   \n",
       "4177                0               1                    0                 0   \n",
       "1608                0               0                    0                 1   \n",
       "1656                0               1                    0                 0   \n",
       "\n",
       "      Continent_North America  Continent_South America  \\\n",
       "8693                        0                        0   \n",
       "3620                        0                        0   \n",
       "1092                        1                        0   \n",
       "3669                        0                        1   \n",
       "8222                        0                        1   \n",
       "...                       ...                      ...   \n",
       "7694                        0                        0   \n",
       "7853                        1                        0   \n",
       "4177                        0                        0   \n",
       "1608                        0                        0   \n",
       "1656                        0                        0   \n",
       "\n",
       "      Hemisphere_Southern Hemisphere  \n",
       "8693                               1  \n",
       "3620                               0  \n",
       "1092                               0  \n",
       "3669                               1  \n",
       "8222                               1  \n",
       "...                              ...  \n",
       "7694                               1  \n",
       "7853                               0  \n",
       "4177                               0  \n",
       "1608                               1  \n",
       "1656                               0  \n",
       "\n",
       "[1753 rows x 49 columns]"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "ffd8f728",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:44.335089Z",
     "iopub.status.busy": "2024-05-11T11:16:44.333564Z",
     "iopub.status.idle": "2024-05-11T11:16:44.342846Z",
     "shell.execute_reply": "2024-05-11T11:16:44.341518Z"
    },
    "papermill": {
     "duration": 0.085575,
     "end_time": "2024-05-11T11:16:44.346107",
     "exception": false,
     "start_time": "2024-05-11T11:16:44.260532",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5954    1\n",
       "5324    1\n",
       "8703    1\n",
       "5662    0\n",
       "7556    0\n",
       "       ..\n",
       "2499    1\n",
       "8439    1\n",
       "5978    0\n",
       "3142    1\n",
       "7875    0\n",
       "Name: Heart Attack Risk, Length: 7010, dtype: int32"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "4ea4ff7d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:44.501553Z",
     "iopub.status.busy": "2024-05-11T11:16:44.501088Z",
     "iopub.status.idle": "2024-05-11T11:16:44.509436Z",
     "shell.execute_reply": "2024-05-11T11:16:44.508641Z"
    },
    "papermill": {
     "duration": 0.087822,
     "end_time": "2024-05-11T11:16:44.511703",
     "exception": false,
     "start_time": "2024-05-11T11:16:44.423881",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8693    0\n",
       "3620    0\n",
       "1092    1\n",
       "3669    0\n",
       "8222    0\n",
       "       ..\n",
       "7694    0\n",
       "7853    0\n",
       "4177    1\n",
       "1608    1\n",
       "1656    1\n",
       "Name: Heart Attack Risk, Length: 1753, dtype: int32"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_y"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ed979fe",
   "metadata": {
    "papermill": {
     "duration": 0.073127,
     "end_time": "2024-05-11T11:16:44.658778",
     "exception": false,
     "start_time": "2024-05-11T11:16:44.585651",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Task.6:**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79ec75ea",
   "metadata": {
    "papermill": {
     "duration": 0.072996,
     "end_time": "2024-05-11T11:16:44.806375",
     "exception": false,
     "start_time": "2024-05-11T11:16:44.733379",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Feature Scaling\n",
    "Feature scaling in machine learning is the process of adjusting the range of features (column) in your dataset to make them comparable and easier for the ML model to understand.\n",
    "Feature scaling is applied on columns which have a large range of values. Since many of the columns in our dataset contain binary values of [0, 1], so there is no need to apply feature scaling\n",
    "\n",
    "We can use the nunique method on the dataframe to see the total number of unique values in each column.\n",
    "\n",
    "Then we can identify columns which have more than 10 unique values. This is useful because then the values of ONLY these columns can be scaled."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9a945ec",
   "metadata": {
    "papermill": {
     "duration": 0.075524,
     "end_time": "2024-05-11T11:16:44.959316",
     "exception": false,
     "start_time": "2024-05-11T11:16:44.883792",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## .nunique"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "b8d209a2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:45.116136Z",
     "iopub.status.busy": "2024-05-11T11:16:45.115693Z",
     "iopub.status.idle": "2024-05-11T11:16:45.137677Z",
     "shell.execute_reply": "2024-05-11T11:16:45.136167Z"
    },
    "papermill": {
     "duration": 0.103312,
     "end_time": "2024-05-11T11:16:45.140425",
     "exception": false,
     "start_time": "2024-05-11T11:16:45.037113",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Age                                True\n",
       "Cholesterol                        True\n",
       "Heart Rate                         True\n",
       "Diabetes                          False\n",
       "Family History                    False\n",
       "Smoking                           False\n",
       "Obesity                           False\n",
       "Alcohol Consumption               False\n",
       "Exercise Hours Per Week            True\n",
       "Diet                              False\n",
       "Previous Heart Problems           False\n",
       "Medication Use                    False\n",
       "Stress Level                      False\n",
       "Sedentary Hours                    True\n",
       "Income                             True\n",
       "BMI                                True\n",
       "Triglycerides                      True\n",
       "Physical Activity                 False\n",
       "Sleep Hours                       False\n",
       "Heart Attack Risk                 False\n",
       "new_column                        False\n",
       "Active Hours                       True\n",
       "systolic                           True\n",
       "dysystolic                         True\n",
       "Sex_Male                          False\n",
       "Country_Australia                 False\n",
       "Country_Brazil                    False\n",
       "Country_Canada                    False\n",
       "Country_China                     False\n",
       "Country_Colombia                  False\n",
       "Country_France                    False\n",
       "Country_Germany                   False\n",
       "Country_India                     False\n",
       "Country_Italy                     False\n",
       "Country_Japan                     False\n",
       "Country_New Zealand               False\n",
       "Country_Nigeria                   False\n",
       "Country_South Africa              False\n",
       "Country_South Korea               False\n",
       "Country_Spain                     False\n",
       "Country_Thailand                  False\n",
       "Country_United Kingdom            False\n",
       "Country_United States             False\n",
       "Country_Vietnam                   False\n",
       "Continent_Asia                    False\n",
       "Continent_Australia               False\n",
       "Continent_Europe                  False\n",
       "Continent_North America           False\n",
       "Continent_South America           False\n",
       "Hemisphere_Southern Hemisphere    False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Identify numeric columns with more than 10 unique values\n",
    "# This helps us avoid scaling binary columns\n",
    "\n",
    "nunique_10 = df.nunique() > 10\n",
    "nunique_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "1835c15e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:45.289741Z",
     "iopub.status.busy": "2024-05-11T11:16:45.289265Z",
     "iopub.status.idle": "2024-05-11T11:16:45.297797Z",
     "shell.execute_reply": "2024-05-11T11:16:45.296384Z"
    },
    "papermill": {
     "duration": 0.087799,
     "end_time": "2024-05-11T11:16:45.301070",
     "exception": false,
     "start_time": "2024-05-11T11:16:45.213271",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Age', 'Cholesterol', 'Heart Rate', 'Exercise Hours Per Week',\n",
      "       'Sedentary Hours', 'Income', 'BMI', 'Triglycerides', 'Active Hours',\n",
      "       'systolic', 'dysystolic'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "# Get the names of columns which have more than 10 unique values\n",
    "\n",
    "cols_to_scale = df.loc[:, nunique_10].columns\n",
    "print(cols_to_scale)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d62a263",
   "metadata": {
    "papermill": {
     "duration": 0.074492,
     "end_time": "2024-05-11T11:16:45.447592",
     "exception": false,
     "start_time": "2024-05-11T11:16:45.373100",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We saw earlier in **Task4** that there were  **65% people who DID NOT have risk of heart attack and 35% people who were at heart attack risk**.\n",
    "\n",
    "This shows that our dataset is **highly imbalanced and one value dominates the other**. This can be an issue for model. If it only sees data related to patients which do not have any risk then it does not perform well when we make preditions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "71bc9c10",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:45.602016Z",
     "iopub.status.busy": "2024-05-11T11:16:45.601542Z",
     "iopub.status.idle": "2024-05-11T11:16:45.611476Z",
     "shell.execute_reply": "2024-05-11T11:16:45.610563Z"
    },
    "papermill": {
     "duration": 0.090231,
     "end_time": "2024-05-11T11:16:45.613757",
     "exception": false,
     "start_time": "2024-05-11T11:16:45.523526",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Heart Attack Risk\n",
       "0    0.641789\n",
       "1    0.358211\n",
       "Name: proportion, dtype: float64"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check the value counts of y variable which contains \"Heart Attack Risk\" values\n",
    "# This helps us to see the imbalance in dataset\n",
    "\n",
    "y.value_counts(normalize = True)  #show in percentage"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6f139ff",
   "metadata": {
    "papermill": {
     "duration": 0.073759,
     "end_time": "2024-05-11T11:16:45.762597",
     "exception": false,
     "start_time": "2024-05-11T11:16:45.688838",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### SMOTE\n",
    "SMOTE (imblearn.over_sampling): This is the over-sampling technique used to handle imbalanced datasets by creating synthetic samples of the minority class.\n",
    "In our case the **minority class** are people NOT at heart attack risK. When we use SMOTE then it will create synthetic dataset in which all classes will have equal representaion.\n",
    "\n",
    "We can use the fit_resample function from SMOTE object to create the synthetic dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "e8cf3553",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:45.914228Z",
     "iopub.status.busy": "2024-05-11T11:16:45.913270Z",
     "iopub.status.idle": "2024-05-11T11:16:46.624528Z",
     "shell.execute_reply": "2024-05-11T11:16:46.623085Z"
    },
    "papermill": {
     "duration": 0.790574,
     "end_time": "2024-05-11T11:16:46.627994",
     "exception": false,
     "start_time": "2024-05-11T11:16:45.837420",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# import SMOTE & create a new dataset in which classes have equal representaion\n",
    "\n",
    "from imblearn.over_sampling import SMOTE\n",
    "\n",
    "smote = SMOTE(random_state = 365)\n",
    "\n",
    "# apply smote technique on X and y\n",
    "\n",
    "X_smote, y_smote = smote.fit_resample(x, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "0c86ab8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:46.779998Z",
     "iopub.status.busy": "2024-05-11T11:16:46.779243Z",
     "iopub.status.idle": "2024-05-11T11:16:46.790638Z",
     "shell.execute_reply": "2024-05-11T11:16:46.789208Z"
    },
    "papermill": {
     "duration": 0.089152,
     "end_time": "2024-05-11T11:16:46.793175",
     "exception": false,
     "start_time": "2024-05-11T11:16:46.704023",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Heart Attack Risk\n",
       "0    0.5\n",
       "1    0.5\n",
       "Name: proportion, dtype: float64"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check the value_counts of y_smote to see that imbalance is removed\n",
    "\n",
    "y_smote.value_counts(normalize = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "1ce586d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:46.943032Z",
     "iopub.status.busy": "2024-05-11T11:16:46.942412Z",
     "iopub.status.idle": "2024-05-11T11:16:47.049190Z",
     "shell.execute_reply": "2024-05-11T11:16:47.047578Z"
    },
    "papermill": {
     "duration": 0.186201,
     "end_time": "2024-05-11T11:16:47.052438",
     "exception": false,
     "start_time": "2024-05-11T11:16:46.866237",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visulaize value_counts of y_smote\n",
    "\n",
    "plt.pie(y_smote.value_counts(), autopct=\"%1.1f%%\", startangle = 140)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02459235",
   "metadata": {
    "papermill": {
     "duration": 0.076613,
     "end_time": "2024-05-11T11:16:47.203048",
     "exception": false,
     "start_time": "2024-05-11T11:16:47.126435",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Once the data is separated then we can **split data** into training and test datasets.\n",
    "\n",
    "We can use train_test_split function from sklearn.model_selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "0ce6394f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:47.357152Z",
     "iopub.status.busy": "2024-05-11T11:16:47.356642Z",
     "iopub.status.idle": "2024-05-11T11:16:47.377906Z",
     "shell.execute_reply": "2024-05-11T11:16:47.376250Z"
    },
    "papermill": {
     "duration": 0.102275,
     "end_time": "2024-05-11T11:16:47.381023",
     "exception": false,
     "start_time": "2024-05-11T11:16:47.278748",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# split the dataset\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X_smote, y_smote, test_size=0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "ed09a8ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:47.533515Z",
     "iopub.status.busy": "2024-05-11T11:16:47.533014Z",
     "iopub.status.idle": "2024-05-11T11:16:47.539985Z",
     "shell.execute_reply": "2024-05-11T11:16:47.538862Z"
    },
    "papermill": {
     "duration": 0.085685,
     "end_time": "2024-05-11T11:16:47.542635",
     "exception": false,
     "start_time": "2024-05-11T11:16:47.456950",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "Rows in X_train: 8998\n",
      "Rows in y_train: 8998\n",
      "\n",
      "Rows in X_test: 2250\n",
      "Rows in y_test: 2250 \n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(f\"\"\"\n",
    "\n",
    "Rows in X_train: {X_train.shape[0]}\n",
    "Rows in y_train: {y_train.shape[0]}\n",
    "\n",
    "Rows in X_test: {X_test.shape[0]}\n",
    "Rows in y_test: {y_test.shape[0]} \n",
    "\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f76605f",
   "metadata": {
    "papermill": {
     "duration": 0.074798,
     "end_time": "2024-05-11T11:16:47.692331",
     "exception": false,
     "start_time": "2024-05-11T11:16:47.617533",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "After splitting the data we can now scale the values in our dataset. It is a better practice to **scale values after splitting**.\n",
    "\n",
    "There are different techniques for feature scaling but the we will use RobustScaler class from sklearn for feature scaling."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "b48d7666",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:47.843073Z",
     "iopub.status.busy": "2024-05-11T11:16:47.842555Z",
     "iopub.status.idle": "2024-05-11T11:16:47.868015Z",
     "shell.execute_reply": "2024-05-11T11:16:47.866821Z"
    },
    "papermill": {
     "duration": 0.104401,
     "end_time": "2024-05-11T11:16:47.870975",
     "exception": false,
     "start_time": "2024-05-11T11:16:47.766574",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Scale the values of cols_to_transform using RobustScaler\n",
    "\n",
    "from sklearn.preprocessing import RobustScaler\n",
    "\n",
    "scaler = RobustScaler()\n",
    "\n",
    "scaler.fit( X_train[cols_to_scale] )\n",
    "\n",
    "X_train[cols_to_scale] = scaler.transform(X_train[cols_to_scale])\n",
    "\n",
    "X_test[cols_to_scale] = scaler.transform(X_test[cols_to_scale])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0740c61",
   "metadata": {
    "papermill": {
     "duration": 0.076191,
     "end_time": "2024-05-11T11:16:48.019948",
     "exception": false,
     "start_time": "2024-05-11T11:16:47.943757",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Once we have cleaned and preproceesed the dataset then we can now move toward model building. Since this is a binary classification problem the **models used** for this notebook are\n",
    "\n",
    "- **GaussianNB (Naive Bayes)**\n",
    "- **LogisticRegression**\n",
    "- **DecisionTreeClassifier**\n",
    "- **RandomForestClassifier**\n",
    "- **KNeighborsClassifie**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "ceb4a20f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:48.168265Z",
     "iopub.status.busy": "2024-05-11T11:16:48.167625Z",
     "iopub.status.idle": "2024-05-11T11:16:48.177861Z",
     "shell.execute_reply": "2024-05-11T11:16:48.176185Z"
    },
    "papermill": {
     "duration": 0.087747,
     "end_time": "2024-05-11T11:16:48.180831",
     "exception": false,
     "start_time": "2024-05-11T11:16:48.093084",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 1. import the models\n",
    "\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.neighbors import KNeighborsClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "38814408",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:48.332115Z",
     "iopub.status.busy": "2024-05-11T11:16:48.331623Z",
     "iopub.status.idle": "2024-05-11T11:16:48.364693Z",
     "shell.execute_reply": "2024-05-11T11:16:48.363103Z"
    },
    "papermill": {
     "duration": 0.112111,
     "end_time": "2024-05-11T11:16:48.367501",
     "exception": false,
     "start_time": "2024-05-11T11:16:48.255390",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "68.53333333333333\n"
     ]
    }
   ],
   "source": [
    "# 2. train GaussianNB model\n",
    "\n",
    "clf = GaussianNB()\n",
    "\n",
    "clf.fit(X_train, y_train)\n",
    "\n",
    "clf_score = clf.score(X_test, y_test)\n",
    "\n",
    "print(clf_score * 100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "0bdfbb10",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:48.514054Z",
     "iopub.status.busy": "2024-05-11T11:16:48.513505Z",
     "iopub.status.idle": "2024-05-11T11:16:48.775939Z",
     "shell.execute_reply": "2024-05-11T11:16:48.774302Z"
    },
    "papermill": {
     "duration": 0.340668,
     "end_time": "2024-05-11T11:16:48.780082",
     "exception": false,
     "start_time": "2024-05-11T11:16:48.439414",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "71.06666666666666\n"
     ]
    }
   ],
   "source": [
    "# 3. train LogisticRegression model\n",
    "\n",
    "lr = LogisticRegression()\n",
    "\n",
    "lr.fit(X_train, y_train)\n",
    "\n",
    "lr_score = lr.score(X_test, y_test)\n",
    "\n",
    "print(lr_score * 100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "35d41f2b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:49.003743Z",
     "iopub.status.busy": "2024-05-11T11:16:49.003050Z",
     "iopub.status.idle": "2024-05-11T11:16:49.198354Z",
     "shell.execute_reply": "2024-05-11T11:16:49.196677Z"
    },
    "papermill": {
     "duration": 0.278706,
     "end_time": "2024-05-11T11:16:49.201586",
     "exception": false,
     "start_time": "2024-05-11T11:16:48.922880",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "61.86666666666667\n"
     ]
    }
   ],
   "source": [
    "# 4. train DecisionTreeClassifier model\n",
    "\n",
    "dtr = DecisionTreeClassifier()\n",
    "\n",
    "dtr.fit(X_train, y_train)\n",
    "\n",
    "dtr_score = dtr.score(X_test, y_test)\n",
    "\n",
    "print(dtr_score * 100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "51032f2c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:49.352559Z",
     "iopub.status.busy": "2024-05-11T11:16:49.351639Z",
     "iopub.status.idle": "2024-05-11T11:16:51.979508Z",
     "shell.execute_reply": "2024-05-11T11:16:51.978200Z"
    },
    "papermill": {
     "duration": 2.707656,
     "end_time": "2024-05-11T11:16:51.983062",
     "exception": false,
     "start_time": "2024-05-11T11:16:49.275406",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "69.28888888888889\n"
     ]
    }
   ],
   "source": [
    "# 4. train RandomForestClassifier model\n",
    "\n",
    "rf = RandomForestClassifier()\n",
    "\n",
    "rf.fit(X_train, y_train)\n",
    "\n",
    "rf_score = rf.score(X_test, y_test)\n",
    "\n",
    "print(rf_score * 100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "ea898a41",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:52.142538Z",
     "iopub.status.busy": "2024-05-11T11:16:52.141772Z",
     "iopub.status.idle": "2024-05-11T11:16:52.380022Z",
     "shell.execute_reply": "2024-05-11T11:16:52.378556Z"
    },
    "papermill": {
     "duration": 0.318021,
     "end_time": "2024-05-11T11:16:52.382651",
     "exception": false,
     "start_time": "2024-05-11T11:16:52.064630",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "60.84444444444445\n"
     ]
    }
   ],
   "source": [
    "# 4. train KNeighborsClassifier model\n",
    "\n",
    "knn = KNeighborsClassifier()\n",
    "\n",
    "knn.fit(X_train, y_train)\n",
    "\n",
    "knn_score = knn.score(X_test, y_test)\n",
    "\n",
    "print(knn_score * 100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef6d57b6",
   "metadata": {
    "papermill": {
     "duration": 0.074426,
     "end_time": "2024-05-11T11:16:52.531805",
     "exception": false,
     "start_time": "2024-05-11T11:16:52.457379",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now that we have **trained the models** we can now get **predictions** for X_test\n",
    "\n",
    "We can use the predict function on the trained models to get the predictions.\n",
    "\n",
    "To make the code easier we have created a **list of trained models**. And then a empty dictionary is created which stores the model_name as key and predictions as value.\n",
    "\n",
    "To get the model_name we need to see what is the output when we convert model into a string i.e:\n",
    "\n",
    "str(lr)   outputs -->  LogisticRegression()\n",
    "\n",
    "So we need to split on the opening bracket i.e: \"(\". This will return us a list and then we can index into the list and get the value at index 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "05418858",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:52.689501Z",
     "iopub.status.busy": "2024-05-11T11:16:52.688106Z",
     "iopub.status.idle": "2024-05-11T11:16:53.077517Z",
     "shell.execute_reply": "2024-05-11T11:16:53.075397Z"
    },
    "papermill": {
     "duration": 0.470904,
     "end_time": "2024-05-11T11:16:53.080162",
     "exception": false,
     "start_time": "2024-05-11T11:16:52.609258",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'GaussianNB': array([1, 0, 0, ..., 0, 0, 0], dtype=int32), 'LogisticRegression': array([1, 0, 0, ..., 0, 0, 0], dtype=int32), 'DecisionTreeClassifier': array([0, 1, 0, ..., 0, 0, 0], dtype=int32), 'RandomForestClassifier': array([1, 1, 0, ..., 0, 0, 0], dtype=int32), 'KNeighborsClassifier': array([1, 1, 0, ..., 1, 1, 1], dtype=int32)}\n"
     ]
    }
   ],
   "source": [
    "# Get predictions of each model\n",
    "# Store the name of model as key and predictions as value in a dictionary\n",
    "\n",
    "models = [clf, lr, dtr, rf, knn]\n",
    "\n",
    "model_predictions = {}\n",
    "\n",
    "for model in models:\n",
    "    model_name = str(model).split(\"(\")[0]\n",
    "    \n",
    "    model_predictions[model_name] = model.predict(X_test)\n",
    "    \n",
    "print(model_predictions)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "89485b43",
   "metadata": {
    "papermill": {
     "duration": 0.073166,
     "end_time": "2024-05-11T11:16:53.226175",
     "exception": false,
     "start_time": "2024-05-11T11:16:53.153009",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now that we have trained and made predictions on the model, we can **evaluate performance** of models. The **metrics** used for assessing the model performance are: [ F1 Score ,Precision, Accuracy, Recall ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "3254c53c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:53.377119Z",
     "iopub.status.busy": "2024-05-11T11:16:53.376247Z",
     "iopub.status.idle": "2024-05-11T11:16:53.440862Z",
     "shell.execute_reply": "2024-05-11T11:16:53.439412Z"
    },
    "papermill": {
     "duration": 0.144334,
     "end_time": "2024-05-11T11:16:53.443916",
     "exception": false,
     "start_time": "2024-05-11T11:16:53.299582",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Evaluate the performance of models\n",
    "# Use metrics accuracy_score, f1_score, precision_score, recall_score for evaluation\n",
    "# Store the evaluation result in a dictionary\n",
    "\n",
    "from sklearn.metrics import accuracy_score, \\\n",
    "                            f1_score, precision_score, recall_score\n",
    "\n",
    "\n",
    "model_evaluation = {}\n",
    "\n",
    "\n",
    "for model, preds in model_predictions.items():\n",
    "# #    Print Statements to see how we can build the logic for population model_evaluation\n",
    "#     print(model, \"\\n\")\n",
    "#     print(round(accuracy_score(y_test, preds), 2))\n",
    "#     print(round(f1_score(y_test, preds), 2))\n",
    "#     print(round(precision_score(y_test, preds), 2))\n",
    "#     print(round(recall_score(y_test, preds), 2))\n",
    "#     print(\"\\n\\n\\n\")\n",
    "\n",
    "\n",
    "    model_evaluation[model] = [\n",
    "        round(accuracy_score(y_test, preds) * 100, 2) ,\n",
    "        round(f1_score(y_test, preds) * 100, 2),\n",
    "        round(precision_score(y_test, preds) * 100, 2) ,\n",
    "        round(recall_score(y_test, preds) * 100, 2),\n",
    "    ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "c05b28a2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-11T11:16:53.593942Z",
     "iopub.status.busy": "2024-05-11T11:16:53.592720Z",
     "iopub.status.idle": "2024-05-11T11:16:53.706327Z",
     "shell.execute_reply": "2024-05-11T11:16:53.705140Z"
    },
    "papermill": {
     "duration": 0.191467,
     "end_time": "2024-05-11T11:16:53.708854",
     "exception": false,
     "start_time": "2024-05-11T11:16:53.517387",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_83c0e_row0_col0 {\n",
       "  background-color: #687188;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row0_col1 {\n",
       "  background-color: #737f92;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row0_col2 {\n",
       "  background-color: #4d4d6b;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row0_col3 {\n",
       "  background-color: #6b748b;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row0_col4, #T_83c0e_row2_col2 {\n",
       "  background-color: #4a4966;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row1_col0 {\n",
       "  background-color: #4f4f6e;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row1_col1 {\n",
       "  background-color: #43435e;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row1_col2 {\n",
       "  background-color: #515171;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row1_col3 {\n",
       "  background-color: #505070;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row1_col4 {\n",
       "  background-color: #646b84;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row2_col0 {\n",
       "  background-color: #8aa0aa;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row2_col1 {\n",
       "  background-color: #ffffff;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_83c0e_row2_col3 {\n",
       "  background-color: #93acb3;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row2_col4 {\n",
       "  background-color: #3c3b53;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row3_col0 {\n",
       "  background-color: #262636;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row3_col1 {\n",
       "  background-color: #000000;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row3_col2 {\n",
       "  background-color: #5a5d7a;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row3_col3 {\n",
       "  background-color: #252533;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_83c0e_row3_col4 {\n",
       "  background-color: #9ebbbe;\n",
       "  color: #000000;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_83c0e\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_83c0e_level0_col0\" class=\"col_heading level0 col0\" >GaussianNB</th>\n",
       "      <th id=\"T_83c0e_level0_col1\" class=\"col_heading level0 col1\" >LogisticRegression</th>\n",
       "      <th id=\"T_83c0e_level0_col2\" class=\"col_heading level0 col2\" >DecisionTreeClassifier</th>\n",
       "      <th id=\"T_83c0e_level0_col3\" class=\"col_heading level0 col3\" >RandomForestClassifier</th>\n",
       "      <th id=\"T_83c0e_level0_col4\" class=\"col_heading level0 col4\" >KNeighborsClassifier</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_83c0e_level0_row0\" class=\"row_heading level0 row0\" >Accuracy</th>\n",
       "      <td id=\"T_83c0e_row0_col0\" class=\"data row0 col0\" >68.530000</td>\n",
       "      <td id=\"T_83c0e_row0_col1\" class=\"data row0 col1\" >71.070000</td>\n",
       "      <td id=\"T_83c0e_row0_col2\" class=\"data row0 col2\" >61.870000</td>\n",
       "      <td id=\"T_83c0e_row0_col3\" class=\"data row0 col3\" >69.290000</td>\n",
       "      <td id=\"T_83c0e_row0_col4\" class=\"data row0 col4\" >60.840000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_83c0e_level0_row1\" class=\"row_heading level0 row1\" >F1 Score</th>\n",
       "      <td id=\"T_83c0e_row1_col0\" class=\"data row1 col0\" >62.180000</td>\n",
       "      <td id=\"T_83c0e_row1_col1\" class=\"data row1 col1\" >59.290000</td>\n",
       "      <td id=\"T_83c0e_row1_col2\" class=\"data row1 col2\" >62.860000</td>\n",
       "      <td id=\"T_83c0e_row1_col3\" class=\"data row1 col3\" >62.590000</td>\n",
       "      <td id=\"T_83c0e_row1_col4\" class=\"data row1 col4\" >67.530000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_83c0e_level0_row2\" class=\"row_heading level0 row2\" >Precision</th>\n",
       "      <td id=\"T_83c0e_row2_col0\" class=\"data row2 col0\" >77.090000</td>\n",
       "      <td id=\"T_83c0e_row2_col1\" class=\"data row2 col1\" >98.340000</td>\n",
       "      <td id=\"T_83c0e_row2_col2\" class=\"data row2 col2\" >60.850000</td>\n",
       "      <td id=\"T_83c0e_row2_col3\" class=\"data row2 col3\" >79.180000</td>\n",
       "      <td id=\"T_83c0e_row2_col4\" class=\"data row2 col4\" >57.390000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_83c0e_level0_row3\" class=\"row_heading level0 row3\" >Recall</th>\n",
       "      <td id=\"T_83c0e_row3_col0\" class=\"data row3 col0\" >52.100000</td>\n",
       "      <td id=\"T_83c0e_row3_col1\" class=\"data row3 col1\" >42.440000</td>\n",
       "      <td id=\"T_83c0e_row3_col2\" class=\"data row3 col2\" >65.000000</td>\n",
       "      <td id=\"T_83c0e_row3_col3\" class=\"data row3 col3\" >51.750000</td>\n",
       "      <td id=\"T_83c0e_row3_col4\" class=\"data row3 col4\" >82.010000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7ff4a66041f0>"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results_df = pd.DataFrame(model_evaluation, index=[\"Accuracy\", \"F1 Score\", \"Precision\", \n",
    "\"Recall\"])\n",
    "\n",
    "results_df.style.background_gradient(axis=None, cmap=\"bone\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 3786485,
     "sourceId": 6552418,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30646,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 39.653321,
   "end_time": "2024-05-11T11:16:54.811530",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-05-11T11:16:15.158209",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
